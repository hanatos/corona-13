const float out_x =  + 2.19425e-05  + 52.9073 *dx + -0.306395 *x + -15.8883 *dx*lens_ipow(dy, 2) + -24.3203 *lens_ipow(dx, 3) + 0.162736 *y*dx*dy + 0.263571 *x*lens_ipow(dy, 2) + -0.00398067 *x*y*dy + -0.000318567 *x*lens_ipow(y, 2) + -9.77267e-06 *lens_ipow(x, 2)*dy + -0.012026 *lens_ipow(x, 2)*dx + -0.000357596 *lens_ipow(x, 3) + 0.0792932 *x*lens_ipow(lambda, 3) + 8.50345e-09 *x*lens_ipow(y, 3) + 7.76432 *dx*lens_ipow(lambda, 4) + 0.000427785 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.000818465 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -3.07696e-07 *lens_ipow(x, 3)*lens_ipow(y, 2) + -0.000994446 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 3) + 1403.52 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + -11.3435 *x*lens_ipow(dy, 6) + 0.0038454 *lens_ipow(x, 3)*lens_ipow(dy, 4) + -2.5206e-05 *lens_ipow(x, 3)*y*dy*lens_ipow(lambda, 2) + 20527 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + 3751.7 *lens_ipow(dx, 9) + -2.00412e-11 *lens_ipow(y, 8)*dx + -1.27612e-12 *x*lens_ipow(y, 8) + -1.51493e-12 *lens_ipow(x, 5)*lens_ipow(y, 4) + -7.85948e-13 *lens_ipow(x, 9) + -1.37203e-05 *x*lens_ipow(y, 4)*lens_ipow(dx, 4)*lambda + -6.90645e-05 *lens_ipow(x, 4)*lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -33.2699 *dx*lens_ipow(lambda, 10) + -66.2609 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -36.3981 *lens_ipow(dx, 3)*lens_ipow(lambda, 8) + -0.419884 *x*lens_ipow(lambda, 10) + 0.0658889 *x*y*lens_ipow(dy, 3)*lens_ipow(lambda, 6) + 3.06616e-08 *x*lens_ipow(y, 6)*lens_ipow(dy, 4) + 0.295963 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -3.17365e-06 *lens_ipow(x, 6)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 2.76606e-08 *lens_ipow(x, 7)*lens_ipow(dx, 4);
const float out_y =  + -0.000137081  + 52.7629 *dy + -0.00167567 *dx + -0.312299 *y + -2.2853e-05 *x + -9.46529 *lens_ipow(dy, 3) + -8.02277 *lens_ipow(dx, 2)*dy + 0.062463 *y*lens_ipow(lambda, 2) + 0.646762 *y*lens_ipow(dy, 2) + 0.397963 *y*lens_ipow(dx, 2) + -0.000317589 *lens_ipow(y, 3) + 0.322632 *x*dx*dy + -0.000317588 *lens_ipow(x, 2)*y + -0.00404451 *lens_ipow(y, 2)*dy*lambda + 6.60074e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -6.10098e-07 *lens_ipow(x, 3)*dy + 7.44775 *dy*lens_ipow(lambda, 4) + -0.0255707 *x*y*dx*lens_ipow(dy, 2) + -0.0126939 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.000637511 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + 1.15502e-06 *lens_ipow(x, 4)*dy + -0.0917648 *y*lens_ipow(lambda, 6) + -7.68566 *y*lens_ipow(dx, 6) + -6.48807e-05 *lens_ipow(y, 4)*lens_ipow(dy, 3) + 4.73822e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2) + -0.00649975 *x*y*dx*lens_ipow(lambda, 4) + -6.17313e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + -20.8179 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 5) + 4059.64 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lambda + -24.2845 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + -2.04223e-12 *lens_ipow(x, 4)*lens_ipow(y, 5) + -8.41834e-13 *lens_ipow(x, 8)*y + -31.7692 *dy*lens_ipow(lambda, 10) + 41377.8 *lens_ipow(dy, 11) + 239373 *lens_ipow(dx, 8)*lens_ipow(dy, 3) + -12.2081 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 6) + 0.0983613 *lens_ipow(y, 3)*lens_ipow(dx, 6)*lens_ipow(lambda, 2) + -2.08845e-10 *lens_ipow(y, 7)*lens_ipow(lambda, 4) + -1.77115e-15 *lens_ipow(y, 11) + -1.51188e-09 *x*lens_ipow(y, 7)*dx*lens_ipow(dy, 2);
const float out_dx =  + -0.56295 *dx + -0.0155829 *x + 0.104956 *dx*lens_ipow(dy, 2) + 0.179396 *lens_ipow(dx, 3) + -0.00228854 *x*lens_ipow(dy, 2) + 2.03873e-06 *x*lens_ipow(y, 2) + 2.26731e-06 *lens_ipow(x, 3) + 0.000109227 *lens_ipow(y, 2)*dx*lambda + 0.000137151 *lens_ipow(x, 2)*dx*lambda + 0.000353448 *x*lens_ipow(lambda, 4) + 1.1983e-09 *lens_ipow(x, 3)*lens_ipow(y, 2) + -1.18216e-10 *x*lens_ipow(y, 5)*dy + 5.71321e-12 *lens_ipow(x, 7)*lens_ipow(lambda, 3) + 1.11274 *y*lens_ipow(dx, 5)*dy*lens_ipow(lambda, 4);
const float out_dy =  + -0.56519 *dy + -0.0155891 *y + -1.74736e-07 *x + 0.00778184 *dy*lens_ipow(lambda, 2) + 0.151137 *lens_ipow(dy, 3) + 0.105552 *lens_ipow(dx, 2)*dy + -0.00243562 *y*lens_ipow(dx, 2) + 8.11353e-05 *lens_ipow(y, 2)*dy + 2.47342e-06 *lens_ipow(y, 3) + 3.08161e-05 *lens_ipow(x, 2)*dy + 2.37184e-06 *lens_ipow(x, 2)*y + 0.000444725 *y*lens_ipow(lambda, 5) + 5.8178e-05 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 3) + -0.00492669 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -2.53778e-10 *x*lens_ipow(y, 5)*dx + -1.73771e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -2.12763e-06 *lens_ipow(y, 4)*lens_ipow(dy, 5) + 1.03051e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy + -2.57585e-13 *lens_ipow(x, 7)*y*dx;
const float out_transmittance =  + 0.167239  + 0.292582 *lambda + -2.56885e-05 *dx + 6.09359e-08 *y + -4.92382e-07 *x + -0.033729 *lens_ipow(dy, 2) + -0.0293781 *lens_ipow(dx, 2) + -8.34256e-06 *lens_ipow(y, 2) + -9.68285e-06 *lens_ipow(x, 2) + -0.23749 *lens_ipow(lambda, 3) + -0.00276445 *y*dy*lambda + 2.06559e-05 *y*lens_ipow(dx, 2) + -0.002689 *x*dx*lambda + 2.68089e-07 *lens_ipow(x, 2)*dy + -8.71852e-09 *lens_ipow(y, 4) + -2.49961e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 1.47464e-08 *lens_ipow(x, 3)*dy + -1.18139e-08 *lens_ipow(x, 4) + -0.114824 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.146725 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -2.00262e-05 *lens_ipow(y, 2)*lens_ipow(lambda, 3) + -0.000567243 *lens_ipow(y, 2)*lens_ipow(dx, 4) + -2.77985e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + 0.0765178 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.000257263 *x*y*dx*dy*lens_ipow(lambda, 2) + -0.000718798 *lens_ipow(x, 2)*lens_ipow(dy, 4) + 3.52859e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 0.0571956 *x*lens_ipow(dx, 5)*lambda + 1.60915e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.00147366 *lens_ipow(y, 2)*lens_ipow(dy, 6) + 0.000204859 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -4.08857e-05 *lens_ipow(x, 2)*lens_ipow(lambda, 6) + 7.4949e-12 *lens_ipow(x, 6)*y*dy + -0.00160834 *y*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -1.0058e-09 *lens_ipow(x, 6)*lens_ipow(dx, 2)*lambda + -1.53872e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*dy + -2.81144e-12 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.431642 *lens_ipow(lambda, 11) + 4.59538 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 7) + 3.05745 *lens_ipow(dx, 4)*lens_ipow(lambda, 7);
