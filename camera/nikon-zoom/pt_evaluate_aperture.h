const float out_x =  + -2.2864e-05  + 61.7449 *dx + 0.995072 *x + -0.00620699 *dx*dy + 1.89009e-06 *x*y + 53.4254 *dx*lens_ipow(dy, 2) + 55.5556 *lens_ipow(dx, 3) + 1.11534 *y*dx*dy + -0.00159888 *lens_ipow(y, 2)*dx + 0.652066 *x*lens_ipow(dy, 2) + 1.85633 *x*lens_ipow(dx, 2) + -0.000339802 *x*lens_ipow(y, 2) + -0.000319854 *lens_ipow(x, 3) + 0.0079601 *x*lens_ipow(lambda, 3) + 3.44221e-05 *x*y*dx*dy + -0.990878 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.707743 *dx*lens_ipow(lambda, 5) + 6.59443e-05 *x*lens_ipow(y, 2)*lens_ipow(lambda, 3) + -0.000161494 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2)*lambda + 1.09219e-07 *lens_ipow(x, 5)*lens_ipow(lambda, 3) + -12888.8 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + -0.0319596 *lens_ipow(y, 3)*lens_ipow(dx, 5)*dy + 6.31065e-06 *lens_ipow(y, 4)*dx*lens_ipow(lambda, 4) + 4.2464e-12 *lens_ipow(y, 8)*dx + 8.9391e-08 *x*lens_ipow(y, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.00114401 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 4) + 0.000149891 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 5) + -1.32075e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 4) + 0.000698271 *lens_ipow(x, 4)*lens_ipow(dx, 5) + -1.26756e-05 *lens_ipow(x, 5)*lens_ipow(dy, 4) + -1.05387e-12 *lens_ipow(x, 5)*lens_ipow(y, 4) + -6.14316e-13 *lens_ipow(x, 9) + -1.49913 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 5) + -29803.3 *lens_ipow(dx, 11) + 212.242 *y*lens_ipow(dx, 5)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -0.471225 *lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 5) + -0.622995 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -0.262091 *lens_ipow(x, 3)*lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -6.01552e-06 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.14297e-11 *lens_ipow(x, 9)*lens_ipow(dx, 2);
const float out_y =  + -5.735e-05  + 61.7517 *dy + 0.994438 *y + -1.60575e-06 *x*y + 54.2948 *lens_ipow(dy, 3) + 51.8407 *lens_ipow(dx, 2)*dy + 1.82013 *y*lens_ipow(dy, 2) + 0.636496 *y*lens_ipow(dx, 2) + -0.000317611 *lens_ipow(y, 3) + 1.05814 *x*dx*dy + 8.86919e-08 *x*lens_ipow(y, 2) + -0.00180391 *lens_ipow(x, 2)*dy + -0.000322421 *lens_ipow(x, 2)*y + 0.0972283 *lens_ipow(dx, 3)*dy + 0.0125377 *y*lens_ipow(lambda, 3) + 1.0348e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 0.000447567 *x*lens_ipow(y, 2)*dx*dy + -9.13585e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + 0.698269 *dy*lens_ipow(lambda, 5) + -3.55578e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2) + 0.151471 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.00158399 *lens_ipow(x, 2)*y*lens_ipow(dy, 4) + -1.17166e-10 *lens_ipow(x, 6)*y + 8.10225e-08 *lens_ipow(y, 5)*lens_ipow(lambda, 3) + -6.56211e-06 *lens_ipow(x, 3)*y*dx*lens_ipow(lambda, 3) + -18.8099 *y*lens_ipow(dx, 8) + 9.66381e-10 *lens_ipow(y, 7)*lens_ipow(dy, 2) + -3.40349e-13 *lens_ipow(y, 9) + 1.93644e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 4) + -5.98583e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -7.39297e-08 *lens_ipow(x, 5)*y*lens_ipow(dx, 3) + 1.1384e-12 *lens_ipow(x, 8)*dy + -1.95615 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + 597.703 *lens_ipow(dy, 11) + -290341 *lens_ipow(dx, 4)*lens_ipow(dy, 7) + -0.0346746 *y*lens_ipow(lambda, 10) + -0.394193 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 8) + -0.616356 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 6) + 21.6478 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -7.1867e-06 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 3);
const float out_dx =  + 3.78959e-06  + 1.14424 *dx + -3.63781e-07 *y + 0.0022763 *x + 6.36787 *dx*lens_ipow(dy, 2) + 6.42162 *lens_ipow(dx, 3) + 0.208823 *y*dx*dy + 0.0015449 *lens_ipow(y, 2)*dx + 0.107079 *x*lens_ipow(dy, 2) + 0.318294 *x*lens_ipow(dx, 2) + 0.00318295 *x*y*dy + 1.74886e-05 *x*lens_ipow(y, 2) + 0.00473914 *lens_ipow(x, 2)*dx + 1.71801e-05 *lens_ipow(x, 3) + 0.000463255 *x*lens_ipow(lambda, 3) + 3.60722e-10 *x*lens_ipow(y, 3) + -2.14465e-08 *lens_ipow(y, 4)*dx + 3.70411e-05 *lens_ipow(x, 2)*y*dx*dy + 3.45794e-06 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 12.41 *dx*lens_ipow(dy, 6) + 73.0481 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + 13.8836 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 0.012579 *x*y*lens_ipow(dx, 4)*dy + 0.000193739 *x*lens_ipow(y, 2)*lens_ipow(dy, 4) + 2.63965e-05 *lens_ipow(x, 3)*lens_ipow(dy, 4) + -1.38644e-11 *lens_ipow(x, 3)*lens_ipow(y, 4) + -3.51631e-11 *lens_ipow(x, 5)*lens_ipow(y, 2) + -1.03864e-09 *lens_ipow(x, 6)*dx + 1.40472e-05 *x*lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -1.64294e-08 *x*lens_ipow(y, 5)*lens_ipow(dx, 2)*dy + -2.49063e-14 *x*lens_ipow(y, 8) + 0.0453838 *lens_ipow(x, 2)*lens_ipow(dx, 7) + -3.06655e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 3) + 3.22737 *lens_ipow(dx, 5)*lens_ipow(lambda, 6) + 9.11008e-05 *lens_ipow(y, 4)*lens_ipow(dx, 7) + -0.00231114 *x*lens_ipow(lambda, 10) + -31.5911 *x*lens_ipow(dy, 10) + -0.390253 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 9.07888e-13 *lens_ipow(x, 7)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.12735e-16 *lens_ipow(x, 11);
const float out_dy =  + 5.09731e-07  + 1.146 *dy + 0.0023323 *y + 8.25174e-08 *x + -8.67855e-08 *x*y + 6.26071 *lens_ipow(dy, 3) + 6.30612 *lens_ipow(dx, 2)*dy + 0.314181 *y*lens_ipow(dy, 2) + 0.106684 *y*lens_ipow(dx, 2) + 0.00470579 *lens_ipow(y, 2)*dy + 1.6901e-05 *lens_ipow(y, 3) + 0.207388 *x*dx*dy + 0.00313476 *x*y*dx + 0.00151652 *lens_ipow(x, 2)*dy + 1.66364e-05 *lens_ipow(x, 2)*y + 0.000259097 *y*lens_ipow(lambda, 3) + 0.00141462 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 2.7554e-05 *x*lens_ipow(y, 2)*dx*dy + 0.00262043 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 5.76635e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -3.47593e-08 *lens_ipow(x, 4)*dy + -19.2268 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 23.3698 *lens_ipow(dx, 6)*dy + 0.00775278 *lens_ipow(y, 2)*lens_ipow(dy, 5) + 0.000175211 *lens_ipow(y, 3)*lens_ipow(dx, 4) + -1.73188e-09 *lens_ipow(y, 6)*dy + 0.0181226 *x*y*dx*lens_ipow(dy, 4) + 9.69688e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 4) + -3.883e-11 *lens_ipow(x, 2)*lens_ipow(y, 5) + 1.08349e-10 *lens_ipow(y, 7)*lens_ipow(dx, 2) + -0.0926821 *lens_ipow(x, 2)*lens_ipow(dy, 7) + 9.97837e-09 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 4) + 5.2171e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy + -5.12527e-10 *lens_ipow(x, 6)*lens_ipow(dy, 3) + -8.92458e-14 *lens_ipow(x, 6)*lens_ipow(y, 3) + 0.763118 *lens_ipow(dy, 3)*lens_ipow(lambda, 8) + -0.00967927 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 6) + -0.0905217 *lens_ipow(y, 3)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -1.57748e-16 *lens_ipow(y, 11) + 1.0241e-09 *lens_ipow(x, 5)*y*lens_ipow(dx, 3)*lens_ipow(dy, 2);
const float out_transmittance =  + 0.674243  + 0.15019 *lambda + -3.13117e-05 *dx + -1.37711e-07 *y + -5.86881e-07 *x + -0.0849566 *lens_ipow(dy, 2) + 0.000600637 *dx*dy + -0.0849466 *lens_ipow(dx, 2) + -0.00273422 *y*dy + 1.6236e-05 *y*dx + -2.28689e-05 *lens_ipow(y, 2) + -0.00280849 *x*dx + 1.27446e-07 *x*y + -2.34445e-05 *lens_ipow(x, 2) + -0.125873 *lens_ipow(lambda, 3) + 2.47658e-05 *y*lens_ipow(dx, 2) + -1.83583e-05 *x*dx*dy + 0.199404 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -5.44112e-05 *x*y*dx*dy + 2.92596e-06 *x*y*lens_ipow(dx, 2) + -3.63441e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -9.98122e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + 4.32838e-08 *lens_ipow(x, 3)*dy + 8.14952e-06 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -1.38617e-07 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -1.39481e-11 *lens_ipow(y, 6) + 8.73043e-10 *lens_ipow(x, 5)*dx + -5.96499e-07 *lens_ipow(x, 2)*y*dy*lens_ipow(lambda, 3) + 9.53381 *lens_ipow(dy, 8) + 7.31915 *lens_ipow(dx, 8) + -0.0535531 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + -0.000914288 *lens_ipow(x, 2)*lens_ipow(dy, 6) + -7.68749e-10 *lens_ipow(x, 6)*lens_ipow(dy, 2) + -0.00677447 *lens_ipow(y, 3)*lens_ipow(dx, 6)*dy + -6.91256e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.00170375 *lens_ipow(x, 2)*y*lens_ipow(dx, 6)*dy + -2.03623e-12 *lens_ipow(x, 2)*lens_ipow(y, 6)*lens_ipow(dx, 2) + 0.000196325 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 4) + 2.50467e-14 *lens_ipow(x, 6)*lens_ipow(y, 3)*dy + 0.227976 *lens_ipow(lambda, 11);
