const float out_x =  + 2.27408e-09  + 9.40161e-08 *dy + 65 *dx + 2.09594e-10 *y + 1 *x + -4.0681e-09 *y*dy + 1.15011e-08 *y*dx + -5.29119e-11 *lens_ipow(y, 2) + -2.65577e-09 *x*dy + -7.65603e-09 *x*dx + 1.33895e-10 *x*y + 5.85864e-11 *lens_ipow(x, 2) + -1.35159e-05 *lens_ipow(dx, 2)*dy + -8.29487e-08 *y*dx*dy + 1.11873e-08 *y*lens_ipow(dx, 2) + -2.59591e-10 *lens_ipow(y, 2)*dy + -1.06425e-09 *lens_ipow(y, 2)*dx + -2.70649e-08 *x*lens_ipow(dy, 2) + -1.47485e-09 *lens_ipow(x, 2)*dy + -2.15172e-11 *lens_ipow(x, 2)*y + -2.45393e-06 *dx*dy*lens_ipow(lambda, 2) + -3.22205e-09 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -9.74692e-07 *x*lens_ipow(dx, 2)*dy + -1.35658e-12 *lens_ipow(x, 3)*y + 0.000234535 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -3.42176e-08 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -1.07268e-09 *lens_ipow(x, 3)*dx*dy + 2.23548e-12 *lens_ipow(x, 4)*dx + 2.24018e-06 *x*lens_ipow(dy, 5) + 8.64462e-08 *x*dx*lens_ipow(lambda, 4) + 1.79726e-08 *x*y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -3.66991e-08 *lens_ipow(x, 2)*lens_ipow(dy, 4) + 3.77071e-09 *lens_ipow(x, 2)*y*lens_ipow(dy, 4) + -3.34941e-11 *lens_ipow(x, 3)*y*dx*lens_ipow(lambda, 2) + -0.114902 *lens_ipow(dx, 7)*lens_ipow(dy, 3) + 4.82923e-16 *x*lens_ipow(y, 7)*dx*dy + -4.46802e-14 *lens_ipow(x, 6)*y*dx*lens_ipow(dy, 2) + -3.07233e-05 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 6) + 0.000638466 *y*lens_ipow(dx, 10) + -3.68773e-09 *lens_ipow(x, 4)*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 3);
const float out_y =  + -1.6903e-09  + 65 *dy + -2.09602e-08 *dx + 1 *y + -1.16464e-09 *x + 5.45112e-07 *dx*dy + 5.12608e-09 *y*dy + 7.68168e-11 *lens_ipow(y, 2) + -1.31964e-08 *x*dy + -2.16388e-09 *x*dx + -6.60343e-11 *x*y + 3.38607e-08 *y*lens_ipow(dx, 2) + 1.38741e-07 *x*lens_ipow(dy, 2) + -2.99743e-08 *x*dx*dy + -7.11455e-08 *x*lens_ipow(dx, 2) + 1.22323e-09 *x*y*dy + -1.52558e-09 *lens_ipow(x, 2)*dy + 9.62841e-12 *lens_ipow(x, 3) + 2.15305e-08 *y*dx*lens_ipow(lambda, 2) + 3.72342e-07 *x*lens_ipow(dy, 3) + 2.53751e-09 *x*y*lens_ipow(dx, 2) + 5.08928e-09 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -6.15124e-13 *lens_ipow(x, 2)*lens_ipow(y, 2) + 1.48272e-05 *lens_ipow(dy, 5) + 8.65769e-05 *dx*lens_ipow(dy, 4) + 1.45594e-06 *y*lens_ipow(dx, 3)*dy + -4.58885e-12 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -4.88226e-14 *lens_ipow(x, 4)*y + -6.54416e-06 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -1.98809e-08 *x*y*dx*dy*lens_ipow(lambda, 2) + -2.86538e-13 *x*lens_ipow(y, 4)*dy + -0.000279357 *lens_ipow(dx, 7) + 2.24792e-08 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 3) + -0.000310699 *lens_ipow(dy, 6)*lens_ipow(lambda, 2) + 6.35914e-10 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + -1.24787e-14 *lens_ipow(x, 7)*lens_ipow(dy, 2) + -0.124796 *lens_ipow(dx, 7)*lens_ipow(dy, 3) + -3.89281e-09 *x*lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -0.000459617 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 7) + -4.09566e-06 *lens_ipow(y, 3)*lens_ipow(dx, 5)*lens_ipow(dy, 3);
const float out_dx =  + 6.00192e-11  + 2.50376e-10 *dy + 1 *dx + 1.03502e-11 *y + -2.40826e-12 *x + -5.73958e-09 *dx*dy + -3.62406e-09 *lens_ipow(dx, 2) + 5.78082e-11 *y*dx + -1.36359e-14 *lens_ipow(y, 2) + -3.65037e-13 *lens_ipow(x, 2) + -9.73885e-09 *dx*lens_ipow(dy, 2) + 8.15663e-11 *x*lens_ipow(dx, 2) + -4.87636e-12 *x*y*dy + 2.36671e-11 *x*y*dx + 4.40988e-07 *lens_ipow(dx, 3)*dy + -4.21174e-11 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.45922e-11 *x*y*lens_ipow(dx, 2) + 4.03979e-11 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 1.26099e-13 *lens_ipow(x, 2)*y*dy + -1.15912e-07 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 1.23141e-10 *x*y*lens_ipow(dx, 2)*dy + -6.83272e-14 *x*lens_ipow(y, 3)*dx + -1.1099e-10 *y*lens_ipow(lambda, 5) + 4.66621e-08 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -4.7903e-15 *lens_ipow(x, 5)*lens_ipow(dy, 2) + 2.07788e-11 *x*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 3) + -1.32945e-08 *lens_ipow(y, 2)*lens_ipow(dx, 6)*lambda + -4.1643e-17 *lens_ipow(y, 7)*dx*dy + -1.65258e-06 *x*dx*lens_ipow(dy, 7) + -2.94633e-05 *y*lens_ipow(dx, 6)*lens_ipow(dy, 3) + 3.4978e-18 *lens_ipow(y, 8)*lens_ipow(dx, 2) + 3.37778e-18 *lens_ipow(x, 2)*lens_ipow(y, 6)*dx*dy + 9.27307e-10 *lens_ipow(x, 3)*lens_ipow(dx, 4)*dy*lens_ipow(lambda, 2) + -0.000611784 *lens_ipow(dx, 3)*lens_ipow(dy, 6)*lens_ipow(lambda, 2) + -0.00220415 *lens_ipow(dx, 7)*lens_ipow(dy, 3)*lambda + 6.00972e-05 *lens_ipow(dx, 9)*lens_ipow(lambda, 2) + 1.08132e-06 *y*lens_ipow(dx, 6)*lens_ipow(lambda, 4) + -3.23839e-08 *lens_ipow(y, 3)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -2.32767e-10 *x*lens_ipow(y, 3)*lens_ipow(dx, 6)*dy + -1.37479e-17 *lens_ipow(x, 7)*y*dx*lens_ipow(dy, 2);
const float out_dy =  + 7.45533e-11  + 1 *dy + -1.14801e-10 *dx + -1.71562e-12 *y + -1.38706e-12 *x + -5.2179e-09 *lens_ipow(dy, 2) + -4.05273e-09 *dx*dy + -2.86197e-09 *lens_ipow(dx, 2) + -3.96147e-13 *lens_ipow(y, 2) + -2.66841e-11 *x*dy + -6.40023e-13 *lens_ipow(x, 2) + -4.58721e-09 *lens_ipow(dx, 2)*dy + 6.93122e-10 *x*lens_ipow(dy, 2) + -8.46011e-11 *x*dx*lambda + 4.39597e-12 *x*y*dx + 4.56749e-14 *lens_ipow(x, 2)*y + 1.59617e-07 *lens_ipow(dx, 3)*dy + -1.27506e-09 *y*dx*dy*lambda + -1.23964e-11 *x*y*dx*dy + 7.03863e-11 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -2.23676e-15 *lens_ipow(x, 3)*y + 1.0605e-10 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 3.45635e-11 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + 2.04907e-10 *x*y*lens_ipow(dy, 3) + -2.90979e-10 *x*y*dx*lens_ipow(dy, 2) + -4.21009e-10 *x*y*lens_ipow(dx, 2)*dy + 9.5847e-07 *lens_ipow(dy, 6) + 1.54819e-09 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 1.47964e-08 *y*lens_ipow(dx, 5) + 1.23202e-07 *x*dx*lens_ipow(dy, 4) + -9.24124e-15 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -2.12014e-06 *y*lens_ipow(dx, 2)*lens_ipow(dy, 5) + 3.15581e-08 *x*lens_ipow(dy, 5)*lens_ipow(lambda, 2) + 4.93641e-10 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -8.48157e-18 *lens_ipow(x, 6)*y*dx + -8.28261e-09 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 5.01729e-08 *lens_ipow(x, 2)*lens_ipow(dx, 5)*lens_ipow(dy, 2) + -6.22663e-09 *lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 4) + 2.83951e-13 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -1.81622e-19 *lens_ipow(x, 6)*lens_ipow(y, 3)*lens_ipow(dy, 2);
const float out_transmittance =  + 1 ;
