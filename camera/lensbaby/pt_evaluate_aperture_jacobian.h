const float dx00 =  + 1  + -2.65577e-09 *dy + -7.65603e-09 *dx + 1.33895e-10 *y + 1.17173e-10 *x + -2.70649e-08 *lens_ipow(dy, 2) + -2.94969e-09 *x*dy + -4.30344e-11 *x*y + -9.74692e-07 *lens_ipow(dx, 2)*dy + -4.06974e-12 *lens_ipow(x, 2)*y + -6.84352e-08 *x*dx*lens_ipow(dy, 2) + -3.21805e-09 *lens_ipow(x, 2)*dx*dy + 8.94191e-12 *lens_ipow(x, 3)*dx + 2.24018e-06 *lens_ipow(dy, 5) + 8.64462e-08 *dx*lens_ipow(lambda, 4) + 1.79726e-08 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -7.33982e-08 *x*lens_ipow(dy, 4) + 7.54142e-09 *x*y*lens_ipow(dy, 4) + -1.00482e-10 *lens_ipow(x, 2)*y*dx*lens_ipow(lambda, 2) + 4.82923e-16 *lens_ipow(y, 7)*dx*dy + -2.68081e-13 *lens_ipow(x, 5)*y*dx*lens_ipow(dy, 2) + -1.47509e-08 *lens_ipow(x, 3)*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 3)+0.0f;
const float dx01 =  + 2.09594e-10  + -4.0681e-09 *dy + 1.15011e-08 *dx + -1.05824e-10 *y + 1.33895e-10 *x + -8.29487e-08 *dx*dy + 1.11873e-08 *lens_ipow(dx, 2) + -5.19182e-10 *y*dy + -2.1285e-09 *y*dx + -2.15172e-11 *lens_ipow(x, 2) + -6.44409e-09 *y*lens_ipow(dx, 2) + -1.35658e-12 *lens_ipow(x, 3) + 1.79726e-08 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 3.77071e-09 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -3.34941e-11 *lens_ipow(x, 3)*dx*lens_ipow(lambda, 2) + 3.38046e-15 *x*lens_ipow(y, 6)*dx*dy + -4.46802e-14 *lens_ipow(x, 6)*dx*lens_ipow(dy, 2) + -3.07233e-05 *lens_ipow(dx, 4)*lens_ipow(lambda, 6) + 0.000638466 *lens_ipow(dx, 10)+0.0f;
const float dx02 =  + 65  + 1.15011e-08 *y + -7.65603e-09 *x + -2.70318e-05 *dx*dy + -8.29487e-08 *y*dy + 2.23746e-08 *y*dx + -1.06425e-09 *lens_ipow(y, 2) + -2.45393e-06 *dy*lens_ipow(lambda, 2) + -6.44409e-09 *lens_ipow(y, 2)*dx + -1.94938e-06 *x*dx*dy + 0.000469069 *dx*lens_ipow(dy, 3) + -3.42176e-08 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -1.07268e-09 *lens_ipow(x, 3)*dy + 2.23548e-12 *lens_ipow(x, 4) + 8.64462e-08 *x*lens_ipow(lambda, 4) + 3.59452e-08 *x*y*dx*lens_ipow(lambda, 2) + -3.34941e-11 *lens_ipow(x, 3)*y*lens_ipow(lambda, 2) + -0.804311 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + 4.82923e-16 *x*lens_ipow(y, 7)*dy + -4.46802e-14 *lens_ipow(x, 6)*y*lens_ipow(dy, 2) + -0.000122893 *y*lens_ipow(dx, 3)*lens_ipow(lambda, 6) + 0.00638466 *y*lens_ipow(dx, 9) + -1.10632e-08 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3)+0.0f;
const float dx03 =  + 9.40161e-08  + -4.0681e-09 *y + -2.65577e-09 *x + -1.35159e-05 *lens_ipow(dx, 2) + -8.29487e-08 *y*dx + -2.59591e-10 *lens_ipow(y, 2) + -5.41298e-08 *x*dy + -1.47485e-09 *lens_ipow(x, 2) + -2.45393e-06 *dx*lens_ipow(lambda, 2) + -9.74692e-07 *x*lens_ipow(dx, 2) + 0.000703604 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -6.84352e-08 *lens_ipow(x, 2)*dx*dy + -1.07268e-09 *lens_ipow(x, 3)*dx + 1.12009e-05 *x*lens_ipow(dy, 4) + -1.46796e-07 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 1.50828e-08 *lens_ipow(x, 2)*y*lens_ipow(dy, 3) + -0.344705 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + 4.82923e-16 *x*lens_ipow(y, 7)*dx + -8.93603e-14 *lens_ipow(x, 6)*y*dx*dy + -3.68773e-09 *lens_ipow(x, 4)*lens_ipow(dx, 3)*lens_ipow(lambda, 3)+0.0f;
const float dx04 =  + -4.90786e-06 *dx*dy*lambda + 3.45785e-07 *x*dx*lens_ipow(lambda, 3) + 3.59452e-08 *x*y*lens_ipow(dx, 2)*lambda + -6.69883e-11 *lens_ipow(x, 3)*y*dx*lambda + -0.00018434 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 5) + -1.10632e-08 *lens_ipow(x, 4)*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2)+0.0f;
const float dx10 =  + -1.16464e-09  + -1.31964e-08 *dy + -2.16388e-09 *dx + -6.60343e-11 *y + 1.38741e-07 *lens_ipow(dy, 2) + -2.99743e-08 *dx*dy + -7.11455e-08 *lens_ipow(dx, 2) + 1.22323e-09 *y*dy + -3.05117e-09 *x*dy + 2.88852e-11 *lens_ipow(x, 2) + 3.72342e-07 *lens_ipow(dy, 3) + 2.53751e-09 *y*lens_ipow(dx, 2) + 1.01786e-08 *x*lens_ipow(dy, 2) + -1.23025e-12 *x*lens_ipow(y, 2) + -9.1777e-12 *x*lens_ipow(y, 2)*dx + -1.9529e-13 *lens_ipow(x, 3)*y + -6.54416e-06 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -1.98809e-08 *y*dx*dy*lens_ipow(lambda, 2) + -2.86538e-13 *lens_ipow(y, 4)*dy + 4.49585e-08 *x*y*dx*lens_ipow(dy, 3) + 1.27183e-09 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + -8.73508e-14 *lens_ipow(x, 6)*lens_ipow(dy, 2) + -3.89281e-09 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx11 =  + 1  + 5.12608e-09 *dy + 1.53634e-10 *y + -6.60343e-11 *x + 3.38607e-08 *lens_ipow(dx, 2) + 1.22323e-09 *x*dy + 2.15305e-08 *dx*lens_ipow(lambda, 2) + 2.53751e-09 *x*lens_ipow(dx, 2) + -1.23025e-12 *lens_ipow(x, 2)*y + 1.45594e-06 *lens_ipow(dx, 3)*dy + -9.1777e-12 *lens_ipow(x, 2)*y*dx + -4.88226e-14 *lens_ipow(x, 4) + -1.98809e-08 *x*dx*dy*lens_ipow(lambda, 2) + -1.14615e-12 *x*lens_ipow(y, 3)*dy + 2.24792e-08 *lens_ipow(x, 2)*dx*lens_ipow(dy, 3) + 1.27183e-09 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 3) + -7.78562e-09 *x*y*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -1.2287e-05 *lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(dy, 3)+0.0f;
const float dx12 =  + -2.09602e-08  + 5.45112e-07 *dy + -2.16388e-09 *x + 6.77214e-08 *y*dx + -2.99743e-08 *x*dy + -1.42291e-07 *x*dx + 2.15305e-08 *y*lens_ipow(lambda, 2) + 5.07502e-09 *x*y*dx + 8.65769e-05 *lens_ipow(dy, 4) + 4.36781e-06 *y*lens_ipow(dx, 2)*dy + -4.58885e-12 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.96325e-05 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.98809e-08 *x*y*dy*lens_ipow(lambda, 2) + -0.0019555 *lens_ipow(dx, 6) + 2.24792e-08 *lens_ipow(x, 2)*y*lens_ipow(dy, 3) + 6.35914e-10 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 3) + -0.873574 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + -0.000459617 *lens_ipow(dy, 3)*lens_ipow(lambda, 7) + -2.04783e-05 *lens_ipow(y, 3)*lens_ipow(dx, 4)*lens_ipow(dy, 3)+0.0f;
const float dx13 =  + 65  + 5.45112e-07 *dx + 5.12608e-09 *y + -1.31964e-08 *x + 2.77483e-07 *x*dy + -2.99743e-08 *x*dx + 1.22323e-09 *x*y + -1.52558e-09 *lens_ipow(x, 2) + 1.11703e-06 *x*lens_ipow(dy, 2) + 1.01786e-08 *lens_ipow(x, 2)*dy + 7.41358e-05 *lens_ipow(dy, 4) + 0.000346308 *dx*lens_ipow(dy, 3) + 1.45594e-06 *y*lens_ipow(dx, 3) + -1.30883e-05 *x*lens_ipow(dx, 3)*dy + -1.98809e-08 *x*y*dx*lens_ipow(lambda, 2) + -2.86538e-13 *x*lens_ipow(y, 4) + 6.74377e-08 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 2) + -0.0018642 *lens_ipow(dy, 5)*lens_ipow(lambda, 2) + 1.90774e-09 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -2.49574e-14 *lens_ipow(x, 7)*dy + -0.374389 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + -7.78562e-09 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 5) + -0.00137885 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 7) + -1.2287e-05 *lens_ipow(y, 3)*lens_ipow(dx, 5)*lens_ipow(dy, 2)+0.0f;
const float dx14 =  + 4.30611e-08 *y*dx*lambda + -3.97617e-08 *x*y*dx*dy*lambda + -0.000621399 *lens_ipow(dy, 6)*lambda + -1.9464e-08 *x*lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.00321732 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 6)+0.0f;
const float dx20 =  + -2.40826e-12  + -7.30075e-13 *x + 8.15663e-11 *lens_ipow(dx, 2) + -4.87636e-12 *y*dy + 2.36671e-11 *y*dx + 1.45922e-11 *y*lens_ipow(dx, 2) + 8.07957e-11 *x*lens_ipow(dx, 2) + 2.52197e-13 *x*y*dy + 1.23141e-10 *y*lens_ipow(dx, 2)*dy + -6.83272e-14 *lens_ipow(y, 3)*dx + 4.66621e-08 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -2.39515e-14 *lens_ipow(x, 4)*lens_ipow(dy, 2) + 2.07788e-11 *lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 3) + -1.65258e-06 *dx*lens_ipow(dy, 7) + 6.75556e-18 *x*lens_ipow(y, 6)*dx*dy + 2.78192e-09 *lens_ipow(x, 2)*lens_ipow(dx, 4)*dy*lens_ipow(lambda, 2) + -2.32767e-10 *lens_ipow(y, 3)*lens_ipow(dx, 6)*dy + -9.62355e-17 *lens_ipow(x, 6)*y*dx*lens_ipow(dy, 2)+0.0f;
const float dx21 =  + 1.03502e-11  + 5.78082e-11 *dx + -2.72718e-14 *y + -4.87636e-12 *x*dy + 2.36671e-11 *x*dx + -8.42348e-11 *y*lens_ipow(dx, 2) + 1.45922e-11 *x*lens_ipow(dx, 2) + 1.26099e-13 *lens_ipow(x, 2)*dy + 1.23141e-10 *x*lens_ipow(dx, 2)*dy + -2.04982e-13 *x*lens_ipow(y, 2)*dx + -1.1099e-10 *lens_ipow(lambda, 5) + 4.15576e-11 *x*y*dx*dy*lens_ipow(lambda, 3) + -2.65889e-08 *y*lens_ipow(dx, 6)*lambda + -2.91501e-16 *lens_ipow(y, 6)*dx*dy + -2.94633e-05 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + 2.79824e-17 *lens_ipow(y, 7)*lens_ipow(dx, 2) + 2.02667e-17 *lens_ipow(x, 2)*lens_ipow(y, 5)*dx*dy + 1.08132e-06 *lens_ipow(dx, 6)*lens_ipow(lambda, 4) + -9.71518e-08 *lens_ipow(y, 2)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -6.983e-10 *x*lens_ipow(y, 2)*lens_ipow(dx, 6)*dy + -1.37479e-17 *lens_ipow(x, 7)*dx*lens_ipow(dy, 2)+0.0f;
const float dx22 =  + 1  + -5.73958e-09 *dy + -7.24812e-09 *dx + 5.78082e-11 *y + -9.73885e-09 *lens_ipow(dy, 2) + 1.63133e-10 *x*dx + 2.36671e-11 *x*y + 1.32296e-06 *lens_ipow(dx, 2)*dy + -8.42348e-11 *lens_ipow(y, 2)*dx + 2.91844e-11 *x*y*dx + 8.07957e-11 *lens_ipow(x, 2)*dx + -2.31824e-07 *dx*lens_ipow(dy, 3) + 2.46282e-10 *x*y*dx*dy + -6.83272e-14 *x*lens_ipow(y, 3) + 1.39986e-07 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 2.07788e-11 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 3) + -7.97668e-08 *lens_ipow(y, 2)*lens_ipow(dx, 5)*lambda + -4.1643e-17 *lens_ipow(y, 7)*dy + -1.65258e-06 *x*lens_ipow(dy, 7) + -0.00017678 *y*lens_ipow(dx, 5)*lens_ipow(dy, 3) + 6.9956e-18 *lens_ipow(y, 8)*dx + 3.37778e-18 *lens_ipow(x, 2)*lens_ipow(y, 6)*dy + 3.70923e-09 *lens_ipow(x, 3)*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2) + -0.00183535 *lens_ipow(dx, 2)*lens_ipow(dy, 6)*lens_ipow(lambda, 2) + -0.015429 *lens_ipow(dx, 6)*lens_ipow(dy, 3)*lambda + 0.000540875 *lens_ipow(dx, 8)*lens_ipow(lambda, 2) + 6.48791e-06 *y*lens_ipow(dx, 5)*lens_ipow(lambda, 4) + -1.94304e-07 *lens_ipow(y, 3)*lens_ipow(dx, 5)*lens_ipow(dy, 2) + -1.3966e-09 *x*lens_ipow(y, 3)*lens_ipow(dx, 5)*dy + -1.37479e-17 *lens_ipow(x, 7)*y*lens_ipow(dy, 2)+0.0f;
const float dx23 =  + 2.50376e-10  + -5.73958e-09 *dx + -1.94777e-08 *dx*dy + -4.87636e-12 *x*y + 4.40988e-07 *lens_ipow(dx, 3) + 1.26099e-13 *lens_ipow(x, 2)*y + -3.47736e-07 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.23141e-10 *x*y*lens_ipow(dx, 2) + 9.33241e-08 *x*lens_ipow(dx, 3)*dy + -9.5806e-15 *lens_ipow(x, 5)*dy + 2.07788e-11 *x*lens_ipow(y, 2)*dx*lens_ipow(lambda, 3) + -4.1643e-17 *lens_ipow(y, 7)*dx + -1.1568e-05 *x*dx*lens_ipow(dy, 6) + -8.83898e-05 *y*lens_ipow(dx, 6)*lens_ipow(dy, 2) + 3.37778e-18 *lens_ipow(x, 2)*lens_ipow(y, 6)*dx + 9.27307e-10 *lens_ipow(x, 3)*lens_ipow(dx, 4)*lens_ipow(lambda, 2) + -0.0036707 *lens_ipow(dx, 3)*lens_ipow(dy, 5)*lens_ipow(lambda, 2) + -0.00661245 *lens_ipow(dx, 7)*lens_ipow(dy, 2)*lambda + -6.47678e-08 *lens_ipow(y, 3)*lens_ipow(dx, 6)*dy + -2.32767e-10 *x*lens_ipow(y, 3)*lens_ipow(dx, 6) + -2.74959e-17 *lens_ipow(x, 7)*y*dx*dy+0.0f;
const float dx24 =  + -5.54951e-10 *y*lens_ipow(lambda, 4) + 6.23364e-11 *x*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 2) + -1.32945e-08 *lens_ipow(y, 2)*lens_ipow(dx, 6) + 1.85461e-09 *lens_ipow(x, 3)*lens_ipow(dx, 4)*dy*lambda + -0.00122357 *lens_ipow(dx, 3)*lens_ipow(dy, 6)*lambda + -0.00220415 *lens_ipow(dx, 7)*lens_ipow(dy, 3) + 0.000120194 *lens_ipow(dx, 9)*lambda + 4.32527e-06 *y*lens_ipow(dx, 6)*lens_ipow(lambda, 3)+0.0f;
const float dx30 =  + -1.38706e-12  + -2.66841e-11 *dy + -1.28005e-12 *x + 6.93122e-10 *lens_ipow(dy, 2) + -8.46011e-11 *dx*lambda + 4.39597e-12 *y*dx + 9.13498e-14 *x*y + -1.23964e-11 *y*dx*dy + 1.40773e-10 *x*lens_ipow(dy, 2) + -6.71027e-15 *lens_ipow(x, 2)*y + 2.04907e-10 *y*lens_ipow(dy, 3) + -2.90979e-10 *y*dx*lens_ipow(dy, 2) + -4.21009e-10 *y*lens_ipow(dx, 2)*dy + 1.23202e-07 *dx*lens_ipow(dy, 4) + -4.62062e-14 *lens_ipow(x, 4)*lens_ipow(dy, 2) + 3.15581e-08 *lens_ipow(dy, 5)*lens_ipow(lambda, 2) + 9.87282e-10 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -5.08894e-17 *lens_ipow(x, 5)*y*dx + -1.65652e-08 *x*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 1.00346e-07 *x*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 5.67902e-13 *x*lens_ipow(y, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -1.08973e-18 *lens_ipow(x, 5)*lens_ipow(y, 3)*lens_ipow(dy, 2)+0.0f;
const float dx31 =  + -1.71562e-12  + -7.92293e-13 *y + 4.39597e-12 *x*dx + 4.56749e-14 *lens_ipow(x, 2) + -1.27506e-09 *dx*dy*lambda + -1.23964e-11 *x*dx*dy + -2.23676e-15 *lens_ipow(x, 3) + 2.121e-10 *y*lens_ipow(dy, 3) + 6.91269e-11 *y*lens_ipow(dx, 2)*lambda + 2.04907e-10 *x*lens_ipow(dy, 3) + -2.90979e-10 *x*dx*lens_ipow(dy, 2) + -4.21009e-10 *x*lens_ipow(dx, 2)*dy + 1.54819e-09 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 1.47964e-08 *lens_ipow(dx, 5) + -2.12014e-06 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 4.93641e-10 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -8.48157e-18 *lens_ipow(x, 6)*dx + -1.86799e-08 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 4) + 8.51852e-13 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -5.44867e-19 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(dy, 2)+0.0f;
const float dx32 =  + -1.14801e-10  + -4.05273e-09 *dy + -5.72394e-09 *dx + -9.17441e-09 *dx*dy + -8.46011e-11 *x*lambda + 4.39597e-12 *x*y + 4.7885e-07 *lens_ipow(dx, 2)*dy + -1.27506e-09 *y*dy*lambda + -1.23964e-11 *x*y*dy + 6.91269e-11 *lens_ipow(y, 2)*dx*lambda + -2.90979e-10 *x*y*lens_ipow(dy, 2) + -8.42018e-10 *x*y*dx*dy + 7.39821e-08 *y*lens_ipow(dx, 4) + 1.23202e-07 *x*lens_ipow(dy, 4) + -4.24028e-06 *y*dx*lens_ipow(dy, 5) + 1.48092e-09 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -8.48157e-18 *lens_ipow(x, 6)*y + -8.28261e-09 *lens_ipow(x, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 2.50865e-07 *lens_ipow(x, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -1.86799e-08 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 4)+0.0f;
const float dx33 =  + 1  + -1.04358e-08 *dy + -4.05273e-09 *dx + -2.66841e-11 *x + -4.58721e-09 *lens_ipow(dx, 2) + 1.38624e-09 *x*dy + 1.59617e-07 *lens_ipow(dx, 3) + -1.27506e-09 *y*dx*lambda + -1.23964e-11 *x*y*dx + 1.40773e-10 *lens_ipow(x, 2)*dy + 3.1815e-10 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 6.1472e-10 *x*y*lens_ipow(dy, 2) + -5.81958e-10 *x*y*dx*dy + -4.21009e-10 *x*y*lens_ipow(dx, 2) + 5.75082e-06 *lens_ipow(dy, 5) + 3.09637e-09 *y*dy*lens_ipow(lambda, 3) + 4.92808e-07 *x*dx*lens_ipow(dy, 3) + -1.84825e-14 *lens_ipow(x, 5)*dy + -1.06007e-05 *y*lens_ipow(dx, 2)*lens_ipow(dy, 4) + 1.57791e-07 *x*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 9.87282e-10 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + -3.31305e-08 *lens_ipow(x, 2)*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 1.00346e-07 *lens_ipow(x, 2)*lens_ipow(dx, 5)*dy + -2.49065e-08 *lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 8.51852e-13 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -3.63245e-19 *lens_ipow(x, 6)*lens_ipow(y, 3)*dy+0.0f;
const float dx34 =  + -8.46011e-11 *x*dx + -1.27506e-09 *y*dx*dy + 3.45635e-11 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 4.64456e-09 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 6.31162e-08 *x*lens_ipow(dy, 5)*lambda + -1.65652e-08 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4)*lambda + 8.51852e-13 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 2)+0.0f;
const float dx40 = +0.0f;
const float dx41 = +0.0f;
const float dx42 = +0.0f;
const float dx43 = +0.0f;
const float dx44 = +0.0f;
