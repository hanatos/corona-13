const float out_x =  + -3.21832e-05  + 118.633 *dx + 1.32559e-06 *y + 0.9962 *x + 0.00362093 *lens_ipow(dx, 2) + 2.40896e-07 *lens_ipow(x, 2) + -67.2007 *dx*lens_ipow(dy, 2) + -67.1949 *lens_ipow(dx, 3) + -1.1112 *y*dx*dy + -0.00467654 *lens_ipow(y, 2)*dx + 0.0322325 *x*lens_ipow(dy, 2) + -1.0814 *x*lens_ipow(dx, 2) + 0.000556925 *x*y*dy + 2.25569e-06 *x*lens_ipow(y, 2) + -0.00421962 *lens_ipow(x, 2)*dx + 2.16858e-06 *lens_ipow(x, 3) + 0.674128 *dx*lens_ipow(lambda, 3) + -0.0247845 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.00750772 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -0.00414195 *x*y*lens_ipow(dx, 2)*dy + -0.000262894 *lens_ipow(x, 2)*lens_ipow(dx, 4) + 132.116 *dx*lens_ipow(dy, 6) + 525.815 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + -2.50698e-07 *lens_ipow(y, 5)*dx*dy + -0.269658 *x*lens_ipow(dy, 6) + -9.72626e-06 *lens_ipow(x, 4)*lens_ipow(dx, 3) + -2.11742 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -2.81907 *lens_ipow(dx, 3)*lens_ipow(lambda, 5) + 3530.24 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + 884.241 *lens_ipow(dx, 9) + -3.84102e-12 *lens_ipow(y, 8)*dx + 0.0182674 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -0.0001424 *lens_ipow(x, 2)*y*dx*dy*lens_ipow(lambda, 4) + 6.01294e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 2.09613e-06 *lens_ipow(x, 4)*y*lens_ipow(dx, 3)*dy + 6.42232e-12 *lens_ipow(x, 4)*lens_ipow(y, 4)*dx + 2.22204e-09 *lens_ipow(x, 6)*dx*lens_ipow(lambda, 2) + -3.05767 *dx*lens_ipow(lambda, 10) + -4.06736 *x*y*lens_ipow(dx, 8)*dy + 3.89545e-11 *lens_ipow(x, 8)*dx*lens_ipow(dy, 2);
const float out_y =  + -1.81258e-06  + 118.644 *dy + 0.996236 *y + 2.46607e-05 *y*dy + -67.4346 *lens_ipow(dy, 3) + -67.5287 *lens_ipow(dx, 2)*dy + -1.08614 *y*lens_ipow(dy, 2) + 0.0307602 *y*lens_ipow(dx, 2) + -0.00428795 *lens_ipow(y, 2)*dy + 2.14138e-06 *lens_ipow(y, 3) + -1.11904 *x*dx*dy + 0.00053884 *x*y*dx + -0.00474617 *lens_ipow(x, 2)*dy + 2.01435e-06 *lens_ipow(x, 2)*y + 0.654417 *dy*lens_ipow(lambda, 3) + -0.00876924 *x*y*dx*lens_ipow(dy, 2) + -0.00726299 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 1.17768 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 0.000216821 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 3) + 594.394 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 141.733 *lens_ipow(dx, 6)*dy + -0.000103565 *lens_ipow(y, 3)*lens_ipow(dx, 4) + -1.21216e-05 *lens_ipow(y, 4)*lens_ipow(dy, 3) + 0.0256555 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 6.64829e-10 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + -1.66957e-07 *lens_ipow(x, 5)*dx*dy + -2.81716 *lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -2.2213 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 5) + -17.1086 *lens_ipow(dx, 5)*lens_ipow(dy, 3) + 868.785 *lens_ipow(dy, 9) + 5565.29 *lens_ipow(dx, 2)*lens_ipow(dy, 7) + 3.95579e-12 *lens_ipow(y, 8)*dy + -0.000165013 *x*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 4) + 7.07569e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + -1.57589e-08 *lens_ipow(x, 6)*lens_ipow(dy, 3) + 2.13283e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -3.00515 *dy*lens_ipow(lambda, 10) + -15.2327 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 6) + 0.168378 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 7) + -0.00298098 *lens_ipow(x, 3)*y*lens_ipow(dx, 5)*lens_ipow(dy, 2);
const float out_dx =  + -1.45005e-06  + -3.55572e-05 *dy + -1.88185 *dx + 4.27394e-07 *y + -0.0236202 *x + 0.203361 *dx*lambda + 1.3446e-06 *y*dx + 2.63371e-08 *lens_ipow(y, 2) + 2.75175e-06 *x*dy + -3.1449e-08 *lens_ipow(x, 2) + -2.96886 *dx*lens_ipow(dy, 2) + 0.0565876 *lens_ipow(dx, 3) + -1.88681e-05 *y*lens_ipow(dy, 2) + -0.0527617 *y*dx*dy + -0.000224473 *lens_ipow(y, 2)*dx + -0.0352543 *x*lens_ipow(dy, 2) + -2.46976e-05 *x*dx*dy + 0.003401 *x*lens_ipow(dx, 2) + -0.000683332 *x*y*dy + -2.89675e-06 *x*lens_ipow(y, 2) + -4.65492e-06 *lens_ipow(x, 2)*dx + 2.8794e-09 *lens_ipow(x, 2)*y + 1.58248e-08 *lens_ipow(x, 3) + -0.0565389 *dx*lens_ipow(lambda, 3) + -4.61799e-05 *y*dx*lens_ipow(dy, 2) + 2.57858e-10 *x*lens_ipow(y, 3) + 0.0580073 *lens_ipow(dx, 5) + 0.000532303 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -8.57374e-09 *lens_ipow(y, 3)*lens_ipow(lambda, 2) + 0.00326159 *x*lens_ipow(lambda, 4) + -4.29379e-07 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.407905 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + -0.00347434 *y*dx*lens_ipow(dy, 3)*lambda + -2.98782e-06 *lens_ipow(x, 2)*y*dx*dy*lambda + 0.0768391 *x*lens_ipow(dx, 2)*lens_ipow(dy, 4) + 0.000141149 *x*y*lens_ipow(dx, 7) + -0.380747 *dx*lens_ipow(lambda, 10) + 1.58789 *y*lens_ipow(dx, 9)*dy + -0.0157669 *x*lens_ipow(lambda, 10) + -0.000749201 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 6);
const float out_dy =  + -3.35079e-07  + -1.94762 *dy + -0.0247 *y + -1.25201e-08 *x + 0.406773 *dy*lambda + -9.70455e-05 *dx*dy + 0.0029817 *y*lambda + -1.09679e-06 *y*dy + -1.37598e-06 *y*dx + -1.74291e-06 *x*dy + -3.12732e-08 *x*y + 0.101357 *lens_ipow(dy, 3) + 3.07653 *lens_ipow(dx, 2)*dy + 0.00438024 *y*lens_ipow(dy, 2) + -5.23069e-06 *y*dx*dy + 0.0162859 *y*lens_ipow(dx, 2) + 3.08909e-06 *lens_ipow(y, 2)*dy + 1.58416e-08 *lens_ipow(y, 3) + 0.0781408 *x*dx*dy + 0.000435029 *x*y*dx + 4.04503e-10 *x*lens_ipow(y, 2) + 0.00045602 *lens_ipow(x, 2)*dy + 2.88722e-06 *lens_ipow(x, 2)*y + -0.350068 *dy*lens_ipow(lambda, 3) + -0.00340313 *y*lens_ipow(lambda, 4) + -9.22771e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.011577 *x*dx*lens_ipow(dy, 3) + -1.87373e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 0.000566151 *x*y*dx*lens_ipow(dy, 2)*lambda + 0.0034642 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -5.80261e-06 *lens_ipow(x, 3)*lens_ipow(dx, 3)*dy + 8.18628e-06 *lens_ipow(y, 3)*lens_ipow(dx, 6) + -1.37776e-08 *lens_ipow(y, 5)*lens_ipow(dy, 4) + 0.000174717 *lens_ipow(x, 3)*dx*lens_ipow(dy, 5) + 0.501258 *dy*lens_ipow(lambda, 10) + -53.6077 *lens_ipow(dy, 11) + 0.00650638 *y*lens_ipow(lambda, 10) + 4.37633 *y*lens_ipow(dx, 6)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 1.52189e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -0.000347422 *lens_ipow(x, 2)*y*lens_ipow(dy, 6)*lens_ipow(lambda, 2);
const float out_transmittance =  + 0.897754  + 0.0569472 *lambda + -4.8233e-06 *dx + 1.31616e-07 *y + -1.26205e-08 *x + -0.0103534 *lens_ipow(dy, 2) + -0.00991199 *lens_ipow(dx, 2) + -0.000125807 *y*dy + -1.18342e-06 *lens_ipow(y, 2) + -0.000162612 *x*dx + 3.64093e-09 *x*y + -1.44971e-06 *lens_ipow(x, 2) + -0.0479791 *lens_ipow(lambda, 3) + -4.80876e-06 *x*dx*dy + 0.153349 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.00617281 *y*lens_ipow(dy, 3) + -0.000164309 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -3.2562e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.68399e-06 *lens_ipow(y, 3)*dy + -0.0045852 *x*lens_ipow(dx, 3) + -0.000118248 *x*y*dx*dy + -1.16705e-06 *x*lens_ipow(y, 2)*dx + -0.000138019 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -1.101e-06 *lens_ipow(x, 2)*y*dy + -8.04415e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.45364e-06 *lens_ipow(x, 3)*dx + -0.54064 *lens_ipow(dy, 6) + -0.332815 *lens_ipow(dx, 6) + -0.0327352 *y*lens_ipow(dx, 4)*dy + -1.2612e-11 *lens_ipow(y, 6) + -0.000197506 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -3.51185e-12 *lens_ipow(x, 2)*lens_ipow(y, 4) + -6.6049e-08 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -1.07007e-11 *lens_ipow(x, 6) + -27.5742 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + 0.00487056 *x*y*dx*lens_ipow(dy, 5) + 1.03918 *y*lens_ipow(dx, 8)*dy + -1.16973e-13 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*dy + -4.4021e-11 *lens_ipow(x, 7)*dx*lens_ipow(dy, 2) + 0.087543 *lens_ipow(lambda, 11);
