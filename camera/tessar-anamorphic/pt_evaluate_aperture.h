const float out_x =  + -7.04901e-05  + 88.7549 *dx + -3.59444e-06 *y + 0.746116 *x + 0.00393364 *lens_ipow(dy, 2) + 0.0027943 *lens_ipow(dx, 2) + 5.7837e-05 *x*dy + 61.8435 *dx*lens_ipow(dy, 2) + 62.4798 *lens_ipow(dx, 3) + 1.79321 *y*dx*dy + 0.00947158 *lens_ipow(y, 2)*dx + 1.17879 *x*lens_ipow(dy, 2) + 3.00255 *x*lens_ipow(dx, 2) + 0.025828 *x*y*dy + 0.000118713 *x*lens_ipow(y, 2) + 0.0365142 *lens_ipow(x, 2)*dx + 0.000119619 *lens_ipow(x, 3) + 3.65264 *dx*lens_ipow(lambda, 3) + 0.00209122 *lens_ipow(y, 2)*dx*lambda + 0.0419482 *x*lens_ipow(lambda, 3) + 5.82037e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + 0.000256645 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lambda + 0.0417051 *y*dx*dy*lens_ipow(lambda, 4) + 1.74644e-05 *lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + 1.64312e-05 *x*lens_ipow(y, 2)*lens_ipow(lambda, 4) + 2.23226e-07 *x*lens_ipow(y, 4)*lens_ipow(dy, 2) + 0.147654 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4) + -0.00626952 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + -1.38128e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + -9.19947e-11 *lens_ipow(x, 5)*lens_ipow(y, 2) + -0.00316643 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 5) + -2.10946 *x*lens_ipow(dy, 6)*lambda + 0.033881 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -12091.8 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + -9173.74 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + -19.1573 *dx*lens_ipow(lambda, 10) + -1567.04 *lens_ipow(dx, 7)*lens_ipow(lambda, 4) + -0.604442 *lens_ipow(y, 2)*lens_ipow(dx, 7)*lens_ipow(lambda, 2) + -0.226439 *x*lens_ipow(lambda, 10) + 0.00770434 *x*y*dy*lens_ipow(lambda, 8);
const float out_y =  + 0.000111506  + 88.7444 *dy + 0.747015 *y + -9.31942e-06 *x + 0.00496451 *dx*dy + -7.22249e-07 *x*y + 61.5721 *lens_ipow(dy, 3) + 61.457 *lens_ipow(dx, 2)*dy + 3.00018 *y*lens_ipow(dy, 2) + 1.18915 *y*lens_ipow(dx, 2) + 0.0367408 *lens_ipow(y, 2)*dy + 0.000121283 *lens_ipow(y, 3) + 1.79209 *x*dx*dy + 1.52149e-05 *x*y*dy + 0.0259214 *x*y*dx + 2.28374e-07 *x*lens_ipow(y, 2) + 0.0104326 *lens_ipow(x, 2)*dy + 0.000121067 *lens_ipow(x, 2)*y + 3.8145 *dy*lens_ipow(lambda, 3) + 0.000296887 *x*dx*lens_ipow(lambda, 2) + 4.52989e-05 *x*y*dx*dy + 0.068935 *y*lens_ipow(lambda, 4) + 0.0224844 *x*y*dx*lens_ipow(dy, 2)*lambda + 0.184803 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.00264997 *lens_ipow(y, 3)*lens_ipow(dy, 4) + 2.77742e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2) + -9.07379e-09 *lens_ipow(y, 6)*dy + 5.60093e-07 *lens_ipow(x, 4)*y*lens_ipow(dy, 2) + -136.766 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + 0.000789762 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 8.43138e-07 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -1.00385e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -7.47471e-14 *lens_ipow(x, 8)*y + -15.2218 *y*lens_ipow(dx, 6)*lens_ipow(lambda, 3) + -20.1841 *dy*lens_ipow(lambda, 10) + -28862.2 *lens_ipow(dy, 11) + -89123.6 *lens_ipow(dx, 2)*lens_ipow(dy, 9) + -245931 *lens_ipow(dx, 6)*lens_ipow(dy, 5) + -0.335914 *y*lens_ipow(lambda, 10) + -4.55116e-16 *lens_ipow(y, 11);
const float out_dx =  + -7.41572e-06  + -6.80065e-05 *dy + 1.61219 *dx + -9.35555e-07 *y + 0.00229368 *x + 0.00059096 *dx*dy + 1.02031e-07 *lens_ipow(y, 2) + -4.89523e-06 *x*dx + -6.89611e-08 *x*y + 7.1422 *dx*lens_ipow(dy, 2) + 7.28248 *lens_ipow(dx, 3) + 0.130373 *y*dx*dy + 0.000734551 *lens_ipow(y, 2)*dx + 0.0699194 *x*lens_ipow(dy, 2) + 0.200911 *x*lens_ipow(dx, 2) + 0.00145803 *x*y*dy + 7.93143e-06 *x*lens_ipow(y, 2) + 0.00219186 *lens_ipow(x, 2)*dx + 7.88207e-06 *lens_ipow(x, 3) + 9.82923e-08 *x*lens_ipow(y, 2)*dx + -0.528422 *dx*lens_ipow(lambda, 4) + 0.902644 *dx*lens_ipow(dy, 4) + 1.05487 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.000725671 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.986041 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -1.42639 *lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -0.00641514 *x*lens_ipow(lambda, 5) + -0.0684174 *x*lens_ipow(dy, 6) + 7.22507e-09 *x*lens_ipow(y, 4)*lens_ipow(dy, 2) + -2.62541e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + 1.91517e-08 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -2.35823e-12 *lens_ipow(x, 5)*lens_ipow(y, 2) + -2.1421e-07 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 3) + 0.036196 *lens_ipow(y, 2)*lens_ipow(dx, 7) + -0.010986 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 0.0273155 *lens_ipow(x, 2)*lens_ipow(dx, 7) + -0.0813517 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 7) + 2.54923 *dx*lens_ipow(lambda, 10) + -8.25955e-05 *lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 6) + 0.027659 *x*lens_ipow(lambda, 10);
const float out_dy =  + 1.69886e-06  + 1.62761 *dy + -0.000117436 *dx + 0.0023379 *y + -1.69386e-07 *x + -6.28315e-06 *y*dy + -9.73727e-08 *lens_ipow(y, 2) + 1.49325e-05 *x*dy + 8.8508e-08 *x*y + 7.09311 *lens_ipow(dy, 3) + 7.0812 *lens_ipow(dx, 2)*dy + 0.200098 *y*lens_ipow(dy, 2) + 0.0695817 *y*lens_ipow(dx, 2) + 0.0021833 *lens_ipow(y, 2)*dy + 7.90145e-06 *lens_ipow(y, 3) + -2.38833e-05 *x*lens_ipow(dy, 2) + 0.129823 *x*dx*dy + 0.0014561 *x*y*dx + 0.000730256 *lens_ipow(x, 2)*dy + 6.10017e-07 *lens_ipow(x, 2)*dx + 7.92354e-06 *lens_ipow(x, 2)*y + -0.384908 *dy*lens_ipow(lambda, 3) + 3.20074e-06 *x*y*dx*dy + -0.00386528 *y*lens_ipow(lambda, 4) + 0.000800151 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.543746 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + 12.2998 *lens_ipow(dx, 6)*dy + -6.8766e-05 *lens_ipow(y, 3)*lens_ipow(dy, 4) + 1.89017e-08 *lens_ipow(y, 5)*lens_ipow(dx, 2) + 8.42922e-09 *lens_ipow(x, 4)*y*lens_ipow(dx, 2) + -7.01038e-09 *lens_ipow(x, 5)*dx*dy + 1.30083e-06 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -5.21992 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + 243.855 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + -0.00783016 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 6) + 0.0605838 *lens_ipow(x, 2)*lens_ipow(dy, 7) + 7.99233e-11 *lens_ipow(x, 2)*lens_ipow(y, 5)*lens_ipow(dy, 2) + 2.16074 *dy*lens_ipow(lambda, 10) + 0.0194209 *y*lens_ipow(lambda, 10) + -2.44457e-17 *lens_ipow(x, 4)*lens_ipow(y, 7);
const float out_transmittance =  + 0.704174  + 0.164963 *lambda + 7.15764e-08 *y + -6.19535e-07 *x + -0.127876 *lens_ipow(dy, 2) + 0.00104942 *dx*dy + -0.128942 *lens_ipow(dx, 2) + -0.00243182 *y*dy + 1.6837e-05 *y*dx + -1.29916e-05 *lens_ipow(y, 2) + 1.13423e-05 *x*dy + -0.00247576 *x*dx + 1.95652e-07 *x*y + -1.31149e-05 *lens_ipow(x, 2) + -0.138339 *lens_ipow(lambda, 3) + -1.44272e-05 *x*lens_ipow(dy, 2) + -1.95719e-07 *lens_ipow(x, 2)*dx + 4.74815e-09 *lens_ipow(x, 2)*y + -0.913809 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 6.38071e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 8.25607e-05 *x*y*dx*dy + -1.36773e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 8.3419e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lambda + -7.46689 *lens_ipow(dy, 6) + -10.8227 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -12.5743 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -8.08617 *lens_ipow(dx, 6) + 3.3465e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -2.28438e-11 *lens_ipow(y, 6) + 0.000211309 *x*dx*lens_ipow(lambda, 4) + 4.77268e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 4.05441e-07 *lens_ipow(x, 3)*y*dx*dy + 3.41426e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -2.21028e-11 *lens_ipow(x, 6) + 0.216067 *x*y*lens_ipow(dx, 7)*dy + -0.00503713 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 6) + -1.91488e-12 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.250844 *lens_ipow(lambda, 11) + 0.0154029 *lens_ipow(x, 2)*lens_ipow(dx, 6)*lens_ipow(lambda, 3) + -4.96118e-05 *lens_ipow(x, 4)*lens_ipow(dy, 6)*lambda;
