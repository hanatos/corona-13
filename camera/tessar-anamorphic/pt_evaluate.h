const float out_x =  + -0.000251644  + -0.00169379 *dy + 138.55 *dx + -3.17676e-05 *y + 0.520192 *x + 0.000180213 *y*dx + 3.07875e-06 *lens_ipow(y, 2) + -2.79049e-06 *x*y + -15.2536 *dx*lens_ipow(dy, 2) + -23.5386 *lens_ipow(dx, 3) + 1.42507 *y*dx*dy + 0.0154736 *lens_ipow(y, 2)*dx + 0.547231 *x*lens_ipow(dy, 2) + 2.5213 *x*lens_ipow(dx, 2) + 0.0262714 *x*y*dy + -8.58505e-06 *x*y*dx + 0.000188386 *x*lens_ipow(y, 2) + 0.050176 *lens_ipow(x, 2)*dx + 0.000218817 *lens_ipow(x, 3) + -8.46306 *dx*lens_ipow(lambda, 3) + 0.000190627 *lens_ipow(y, 2)*dx*dy + 3.72883e-06 *x*lens_ipow(y, 2)*dx + 0.000154273 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.0922462 *x*lens_ipow(lambda, 4) + 0.742721 *lens_ipow(dx, 4)*lens_ipow(lambda, 2) + 0.0602294 *y*lens_ipow(dy, 5) + 1881.05 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + 0.0034023 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.0021023 *lens_ipow(x, 3)*lens_ipow(dy, 4) + 3.16763e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -9.42875e-11 *lens_ipow(x, 5)*lens_ipow(y, 2) + -0.0807065 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 2050.32 *dx*lens_ipow(dy, 8) + 11495.3 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + 5062.85 *lens_ipow(dx, 9) + 3.83813e-12 *lens_ipow(y, 8)*dx + 8.44829e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 4) + 5.27165e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 4) + 44.979 *dx*lens_ipow(lambda, 10) + 0.442883 *x*lens_ipow(lambda, 10);
const float out_y =  + 0.000727971  + 102.059 *dy + -0.0022679 *dx + 0.283204 *y + -2.81477e-05 *x + 0.0348028 *dx*dy + 0.000360639 *y*dx + -2.24295e-06 *lens_ipow(y, 2) + 0.000610253 *x*dy + -1.40208e-06 *lens_ipow(x, 2) + -0.00187788 *lens_ipow(lambda, 3) + -4.61012 *lens_ipow(dy, 3) + 0.0677415 *dx*lens_ipow(dy, 2) + 0.486623 *lens_ipow(dx, 2)*dy + 1.64922 *y*lens_ipow(dy, 2) + 1.06526 *y*lens_ipow(dx, 2) + 0.0316329 *lens_ipow(y, 2)*dy + 0.000139082 *lens_ipow(y, 3) + 1.24182 *x*dx*dy + 0.0286956 *x*y*dx + 1.51945e-07 *x*lens_ipow(y, 2) + 0.0110697 *lens_ipow(x, 2)*dy + 0.000168025 *lens_ipow(x, 2)*y + 1.02608 *dy*lens_ipow(lambda, 3) + 0.000336615 *x*y*dx*dy + 3.12224e-08 *x*lens_ipow(y, 3) + -8.89702e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 9.27523e-05 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + 787.263 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 639.45 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 347.714 *lens_ipow(dx, 6)*dy + -0.162013 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 5.03266e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2) + 5.38559e-10 *lens_ipow(y, 7)*lens_ipow(dy, 2) + -2.69159e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -4.88984e-08 *lens_ipow(x, 5)*y*dx*lens_ipow(dy, 2) + -6.52236 *dy*lens_ipow(lambda, 10) + -1499.79 *lens_ipow(dy, 7)*lens_ipow(lambda, 4) + 42482.7 *lens_ipow(dy, 11) + -0.000318588 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 2);
const float out_dx =  + -1.14332 *dx + -0.0115217 *x + 0.623924 *dx*lens_ipow(dy, 2) + 0.675525 *lens_ipow(dx, 3) + -2.85112e-05 *lens_ipow(y, 2)*dx + 0.000652111 *x*lens_ipow(dy, 2) + -0.00350055 *x*lens_ipow(dx, 2) + -8.36284e-05 *x*y*dy + -2.83412e-07 *x*lens_ipow(y, 2) + -0.000189131 *lens_ipow(x, 2)*dx + -6.03404e-07 *lens_ipow(x, 3) + 0.0680919 *dx*lens_ipow(lambda, 3) + -1.72969 *lens_ipow(dx, 7) + -0.369181 *dx*lens_ipow(lambda, 10);
const float out_dy =  + -0.908274 *dy + -0.0123092 *y + 0.614547 *lens_ipow(dy, 3) + 1.05366 *lens_ipow(dx, 2)*dy + 0.00443453 *y*lens_ipow(dy, 2) + -0.00136161 *y*lens_ipow(dx, 2) + -2.68644e-05 *lens_ipow(y, 2)*dy + 8.06763e-08 *lens_ipow(y, 3) + 0.0114794 *x*dx*dy + -6.73759e-05 *x*y*dx + 2.09426e-05 *lens_ipow(x, 2)*dy + -8.54798e-08 *lens_ipow(x, 2)*y + 9.34548e-05 *y*lens_ipow(lambda, 4);
const float out_transmittance =  + 0.374643  + 0.275601 *lambda + -4.11061e-06 *dx + 3.29286e-07 *y + -8.57117e-07 *x + -0.0996656 *lens_ipow(dy, 2) + 0.00109695 *dx*dy + -0.101182 *lens_ipow(dx, 2) + -0.00183375 *y*dy + 1.73247e-05 *y*dx + -1.06392e-05 *lens_ipow(y, 2) + 7.5642e-06 *x*dy + -0.00180111 *x*dx + 1.96049e-07 *x*y + -1.04885e-05 *lens_ipow(x, 2) + -0.228709 *lens_ipow(lambda, 3) + 0.000563113 *lens_ipow(dy, 3) + -3.3104e-07 *x*y*dx + -8.57044e-07 *lens_ipow(y, 3)*dy + -1.36808e-06 *x*lens_ipow(y, 2)*dx + -1.52614e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.27153e-06 *lens_ipow(x, 3)*dx + -1.25362e-06 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2) + -2.03711e-06 *lens_ipow(x, 2)*y*dy*lambda + -4.04302 *lens_ipow(dy, 6) + -13.0805 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -13.8032 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -4.28798 *lens_ipow(dx, 6) + 4.87319e-08 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -1.55187e-11 *lens_ipow(y, 6) + -1.66807e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 5.68674e-07 *lens_ipow(x, 3)*lens_ipow(dy, 3) + -2.08832e-11 *lens_ipow(x, 6) + -5.19397e-10 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + 2.19224e-06 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + -0.000158287 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -24.3205 *x*lens_ipow(dx, 3)*lens_ipow(dy, 6) + -0.00470834 *lens_ipow(x, 2)*y*lens_ipow(dx, 6)*dy + 0.409594 *lens_ipow(lambda, 11) + -1.23177e-13 *lens_ipow(x, 2)*lens_ipow(y, 6)*lens_ipow(lambda, 3);
