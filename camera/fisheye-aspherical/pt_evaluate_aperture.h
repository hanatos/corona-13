const float out_x =  + -0.000155767  + 0.000766471 *dy + 24.6053 *dx + 0.73415 *x + 0.0165703 *dx*dy + -1.68227e-05 *x*y + 7.06548e-06 *lens_ipow(x, 2) + -4.55325 *dx*lens_ipow(dy, 2) + 0.451153 *lens_ipow(dx, 3) + 0.229003 *y*dx*dy + -0.000247709 *x*lens_ipow(dy, 2) + 0.824824 *x*lens_ipow(dx, 2) + 0.00958852 *x*y*dy + -0.000479556 *x*lens_ipow(y, 2) + 0.0262843 *lens_ipow(x, 2)*dx + -0.000436466 *lens_ipow(x, 3) + 0.223873 *dx*lens_ipow(lambda, 4) + 0.0571414 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 1.76736e-05 *lens_ipow(y, 4)*dx + -0.166597 *x*y*lens_ipow(dx, 2)*dy + 0.060452 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.0030733 *lens_ipow(x, 2)*y*dx*dy + 0.00263312 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 0.00725331 *lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + 2.83565 *x*lens_ipow(dy, 6) + -8.22628e-09 *x*lens_ipow(y, 6) + 0.00581822 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + -0.000561842 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3) + -3.14552e-08 *lens_ipow(x, 5)*lens_ipow(y, 2) + 965.494 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + -97.931 *y*lens_ipow(dx, 3)*lens_ipow(dy, 5) + 0.654538 *lens_ipow(y, 2)*lens_ipow(dx, 7) + -0.00375236 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 1.63067e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 4) + 2.29803e-05 *lens_ipow(x, 5)*lens_ipow(dx, 4) + 2258.93 *dx*lens_ipow(dy, 10) + 546.152 *lens_ipow(dx, 11) + -1.60551e-12 *lens_ipow(x, 5)*lens_ipow(y, 6) + 3.35043e-12 *lens_ipow(x, 9)*y*dy + -1.3465e-13 *lens_ipow(x, 11);
const float out_y =  + -0.000504563  + 24.4897 *dy + 0.734654 *y + -1.4482e-05 *x + -0.000447977 *y*dy + 2.69077 *lens_ipow(dy, 3) + -1.32955 *lens_ipow(dx, 2)*dy + 0.977616 *y*lens_ipow(dy, 2) + 0.0293309 *lens_ipow(y, 2)*dy + -0.00045545 *lens_ipow(y, 3) + 0.602323 *x*dx*dy + 0.0149017 *x*y*dx + 0.0074967 *lens_ipow(x, 2)*dy + -0.000423394 *lens_ipow(x, 2)*y + 38.9691 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.00379635 *y*lens_ipow(lambda, 4) + 0.972973 *y*lens_ipow(dx, 4) + 0.00201867 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.203875 *x*y*dx*lens_ipow(dy, 2) + -0.00560888 *x*lens_ipow(y, 2)*dx*dy + 0.0427209 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 1.70072e-05 *lens_ipow(x, 4)*dy + 110.609 *lens_ipow(dx, 6)*dy + 0.00310112 *lens_ipow(x, 3)*lens_ipow(dx, 3)*dy + 2.06908e-05 *lens_ipow(y, 5)*lens_ipow(dy, 4) + -1.92882e-09 *lens_ipow(y, 7)*lens_ipow(dx, 2) + 1.16942e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 4) + -2.8014e-06 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dy, 3) + -1.98813e-10 *lens_ipow(x, 6)*lens_ipow(y, 3) + -21.8163 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 2.06399e-07 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx*dy*lambda + 598.808 *lens_ipow(dy, 11) + -1.20624e-13 *lens_ipow(y, 11) + -98.6387 *x*dx*lens_ipow(dy, 9) + -1.50275e-09 *x*lens_ipow(y, 7)*dx*lens_ipow(lambda, 2) + -6.46285e-13 *lens_ipow(x, 2)*lens_ipow(y, 9) + -1.50441e-12 *lens_ipow(x, 4)*lens_ipow(y, 7) + -1.56134e-08 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(dy, 3) + -1.23884e-12 *lens_ipow(x, 10)*dy + -1.26686e-13 *lens_ipow(x, 10)*y;
const float out_dx =  + 1.11366e-05  + 0.977122 *dx + -3.83012e-06 *y + -0.0120897 *x + -5.98392e-05 *y*dx + -1.7626e-06 *x*y + 0.29759 *dx*lens_ipow(dy, 2) + 0.372268 *lens_ipow(dx, 3) + 0.0679381 *y*dx*dy + 0.0020582 *lens_ipow(y, 2)*dx + 0.0326892 *x*lens_ipow(dy, 2) + 0.113399 *x*lens_ipow(dx, 2) + 0.0047027 *x*y*dy + 6.01405e-05 *x*lens_ipow(y, 2) + 0.00723811 *lens_ipow(x, 2)*dx + 6.01811e-05 *lens_ipow(x, 3) + -0.216979 *dx*lens_ipow(lambda, 3) + -0.00994913 *x*lens_ipow(lambda, 4) + 0.0206805 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.000115338 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 0.00604365 *y*dx*dy*lens_ipow(lambda, 3) + -3.57103 *dx*lens_ipow(dy, 6) + -2.67996 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 0.0205751 *x*lens_ipow(dy, 6) + -0.0109375 *x*y*lens_ipow(dx, 4)*dy + 7.82964e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.00604305 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4) + -9.65451e-07 *lens_ipow(x, 4)*y*dx*dy + -2.11999e-05 *lens_ipow(y, 4)*lens_ipow(dx, 5) + -8.98235e-07 *lens_ipow(y, 5)*dx*lens_ipow(dy, 3) + -0.00967643 *lens_ipow(x, 2)*lens_ipow(dx, 7) + -2.33434e-11 *lens_ipow(x, 3)*lens_ipow(y, 6) + 5.87801e-10 *lens_ipow(x, 5)*lens_ipow(y, 3)*dy + -1.78597e-11 *lens_ipow(x, 7)*lens_ipow(y, 2) + 4.36236e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 5) + 4.03032 *lens_ipow(dx, 5)*lens_ipow(lambda, 6) + -1.31813e-14 *x*lens_ipow(y, 10) + -1.44566e-09 *lens_ipow(x, 3)*lens_ipow(y, 5)*lens_ipow(dy, 3) + -1.25084e-09 *lens_ipow(x, 7)*y*lens_ipow(dy, 3) + -1.39475e-14 *lens_ipow(x, 11);
const float out_dy =  + -1.61233e-06  + 0.985464 *dy + -0.0121701 *y + -9.6598e-07 *lens_ipow(y, 2) + -1.46865e-05 *x*dy + 0.292564 *lens_ipow(dy, 3) + 0.174499 *lens_ipow(dx, 2)*dy + 0.111917 *y*lens_ipow(dy, 2) + 0.0356873 *y*lens_ipow(dx, 2) + 0.0070551 *lens_ipow(y, 2)*dy + 6.35938e-05 *lens_ipow(y, 3) + -9.08493e-05 *x*lens_ipow(dy, 2) + 0.0639978 *x*dx*dy + 0.0044227 *x*y*dx + 0.0020064 *lens_ipow(x, 2)*dy + 5.43537e-05 *lens_ipow(x, 2)*y + -0.255487 *dy*lens_ipow(lambda, 3) + -0.0107658 *y*lens_ipow(lambda, 4) + 5.01666e-06 *x*lens_ipow(y, 3)*dx + 0.000827463 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 1.22092e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + -0.0107568 *x*y*dx*lens_ipow(dy, 4) + -0.000334692 *lens_ipow(x, 2)*lens_ipow(dx, 4)*dy + 6.81687e-07 *lens_ipow(x, 4)*y*lens_ipow(dy, 2) + 2.83637e-11 *lens_ipow(x, 6)*dy + -0.00871251 *lens_ipow(y, 2)*lens_ipow(dy, 7) + 4.26529e-06 *lens_ipow(y, 5)*lens_ipow(dx, 4) + 2.41891e-09 *lens_ipow(y, 7)*lens_ipow(dx, 2) + -3.55311e-12 *lens_ipow(y, 9) + -3.09813e-09 *x*lens_ipow(y, 6)*dx*dy + 3.17396e-10 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy + -4.30718e-12 *lens_ipow(x, 8)*y + 1.67739e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -2.61207e-06 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 1.89046e-07 *lens_ipow(y, 5)*lens_ipow(lambda, 6) + -7.61328e-06 *lens_ipow(y, 5)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -7.73685e-14 *lens_ipow(x, 2)*lens_ipow(y, 9) + 2.5765e-07 *lens_ipow(x, 4)*y*lens_ipow(lambda, 6) + 7.862e-10 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -2.61423e-13 *lens_ipow(x, 6)*lens_ipow(y, 5);
const float out_transmittance =  + 0.403165  + 1.5066e-06 *y + -2.50078e-06 *x + -0.0784636 *lens_ipow(dy, 2) + -0.0457177 *lens_ipow(dx, 2) + -0.00588705 *y*dy + -0.000163976 *lens_ipow(y, 2) + -8.06771e-05 *lens_ipow(x, 2) + 0.218802 *lens_ipow(lambda, 3) + -0.00735657 *x*dx*lambda + 0.000173846 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 8.31894e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.000769016 *x*y*dx*dy + -4.0403e-05 *x*lens_ipow(y, 2)*dx + 0.000533305 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -2.52358e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + 0.0865706 *lens_ipow(dy, 6) + -0.301416 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 2.14103 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -0.955878 *lens_ipow(dx, 6) + 1.63741e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 7.97758e-07 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -7.97139e-09 *lens_ipow(x, 6) + -0.214276 *lens_ipow(dx, 2)*lens_ipow(lambda, 5) + -0.00031835 *lens_ipow(x, 2)*lens_ipow(lambda, 5) + -3.61656e-11 *lens_ipow(y, 8) + -2.32292e-10 *lens_ipow(x, 4)*lens_ipow(y, 4) + 9.84025e-08 *lens_ipow(x, 5)*y*dx*dy + -2.74209e-09 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx + -6.54621e-07 *lens_ipow(y, 4)*lens_ipow(lambda, 5) + 2.95669e-06 *lens_ipow(y, 5)*lens_ipow(dy, 5) + 2.08398e-10 *lens_ipow(y, 8)*lens_ipow(dy, 2) + -0.0015102 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -3.22409e-13 *lens_ipow(x, 2)*lens_ipow(y, 8) + 0.00393755 *lens_ipow(x, 3)*lens_ipow(dx, 5)*lens_ipow(dy, 2) + -0.000317048 *lens_ipow(x, 3)*y*lens_ipow(dx, 5)*dy + 1.80351e-09 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*dy + 1.05006e-10 *lens_ipow(x, 8)*lens_ipow(dx, 2) + -4.45403e-13 *lens_ipow(x, 8)*lens_ipow(y, 2) + -1.46574 *lens_ipow(lambda, 11);
