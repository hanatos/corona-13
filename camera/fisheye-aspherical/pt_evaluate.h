const float out_x =  + 0.000383744  + 9.56213 *dx + -8.0007e-05 *y + -1.09493 *x + -0.00172153 *y*dx + -0.00152814 *x*dy + -8.17665e-05 *x*y + 12.798 *dx*lens_ipow(dy, 2) + 1.36546 *y*dx*dy + 0.0403926 *lens_ipow(y, 2)*dx + 0.605049 *x*lens_ipow(dy, 2) + 1.70729 *x*lens_ipow(dx, 2) + 0.0419471 *x*y*dy + 0.000420065 *x*lens_ipow(y, 2) + 0.0792163 *lens_ipow(x, 2)*dx + 0.000436513 *lens_ipow(x, 3) + 0.945896 *dx*lens_ipow(lambda, 3) + -0.202715 *x*lens_ipow(lambda, 3) + 48.128 *lens_ipow(dx, 5) + 0.00426047 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.00217339 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.00210412 *lens_ipow(x, 2)*y*dx*dy + 0.00203802 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 0.320782 *x*lens_ipow(dy, 4)*lambda + 0.0606446 *x*y*lens_ipow(dx, 4)*dy + 246.259 *dx*lens_ipow(dy, 8) + 4212.18 *lens_ipow(dx, 5)*lens_ipow(dy, 4) + 2.11854e-06 *lens_ipow(y, 6)*lens_ipow(dx, 3) + 6.47202e-05 *x*lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.42186e-06 *x*lens_ipow(y, 5)*lens_ipow(dy, 3) + -1.60305e-06 *lens_ipow(x, 6)*lens_ipow(dx, 3) + -0.118584 *lens_ipow(y, 2)*lens_ipow(dx, 9) + 1.19081 *x*lens_ipow(lambda, 10) + -8.24139e-12 *lens_ipow(x, 2)*lens_ipow(y, 8)*dx + -1.00144e-12 *lens_ipow(x, 3)*lens_ipow(y, 8) + -1.00577e-07 *lens_ipow(x, 5)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + 1.21672e-09 *lens_ipow(x, 5)*lens_ipow(y, 4)*lens_ipow(dy, 2) + -2.16058e-12 *lens_ipow(x, 7)*lens_ipow(y, 4) + -2.69017e-13 *lens_ipow(x, 9)*lens_ipow(y, 2) + -1.15363e-13 *lens_ipow(x, 11);
const float out_y =  + -0.00225997  + 9.33303 *dy + -1.09741 *y + -9.47768e-05 *x + -0.000566364 *y*dy + 10.6192 *lens_ipow(dy, 3) + 11.6626 *lens_ipow(dx, 2)*dy + 2.20597 *y*lens_ipow(dy, 2) + 0.610995 *y*lens_ipow(dx, 2) + 0.0893611 *lens_ipow(y, 2)*dy + 0.000489772 *lens_ipow(y, 3) + 1.30888 *x*dx*dy + 0.0395868 *x*y*dx + 0.0404985 *lens_ipow(x, 2)*dy + 0.000402601 *lens_ipow(x, 2)*y + -0.222124 *y*lens_ipow(lambda, 3) + 31.4291 *lens_ipow(dy, 5) + 42.5087 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.00290883 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.000763391 *x*lens_ipow(y, 2)*dx*dy + 4.52239e-05 *x*lens_ipow(y, 3)*dx + 0.00252221 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 9.40529e-06 *lens_ipow(x, 3)*y*dx*dy + 9.80748 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + -0.105891 *x*y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.317875 *lens_ipow(x, 2)*lens_ipow(dy, 5)*lambda + -130.313 *y*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -1.50028e-06 *lens_ipow(y, 6)*lens_ipow(dy, 3) + -0.00352771 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 4) + 0.00021786 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 9.13463e-07 *lens_ipow(x, 6)*lens_ipow(dy, 3) + -1.7827e-11 *lens_ipow(x, 8)*y + 1.19013 *y*lens_ipow(lambda, 10) + 0.0128558 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 5) + -1.07484e-13 *lens_ipow(y, 11) + -1.67142e-05 *x*lens_ipow(y, 5)*lens_ipow(dx, 5) + -2.87851e-13 *lens_ipow(x, 2)*lens_ipow(y, 9) + 0.000191894 *lens_ipow(x, 4)*y*lens_ipow(dx, 6) + -1.62417e-12 *lens_ipow(x, 4)*lens_ipow(y, 7) + 2.0401e-11 *lens_ipow(x, 8)*lens_ipow(y, 2)*dy;
const float out_dx =  + 8.56054e-06  + -0.243525 *dx + -4.05935e-06 *y + -0.0765333 *x + -5.46437e-05 *y*dx + -1.17511e-06 *x*y + 0.747852 *lens_ipow(dx, 3) + 0.035631 *y*dx*dy + 0.00162668 *lens_ipow(y, 2)*dx + 0.0921868 *x*lens_ipow(dx, 2) + 0.000986087 *x*y*dy + 5.44023e-05 *x*lens_ipow(y, 2) + 0.00302239 *lens_ipow(x, 2)*dx + 8.42e-05 *lens_ipow(x, 3) + 0.00515012 *x*lens_ipow(lambda, 3) + 6.27548 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.51606 *lens_ipow(dx, 5) + -0.0761587 *y*dx*lens_ipow(dy, 3) + 0.138232 *y*lens_ipow(dx, 3)*dy + -0.00228306 *x*y*lens_ipow(dy, 3) + 9.54965e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 3.77105e-09 *lens_ipow(y, 6)*dx + 0.000850638 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.000333452 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + 8.33196e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + 0.152884 *dx*lens_ipow(lambda, 7) + -0.00160723 *lens_ipow(y, 2)*lens_ipow(dx, 7) + -5.28386e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + -1.22954e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 4) + -1.02774e-11 *lens_ipow(x, 3)*lens_ipow(y, 6) + -2.5894e-05 *lens_ipow(x, 4)*lens_ipow(dx, 5) + -3.50624e-10 *lens_ipow(x, 6)*y*dx*dy + -7.04088e-05 *x*lens_ipow(y, 2)*lens_ipow(lambda, 7) + -288.249 *lens_ipow(dx, 9)*lens_ipow(dy, 2) + 5.04628e-07 *lens_ipow(y, 6)*lens_ipow(dx, 5) + -7.31713e-15 *x*lens_ipow(y, 10) + -1.62319e-07 *lens_ipow(x, 5)*lens_ipow(lambda, 6) + 2.40319e-12 *lens_ipow(x, 7)*lens_ipow(y, 3)*dy + -2.67654e-14 *lens_ipow(x, 9)*lens_ipow(y, 2) + 2.36913e-13 *lens_ipow(x, 10)*dx;
const float out_dy =  + -3.41878e-05  + -0.264435 *dy + -0.0768909 *y + -3.06067e-06 *x + -7.03227e-05 *y*dy + -1.8606e-06 *lens_ipow(y, 2) + 1.1194 *lens_ipow(dy, 3) + 1.06482 *lens_ipow(dx, 2)*dy + 0.100559 *y*lens_ipow(dy, 2) + 0.0239802 *y*lens_ipow(dx, 2) + 0.00326401 *lens_ipow(y, 2)*dy + 8.87331e-05 *lens_ipow(y, 3) + 0.0738003 *x*dx*dy + 0.00128255 *x*y*dx + 0.00141914 *lens_ipow(x, 2)*dy + 0.000117199 *lens_ipow(x, 2)*y + 0.78563 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.0075966 *y*lens_ipow(lambda, 4) + 0.00128494 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 5.04373e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.448872 *lens_ipow(dy, 7) + 0.00521295 *lens_ipow(x, 2)*lens_ipow(dx, 4)*dy + -9.66926e-10 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + -1.17692e-05 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + -2.06379e-10 *lens_ipow(x, 6)*y + -1.63099e-11 *lens_ipow(y, 8)*dy + -0.0664809 *x*dx*lens_ipow(dy, 7) + -2.21327e-11 *x*lens_ipow(y, 7)*dx + 2.15958e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 4)*dy + -1.2492e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 4) + 0.30791 *dy*lens_ipow(lambda, 9) + 9.70707e-07 *lens_ipow(x, 4)*y*lens_ipow(dx, 4)*lambda + -7.62301e-05 *lens_ipow(y, 3)*lens_ipow(lambda, 8) + -0.00245688 *lens_ipow(y, 3)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + 8.97821e-08 *lens_ipow(y, 6)*lens_ipow(dy, 5) + -5.7491e-15 *lens_ipow(y, 11) + -5.87891e-05 *lens_ipow(x, 2)*y*lens_ipow(lambda, 8) + -2.85861e-14 *lens_ipow(x, 2)*lens_ipow(y, 9) + 3.37578e-07 *lens_ipow(x, 6)*lens_ipow(dy, 5) + -6.97416e-14 *lens_ipow(x, 6)*lens_ipow(y, 5);
const float out_transmittance =  + 0.0939581  + 0.283995 *lambda + 5.60543e-06 *y + -1.23477e-06 *x + -0.0153263 *lens_ipow(dy, 2) + -0.0158556 *lens_ipow(dx, 2) + -6.98099e-05 *lens_ipow(y, 2) + -9.2244e-05 *lens_ipow(x, 2) + -0.221615 *lens_ipow(lambda, 3) + -0.00345783 *y*dy*lambda + -4.56495e-08 *lens_ipow(y, 3) + -0.00403616 *x*dx*lambda + 6.30621e-07 *lens_ipow(x, 2)*dy + -0.602969 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.00066632 *x*y*dx*dy + 0.000134372 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -1.08572 *lens_ipow(dy, 6) + -1.11818 *lens_ipow(dx, 6) + 2.37624e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -4.13192e-09 *lens_ipow(y, 6) + 5.51676e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.74659e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -1.32065e-08 *lens_ipow(x, 2)*lens_ipow(y, 4) + 2.32621e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -1.56906e-08 *lens_ipow(x, 4)*lens_ipow(y, 2) + -0.0863025 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -0.12115 *lens_ipow(dx, 2)*lens_ipow(lambda, 5) + -9.47093e-05 *lens_ipow(y, 2)*lens_ipow(lambda, 5) + -3.26261e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2)*dy + 2.16016e-08 *lens_ipow(x, 5)*y*dx*dy + -2.56222e-11 *lens_ipow(x, 8) + 0.143338 *x*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 3) + -1.35495e-06 *lens_ipow(x, 4)*lens_ipow(lambda, 5) + -0.000360717 *x*lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 7.15811e-06 *lens_ipow(x, 4)*y*lens_ipow(dx, 4)*dy + -6.5758e-13 *lens_ipow(x, 6)*lens_ipow(y, 4) + 0.448312 *lens_ipow(lambda, 11) + -7.52309e-14 *lens_ipow(y, 10)*lambda + -5.61491e-13 *lens_ipow(x, 2)*lens_ipow(y, 8)*lambda + -9.582e-11 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(lambda, 3);
