float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + -0.000155767  + 0.000766471 *begin_dy + 24.6053 *begin_dx + 0.73415 *begin_x + 0.0165703 *begin_dx*begin_dy + -1.68227e-05 *begin_x*begin_y + 7.06548e-06 *lens_ipow(begin_x, 2) + -4.55325 *begin_dx*lens_ipow(begin_dy, 2) + 0.451153 *lens_ipow(begin_dx, 3) + 0.229003 *begin_y*begin_dx*begin_dy + -0.000247709 *begin_x*lens_ipow(begin_dy, 2) + 0.824824 *begin_x*lens_ipow(begin_dx, 2) + 0.00958852 *begin_x*begin_y*begin_dy + -0.000479556 *begin_x*lens_ipow(begin_y, 2) + 0.0262843 *lens_ipow(begin_x, 2)*begin_dx + -0.000436466 *lens_ipow(begin_x, 3) + 0.223873 *begin_dx*lens_ipow(begin_lambda, 4) + 0.0571414 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + 1.76736e-05 *lens_ipow(begin_y, 4)*begin_dx + -0.166597 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + 0.060452 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + -0.0030733 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 0.00263312 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + 0.00725331 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 3) + 2.83565 *begin_x*lens_ipow(begin_dy, 6) + -8.22628e-09 *begin_x*lens_ipow(begin_y, 6) + 0.00581822 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3)*begin_dy + -0.000561842 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -3.14552e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + 965.494 *lens_ipow(begin_dx, 7)*lens_ipow(begin_dy, 2) + -97.931 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + 0.654538 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 7) + -0.00375236 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + 1.63067e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 4) + 2.29803e-05 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 4) + 2258.93 *begin_dx*lens_ipow(begin_dy, 10) + 546.152 *lens_ipow(begin_dx, 11) + -1.60551e-12 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 6) + 3.35043e-12 *lens_ipow(begin_x, 9)*begin_y*begin_dy + -1.3465e-13 *lens_ipow(begin_x, 11);
  pred_y =  + -0.000504563  + 24.4897 *begin_dy + 0.734654 *begin_y + -1.4482e-05 *begin_x + -0.000447977 *begin_y*begin_dy + 2.69077 *lens_ipow(begin_dy, 3) + -1.32955 *lens_ipow(begin_dx, 2)*begin_dy + 0.977616 *begin_y*lens_ipow(begin_dy, 2) + 0.0293309 *lens_ipow(begin_y, 2)*begin_dy + -0.00045545 *lens_ipow(begin_y, 3) + 0.602323 *begin_x*begin_dx*begin_dy + 0.0149017 *begin_x*begin_y*begin_dx + 0.0074967 *lens_ipow(begin_x, 2)*begin_dy + -0.000423394 *lens_ipow(begin_x, 2)*begin_y + 38.9691 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -0.00379635 *begin_y*lens_ipow(begin_lambda, 4) + 0.972973 *begin_y*lens_ipow(begin_dx, 4) + 0.00201867 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -0.203875 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -0.00560888 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 0.0427209 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + 1.70072e-05 *lens_ipow(begin_x, 4)*begin_dy + 110.609 *lens_ipow(begin_dx, 6)*begin_dy + 0.00310112 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3)*begin_dy + 2.06908e-05 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 4) + -1.92882e-09 *lens_ipow(begin_y, 7)*lens_ipow(begin_dx, 2) + 1.16942e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 4) + -2.8014e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 3) + -1.98813e-10 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3) + -21.8163 *begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + 2.06399e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + 598.808 *lens_ipow(begin_dy, 11) + -1.20624e-13 *lens_ipow(begin_y, 11) + -98.6387 *begin_x*begin_dx*lens_ipow(begin_dy, 9) + -1.50275e-09 *begin_x*lens_ipow(begin_y, 7)*begin_dx*lens_ipow(begin_lambda, 2) + -6.46285e-13 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 9) + -1.50441e-12 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 7) + -1.56134e-08 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -1.23884e-12 *lens_ipow(begin_x, 10)*begin_dy + -1.26686e-13 *lens_ipow(begin_x, 10)*begin_y;
  pred_dx =  + 1.11366e-05  + 0.977122 *begin_dx + -3.83012e-06 *begin_y + -0.0120897 *begin_x + -5.98392e-05 *begin_y*begin_dx + -1.7626e-06 *begin_x*begin_y + 0.29759 *begin_dx*lens_ipow(begin_dy, 2) + 0.372268 *lens_ipow(begin_dx, 3) + 0.0679381 *begin_y*begin_dx*begin_dy + 0.0020582 *lens_ipow(begin_y, 2)*begin_dx + 0.0326892 *begin_x*lens_ipow(begin_dy, 2) + 0.113399 *begin_x*lens_ipow(begin_dx, 2) + 0.0047027 *begin_x*begin_y*begin_dy + 6.01405e-05 *begin_x*lens_ipow(begin_y, 2) + 0.00723811 *lens_ipow(begin_x, 2)*begin_dx + 6.01811e-05 *lens_ipow(begin_x, 3) + -0.216979 *begin_dx*lens_ipow(begin_lambda, 3) + -0.00994913 *begin_x*lens_ipow(begin_lambda, 4) + 0.0206805 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + 0.000115338 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + 0.00604365 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + -3.57103 *begin_dx*lens_ipow(begin_dy, 6) + -2.67996 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + 0.0205751 *begin_x*lens_ipow(begin_dy, 6) + -0.0109375 *begin_x*begin_y*lens_ipow(begin_dx, 4)*begin_dy + 7.82964e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 0.00604305 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 4) + -9.65451e-07 *lens_ipow(begin_x, 4)*begin_y*begin_dx*begin_dy + -2.11999e-05 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 5) + -8.98235e-07 *lens_ipow(begin_y, 5)*begin_dx*lens_ipow(begin_dy, 3) + -0.00967643 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 7) + -2.33434e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6) + 5.87801e-10 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 3)*begin_dy + -1.78597e-11 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2) + 4.36236e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 5) + 4.03032 *lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 6) + -1.31813e-14 *begin_x*lens_ipow(begin_y, 10) + -1.44566e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 3) + -1.25084e-09 *lens_ipow(begin_x, 7)*begin_y*lens_ipow(begin_dy, 3) + -1.39475e-14 *lens_ipow(begin_x, 11);
  pred_dy =  + -1.61233e-06  + 0.985464 *begin_dy + -0.0121701 *begin_y + -9.6598e-07 *lens_ipow(begin_y, 2) + -1.46865e-05 *begin_x*begin_dy + 0.292564 *lens_ipow(begin_dy, 3) + 0.174499 *lens_ipow(begin_dx, 2)*begin_dy + 0.111917 *begin_y*lens_ipow(begin_dy, 2) + 0.0356873 *begin_y*lens_ipow(begin_dx, 2) + 0.0070551 *lens_ipow(begin_y, 2)*begin_dy + 6.35938e-05 *lens_ipow(begin_y, 3) + -9.08493e-05 *begin_x*lens_ipow(begin_dy, 2) + 0.0639978 *begin_x*begin_dx*begin_dy + 0.0044227 *begin_x*begin_y*begin_dx + 0.0020064 *lens_ipow(begin_x, 2)*begin_dy + 5.43537e-05 *lens_ipow(begin_x, 2)*begin_y + -0.255487 *begin_dy*lens_ipow(begin_lambda, 3) + -0.0107658 *begin_y*lens_ipow(begin_lambda, 4) + 5.01666e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 0.000827463 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + 1.22092e-05 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2) + -0.0107568 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 4) + -0.000334692 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 4)*begin_dy + 6.81687e-07 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dy, 2) + 2.83637e-11 *lens_ipow(begin_x, 6)*begin_dy + -0.00871251 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 7) + 4.26529e-06 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 4) + 2.41891e-09 *lens_ipow(begin_y, 7)*lens_ipow(begin_dx, 2) + -3.55311e-12 *lens_ipow(begin_y, 9) + -3.09813e-09 *begin_x*lens_ipow(begin_y, 6)*begin_dx*begin_dy + 3.17396e-10 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 4)*begin_dy + -4.30718e-12 *lens_ipow(begin_x, 8)*begin_y + 1.67739e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + -2.61207e-06 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*begin_lambda + 1.89046e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_lambda, 6) + -7.61328e-06 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -7.73685e-14 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 9) + 2.5765e-07 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_lambda, 6) + 7.862e-10 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -2.61423e-13 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 5);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 24.6053  + 0.0165703 *begin_dy + -4.55325 *lens_ipow(begin_dy, 2) + 1.35346 *lens_ipow(begin_dx, 2) + 0.229003 *begin_y*begin_dy + 1.64965 *begin_x*begin_dx + 0.0262843 *lens_ipow(begin_x, 2) + 0.223873 *lens_ipow(begin_lambda, 4) + 0.171424 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 1.76736e-05 *lens_ipow(begin_y, 4) + -0.333195 *begin_x*begin_y*begin_dx*begin_dy + 0.060452 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + -0.0030733 *lens_ipow(begin_x, 2)*begin_y*begin_dy + 0.00725331 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 3) + 0.0174547 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -0.00168553 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 6758.46 *lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 2) + -293.793 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5) + 4.58177 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 6) + -0.00750472 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 3) + 9.19212e-05 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 3) + 2258.93 *lens_ipow(begin_dy, 10) + 6007.67 *lens_ipow(begin_dx, 10)+0.0f;
  dx1_domega0[0][1] =  + 0.000766471  + 0.0165703 *begin_dx + -9.10649 *begin_dx*begin_dy + 0.229003 *begin_y*begin_dx + -0.000495417 *begin_x*begin_dy + 0.00958852 *begin_x*begin_y + -0.166597 *begin_x*begin_y*lens_ipow(begin_dx, 2) + 0.120904 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -0.0030733 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 0.00526624 *lens_ipow(begin_x, 3)*begin_dy + 0.0217599 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + 17.0139 *begin_x*lens_ipow(begin_dy, 5) + 0.00581822 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3) + 1930.99 *lens_ipow(begin_dx, 7)*begin_dy + -489.655 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4) + -0.0112571 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 22589.3 *begin_dx*lens_ipow(begin_dy, 9) + 3.35043e-12 *lens_ipow(begin_x, 9)*begin_y+0.0f;
  dx1_domega0[1][0] =  + -2.6591 *begin_dx*begin_dy + 0.602323 *begin_x*begin_dy + 0.0149017 *begin_x*begin_y + 77.9381 *begin_dx*lens_ipow(begin_dy, 3) + 3.89189 *begin_y*lens_ipow(begin_dx, 3) + 0.00403735 *lens_ipow(begin_y, 3)*begin_dx + -0.203875 *begin_x*begin_y*lens_ipow(begin_dy, 2) + -0.00560888 *begin_x*lens_ipow(begin_y, 2)*begin_dy + 663.656 *lens_ipow(begin_dx, 5)*begin_dy + 0.00930335 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_dy + -3.85764e-09 *lens_ipow(begin_y, 7)*begin_dx + 4.67769e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3) + -87.2651 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + 2.06399e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*begin_dy*begin_lambda + -98.6387 *begin_x*lens_ipow(begin_dy, 9) + -1.50275e-09 *begin_x*lens_ipow(begin_y, 7)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0[1][1] =  + 24.4897  + -0.000447977 *begin_y + 8.07232 *lens_ipow(begin_dy, 2) + -1.32955 *lens_ipow(begin_dx, 2) + 1.95523 *begin_y*begin_dy + 0.0293309 *lens_ipow(begin_y, 2) + 0.602323 *begin_x*begin_dx + 0.0074967 *lens_ipow(begin_x, 2) + 116.907 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -0.407751 *begin_x*begin_y*begin_dx*begin_dy + -0.00560888 *begin_x*lens_ipow(begin_y, 2)*begin_dx + 0.128163 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + 1.70072e-05 *lens_ipow(begin_x, 4) + 110.609 *lens_ipow(begin_dx, 6) + 0.00310112 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3) + 8.27631e-05 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 3) + -8.40419e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2) + -43.6326 *begin_y*lens_ipow(begin_dx, 4)*begin_dy*lens_ipow(begin_lambda, 3) + 2.06399e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*begin_dx*begin_lambda + 6586.89 *lens_ipow(begin_dy, 10) + -887.748 *begin_x*begin_dx*lens_ipow(begin_dy, 8) + -4.68402e-08 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -1.23884e-12 *lens_ipow(begin_x, 10)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
