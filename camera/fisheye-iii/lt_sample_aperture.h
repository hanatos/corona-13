//input: scene_[x,y,z] - point in scene, ap_[x,y] - point on aperture
//output: [x,y,dx,dy] point and direction on sensor
#ifndef DEBUG_LOG
#define DEBUG_LOG
#endif
float view[3] =
{
  scene_x,
  scene_y,
  scene_z + lens_outer_pupil_curvature_radius
};
normalise(view);
int error = 0;
if(1 || view[2] >= lens_field_of_view)
{
  const float eps = 1e-8;
  float sqr_err = 1e30, sqr_ap_err = 1e30;
  float prev_sqr_err = 1e32, prev_sqr_ap_err = 1e32;
  for(int k=0;k<100&&(sqr_err>eps||sqr_ap_err>eps)&&error==0;k++)
  {
    prev_sqr_err = sqr_err, prev_sqr_ap_err = sqr_ap_err;
    const float begin_x = x;
    const float begin_y = y;
    const float begin_dx = dx;
    const float begin_dy = dy;
    const float begin_lambda = lambda;
    const float pred_ap[2] = {
       + 0.000902259  + 37.6368 *begin_dx + 0.116556 *begin_x + -9.58971e-06 *lens_ipow(begin_y, 2) + -5.62534e-06 *lens_ipow(begin_x, 2) + -0.153206 *begin_dx*lens_ipow(begin_dy, 2) + 1.17228 *lens_ipow(begin_dx, 3) + 0.838948 *begin_y*begin_dx*begin_dy + 0.00613825 *lens_ipow(begin_y, 2)*begin_dx + -0.0167978 *begin_x*lens_ipow(begin_dy, 2) + 0.889901 *begin_x*lens_ipow(begin_dx, 2) + 0.0112782 *begin_x*begin_y*begin_dy + 0.0171549 *lens_ipow(begin_x, 2)*begin_dx + -5.31713e-06 *begin_x*lens_ipow(begin_y, 2)*begin_dx + -7.4088 *begin_dx*lens_ipow(begin_lambda, 4) + -0.0160046 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -0.234674 *begin_x*lens_ipow(begin_lambda, 4) + 2.9518e-07 *begin_x*lens_ipow(begin_y, 4) + 0.000797167 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 3.07656e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + 6.9492e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + 2.97897e-07 *lens_ipow(begin_x, 5) + 386.299 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + 8.74808e-07 *lens_ipow(begin_y, 5)*begin_dx*begin_dy + 1.5698e-08 *lens_ipow(begin_y, 6)*begin_dx + -0.0827476 *begin_x*begin_y*lens_ipow(begin_dy, 5) + 0.00203023 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 8.74489e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + -0.00495765 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 5) + -0.00023624 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -0.000116432 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 3)*begin_lambda + 538.864 *begin_dx*lens_ipow(begin_dy, 8) + 2377.24 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 6) + 427.056 *lens_ipow(begin_dx, 9) + 7.6351e-11 *begin_x*lens_ipow(begin_y, 7)*begin_dy + 1.0104e-10 *lens_ipow(begin_x, 7)*begin_y*begin_dy + 1.41572e-10 *lens_ipow(begin_x, 8)*begin_dx + 35.8328 *begin_dx*lens_ipow(begin_lambda, 10) + 1.14029 *begin_x*lens_ipow(begin_lambda, 10) + -3.68189e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 4),
       + -0.000532841  + 37.6385 *begin_dy + 0.114645 *begin_y + 0.772044 *lens_ipow(begin_dy, 3) + 1.72184 *lens_ipow(begin_dx, 2)*begin_dy + 0.885817 *begin_y*lens_ipow(begin_dy, 2) + 0.0125457 *begin_y*lens_ipow(begin_dx, 2) + 0.0164211 *lens_ipow(begin_y, 2)*begin_dy + 9.08096e-05 *lens_ipow(begin_y, 3) + 0.918219 *begin_x*begin_dx*begin_dy + 0.0108813 *begin_x*begin_y*begin_dx + 0.00652653 *lens_ipow(begin_x, 2)*begin_dy + 0.000100077 *lens_ipow(begin_x, 2)*begin_y + -0.152055 *begin_y*lens_ipow(begin_lambda, 3) + -7.44186 *begin_dy*lens_ipow(begin_lambda, 4) + -0.000281488 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + 2.47932e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + 1.57224e-05 *lens_ipow(begin_x, 3)*begin_y*begin_dx + -0.0836668 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2) + 5.31678e-08 *lens_ipow(begin_y, 6)*begin_dy + 0.00387435 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 3) + 0.00554742 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*begin_dy + -0.00015151 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_lambda, 4) + 0.00213603 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 4) + 1.40558e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + -3.93158e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2)*begin_dy + 5.45554e-10 *lens_ipow(begin_x, 6)*begin_y + -0.474885 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + -0.0152121 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 5) + -0.0482852 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + 590.433 *lens_ipow(begin_dy, 9) + 8013.18 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 5) + 786.742 *lens_ipow(begin_dx, 8)*begin_dy + 1.14028e-05 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 4) + 1.25035e-07 *begin_x*lens_ipow(begin_y, 5)*begin_dx*lens_ipow(begin_lambda, 2) + 5.36908e-06 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dy, 4) + 3.66262e-11 *lens_ipow(begin_x, 8)*begin_dy + 35.8743 *begin_dy*lens_ipow(begin_lambda, 10) + 0.810168 *begin_y*lens_ipow(begin_lambda, 10) + 2.93762e-15 *lens_ipow(begin_y, 11)
    };
    const float delta_ap[] = {ap_x - pred_ap[0], ap_y - pred_ap[1]};
    sqr_ap_err = delta_ap[0]*delta_ap[0]+delta_ap[1]*delta_ap[1];
    float dx1_domega0[2][2];
    dx1_domega0[0][0] =  + 37.6368  + -0.153206 *lens_ipow(begin_dy, 2) + 3.51684 *lens_ipow(begin_dx, 2) + 0.838948 *begin_y*begin_dy + 0.00613825 *lens_ipow(begin_y, 2) + 1.7798 *begin_x*begin_dx + 0.0171549 *lens_ipow(begin_x, 2) + -5.31713e-06 *begin_x*lens_ipow(begin_y, 2) + -7.4088 *lens_ipow(begin_lambda, 4) + -0.0480137 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 0.000797167 *lens_ipow(begin_x, 2)*begin_y*begin_dy + 3.07656e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + 1931.5 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 8.74808e-07 *lens_ipow(begin_y, 5)*begin_dy + 1.5698e-08 *lens_ipow(begin_y, 6) + 0.00406046 *lens_ipow(begin_x, 3)*begin_dx*lens_ipow(begin_dy, 2) + -0.00023624 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -0.000349296 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2)*begin_lambda + 538.864 *lens_ipow(begin_dy, 8) + 7131.71 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 6) + 3843.51 *lens_ipow(begin_dx, 8) + 1.41572e-10 *lens_ipow(begin_x, 8) + 35.8328 *lens_ipow(begin_lambda, 10)+0.0f;
    dx1_domega0[0][1] =  + -0.306411 *begin_dx*begin_dy + 0.838948 *begin_y*begin_dx + -0.0335956 *begin_x*begin_dy + 0.0112782 *begin_x*begin_y + 0.000797167 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 772.598 *lens_ipow(begin_dx, 5)*begin_dy + 8.74808e-07 *lens_ipow(begin_y, 5)*begin_dx + -0.413738 *begin_x*begin_y*lens_ipow(begin_dy, 4) + 0.00406046 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_dy + 8.74489e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3) + -0.00495765 *begin_x*begin_y*lens_ipow(begin_lambda, 5) + -0.000472481 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + 4310.91 *begin_dx*lens_ipow(begin_dy, 7) + 14263.4 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + 7.6351e-11 *begin_x*lens_ipow(begin_y, 7) + 1.0104e-10 *lens_ipow(begin_x, 7)*begin_y+0.0f;
    dx1_domega0[1][0] =  + 3.44368 *begin_dx*begin_dy + 0.0250915 *begin_y*begin_dx + 0.918219 *begin_x*begin_dy + 0.0108813 *begin_x*begin_y + -0.000562975 *lens_ipow(begin_y, 3)*begin_dx + 1.57224e-05 *lens_ipow(begin_x, 3)*begin_y + -0.167334 *lens_ipow(begin_y, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 0.00387435 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + 0.0166423 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + 0.00854413 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3) + -7.86316e-05 *lens_ipow(begin_x, 4)*begin_dx*begin_dy + -0.474885 *begin_x*begin_dy*lens_ipow(begin_lambda, 5) + -0.0152121 *begin_x*begin_y*lens_ipow(begin_lambda, 5) + 32052.7 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + 6293.93 *lens_ipow(begin_dx, 7)*begin_dy + 1.25035e-07 *begin_x*lens_ipow(begin_y, 5)*lens_ipow(begin_lambda, 2)+0.0f;
    dx1_domega0[1][1] =  + 37.6385  + 2.31613 *lens_ipow(begin_dy, 2) + 1.72184 *lens_ipow(begin_dx, 2) + 1.77163 *begin_y*begin_dy + 0.0164211 *lens_ipow(begin_y, 2) + 0.918219 *begin_x*begin_dx + 0.00652653 *lens_ipow(begin_x, 2) + -7.44186 *lens_ipow(begin_lambda, 4) + 2.47932e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + -0.0836668 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + 5.31678e-08 *lens_ipow(begin_y, 6) + 0.011623 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 0.00554742 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -3.93158e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2) + -0.474885 *begin_x*begin_dx*lens_ipow(begin_lambda, 5) + -0.144856 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + 5313.89 *lens_ipow(begin_dy, 8) + 40065.9 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 4) + 786.742 *lens_ipow(begin_dx, 8) + 4.56113e-05 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 3) + 2.14763e-05 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dy, 3) + 3.66262e-11 *lens_ipow(begin_x, 8) + 35.8743 *lens_ipow(begin_lambda, 10)+0.0f;
    float invApJ[2][2];
    const float invdetap = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
    invApJ[0][0] =  dx1_domega0[1][1]*invdetap;
    invApJ[1][1] =  dx1_domega0[0][0]*invdetap;
    invApJ[0][1] = -dx1_domega0[0][1]*invdetap;
    invApJ[1][0] = -dx1_domega0[1][0]*invdetap;
    for(int i=0;i<2;i++)
    {
      dx += invApJ[0][i]*delta_ap[i];
      dy += invApJ[1][i]*delta_ap[i];
    }
    out[0] =  + -0.00483498  + 8.28868 *begin_dx + -7.22246 *begin_x + -493.876 *begin_dx*lens_ipow(begin_dy, 2) + -483.724 *lens_ipow(begin_dx, 3) + 0.0490984 *lens_ipow(begin_y, 2)*begin_dx + 0.007749 *begin_x*begin_y*begin_dy + -0.00234547 *begin_x*lens_ipow(begin_y, 2) + 0.0794021 *lens_ipow(begin_x, 2)*begin_dx + -0.00231619 *lens_ipow(begin_x, 3) + -0.643896 *begin_x*lens_ipow(begin_lambda, 3) + -33.5609 *begin_dx*lens_ipow(begin_lambda, 4) + 37.2951 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 19.6883 *begin_x*lens_ipow(begin_dx, 4) + 1.05857 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + 0.0116123 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 5.5052e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + 294.363 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 0.000475309 *lens_ipow(begin_y, 4)*begin_dx*lens_ipow(begin_dy, 2) + -17.9513 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 4) + -0.00872687 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 1.59861e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + -9.5735 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + -17906.2 *begin_dx*lens_ipow(begin_dy, 8) + -1408.2 *lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 4) + -17537.9 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 4) + -2308.01 *lens_ipow(begin_dx, 9) + 952.22 *begin_y*lens_ipow(begin_dx, 7)*begin_dy + 3.91481e-10 *lens_ipow(begin_y, 8)*begin_dx + 2.78188e-11 *begin_x*lens_ipow(begin_y, 8) + -0.538189 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_lambda, 6) + 1.27918e-10 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4) + 2.20726e-06 *lens_ipow(begin_x, 6)*lens_ipow(begin_dx, 3) + -0.00212264 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 3) + -0.495093 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 8) + -0.00097729 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 6) + 0.000183731 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 8.83945e-12 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 6)*begin_dx + -5.43472e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 4) + 5.96623e-14 *lens_ipow(begin_x, 11);
    out[1] =  + -0.00458604  + 12.118 *begin_dy + -7.15854 *begin_y + -0.00407539 *begin_x*begin_dy + -0.000100799 *begin_x*begin_y + -523.723 *lens_ipow(begin_dy, 3) + -517.258 *lens_ipow(begin_dx, 2)*begin_dy + 0.0611857 *lens_ipow(begin_y, 2)*begin_dy + -0.00233513 *lens_ipow(begin_y, 3) + 0.00661237 *begin_x*begin_y*begin_dx + 0.043253 *lens_ipow(begin_x, 2)*begin_dy + -0.00270822 *lens_ipow(begin_x, 2)*begin_y + -1.18818 *begin_y*lens_ipow(begin_lambda, 3) + -73.5077 *begin_dy*lens_ipow(begin_lambda, 4) + 0.258592 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.0028717 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 0.000108983 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + -3.96856 *begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + -5.75984 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + -0.0174741 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 4) + 263.595 *begin_x*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + -0.550294 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5) + 2.73536e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + 1.69692e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3) + 1.72868e-07 *lens_ipow(begin_x, 6)*begin_dy + 9.34882e-09 *lens_ipow(begin_x, 6)*begin_y + -0.130783 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 5) + -12038.5 *lens_ipow(begin_dy, 9) + -57564.3 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 7) + -10506.6 *lens_ipow(begin_dx, 8)*begin_dy + 1380.6 *begin_y*lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 2) + -2.62865 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 4) + -0.000321804 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -0.0301978 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 5) + 317.145 *begin_dy*lens_ipow(begin_lambda, 10) + 6.31414 *begin_y*lens_ipow(begin_lambda, 10) + 4.77077e-14 *lens_ipow(begin_y, 11) + -0.00127433 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 6) + -0.00218373 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 1.97353e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 6)*lens_ipow(begin_dy, 3);
    out[2] =  + -3.85693e-05  + -0.0727096 *begin_dx + -0.0652088 *begin_x + -4.1565 *begin_dx*lens_ipow(begin_dy, 2) + -4.11433 *lens_ipow(begin_dx, 3) + 0.00051108 *lens_ipow(begin_y, 2)*begin_dx + -0.00681552 *begin_x*lens_ipow(begin_dy, 2) + 0.000120965 *begin_x*begin_y*begin_dy + 1.00081e-05 *begin_x*lens_ipow(begin_y, 2) + 0.000808611 *lens_ipow(begin_x, 2)*begin_dx + 4.91477e-05 *lens_ipow(begin_x, 3) + -0.0230459 *begin_x*lens_ipow(begin_dx, 2)*begin_lambda + -0.266174 *begin_dx*lens_ipow(begin_lambda, 4) + -0.0216445 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 0.000764111 *begin_x*lens_ipow(begin_lambda, 4) + -7.08029e-08 *begin_x*lens_ipow(begin_y, 4) + -5.79308e-05 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + -1.08952e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -22.8273 *begin_dx*lens_ipow(begin_dy, 6) + 1.22008 *begin_y*lens_ipow(begin_dx, 5)*begin_dy + -1.04608e-05 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 3) + -6.96103e-06 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + 0.0407012 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 4) + -0.000953381 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -0.000987705 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 4) + -2.64734e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dy*lens_ipow(begin_lambda, 3) + -369.865 *lens_ipow(begin_dx, 7)*lens_ipow(begin_dy, 2) + -111.033 *lens_ipow(begin_dx, 9) + 15.1623 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + -3.65184e-07 *lens_ipow(begin_y, 5)*begin_dx*lens_ipow(begin_dy, 3) + 18.7281 *begin_x*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 4) + 0.00038672 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -1.53738e-08 *lens_ipow(begin_x, 6)*begin_dx*lens_ipow(begin_lambda, 2) + -1.50997e-13 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2) + -14.9246 *lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 5) + -2.90953 *begin_x*lens_ipow(begin_dy, 8)*lens_ipow(begin_lambda, 2) + -0.339268 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 8) + -0.0444722 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 7)*begin_dy + 6.49654e-12 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + -3.05364e-13 *lens_ipow(begin_x, 9)*lens_ipow(begin_lambda, 2);
    out[3] =  + -4.25514e-05  + -0.0591581 *begin_dy + 0.000221017 *begin_dx + -0.0653359 *begin_y + -3.51874e-05 *begin_y*begin_dy + -4.20955 *lens_ipow(begin_dy, 3) + -4.26429 *lens_ipow(begin_dx, 2)*begin_dy + -0.0116922 *begin_y*lens_ipow(begin_dy, 2) + -0.00450767 *begin_y*lens_ipow(begin_dx, 2) + 0.000743532 *lens_ipow(begin_y, 2)*begin_dy + 5.05106e-05 *lens_ipow(begin_y, 3) + 0.000225498 *begin_x*begin_y*begin_dx + 0.000280226 *lens_ipow(begin_x, 2)*begin_dy + 9.58856e-05 *lens_ipow(begin_x, 2)*begin_y + -0.190926 *begin_dy*lens_ipow(begin_lambda, 3) + 0.0130557 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.0115135 *begin_x*begin_y*lens_ipow(begin_dx, 3) + -1.68472e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 0.00553985 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + 0.00662699 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + -2.19101e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dx + -41.1667 *lens_ipow(begin_dx, 6)*begin_dy + 0.0604929 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + 0.0795261 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4)*begin_dy + 2.36719e-05 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 3) + -1.00722e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy + 6.00058e-11 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + -0.0674715 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + -68.2552 *lens_ipow(begin_dy, 9) + -1697.28 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 5) + -0.0727486 *begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 6) + 15.1821 *begin_y*lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 2) + -1.97045e-11 *lens_ipow(begin_y, 8)*begin_dy + 1.10576e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 4) + -2.49036e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 4) + 6.07526e-07 *lens_ipow(begin_x, 5)*begin_dx*lens_ipow(begin_dy, 3) + -1.29369e-11 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2)*begin_dy + -1.69162e-13 *lens_ipow(begin_x, 8)*begin_y + -2882.82 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 9) + -4.14076e-16 *lens_ipow(begin_y, 11);
    float pred_out_cs[7] = {0.0f};
    lens_sphereToCs(out, out+2, pred_out_cs, pred_out_cs+3, - lens_outer_pupil_curvature_radius, lens_outer_pupil_curvature_radius);
    float view[3] =
    {
      scene_x - pred_out_cs[0],
      scene_y - pred_out_cs[1],
      scene_z - pred_out_cs[2]
    };
    normalise(view);
    float out_new[5];
    lens_csToSphere(pred_out_cs, view, out_new, out_new+2, - lens_outer_pupil_curvature_radius, lens_outer_pupil_curvature_radius);
    const float delta_out[] = {out_new[2] - out[2], out_new[3] - out[3]};
    sqr_err = delta_out[0]*delta_out[0]+delta_out[1]*delta_out[1];
    float domega2_dx0[2][2];
    domega2_dx0[0][0] =  + -0.0652088  + -0.00681552 *lens_ipow(begin_dy, 2) + 0.000120965 *begin_y*begin_dy + 1.00081e-05 *lens_ipow(begin_y, 2) + 0.00161722 *begin_x*begin_dx + 0.000147443 *lens_ipow(begin_x, 2) + -0.0230459 *lens_ipow(begin_dx, 2)*begin_lambda + 0.000764111 *lens_ipow(begin_lambda, 4) + -7.08029e-08 *lens_ipow(begin_y, 4) + -0.000115862 *begin_x*begin_y*begin_dx*begin_dy + -2.17905e-06 *begin_x*lens_ipow(begin_y, 2)*begin_dx + -1.04608e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 3) + -6.96103e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + 0.0814024 *begin_x*begin_dx*lens_ipow(begin_dy, 4) + -0.00286014 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -0.00296311 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 4) + -7.94203e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dy*lens_ipow(begin_lambda, 3) + 18.7281 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 4) + 0.000773441 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -9.22431e-08 *lens_ipow(begin_x, 5)*begin_dx*lens_ipow(begin_lambda, 2) + -1.05698e-12 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2) + -2.90953 *lens_ipow(begin_dy, 8)*lens_ipow(begin_lambda, 2) + -0.339268 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 8) + -0.0889445 *begin_x*begin_y*lens_ipow(begin_dx, 7)*begin_dy + 3.89792e-11 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + -2.74828e-12 *lens_ipow(begin_x, 8)*lens_ipow(begin_lambda, 2)+0.0f;
    domega2_dx0[0][1] =  + 0.00102216 *begin_y*begin_dx + 0.000120965 *begin_x*begin_dy + 2.00162e-05 *begin_x*begin_y + -0.0216445 *begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -2.83211e-07 *begin_x*lens_ipow(begin_y, 3) + -5.79308e-05 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -2.17905e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 1.22008 *lens_ipow(begin_dx, 5)*begin_dy + -3.13825e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -2.08831e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -2.64734e-06 *lens_ipow(begin_x, 3)*begin_dy*lens_ipow(begin_lambda, 3) + 15.1623 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + -1.82592e-06 *lens_ipow(begin_y, 4)*begin_dx*lens_ipow(begin_dy, 3) + 0.000773441 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -3.01994e-13 *lens_ipow(begin_x, 7)*begin_y + -0.0444722 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 7)*begin_dy + 1.94896e-11 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2)*begin_dx*begin_dy+0.0f;
    domega2_dx0[1][0] =  + 0.000225498 *begin_y*begin_dx + 0.000560451 *begin_x*begin_dy + 0.000191771 *begin_x*begin_y + 0.0130557 *begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.0115135 *begin_y*lens_ipow(begin_dx, 3) + -1.68472e-06 *lens_ipow(begin_y, 3)*begin_dx + 0.0110797 *begin_x*lens_ipow(begin_dy, 3) + 0.013254 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + -6.57304e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dx + -2.01444e-08 *begin_x*lens_ipow(begin_y, 4)*begin_dy + 1.20012e-10 *begin_x*lens_ipow(begin_y, 5) + -0.0674715 *begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + 2.21152e-07 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 4) + -4.98073e-06 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 4) + 3.03763e-06 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_dy, 3) + -7.76213e-11 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*begin_dy + -1.35329e-12 *lens_ipow(begin_x, 7)*begin_y+0.0f;
    domega2_dx0[1][1] =  + -0.0653359  + -3.51874e-05 *begin_dy + -0.0116922 *lens_ipow(begin_dy, 2) + -0.00450767 *lens_ipow(begin_dx, 2) + 0.00148706 *begin_y*begin_dy + 0.000151532 *lens_ipow(begin_y, 2) + 0.000225498 *begin_x*begin_dx + 9.58856e-05 *lens_ipow(begin_x, 2) + 0.0130557 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + 0.0115135 *begin_x*lens_ipow(begin_dx, 3) + -5.05417e-06 *begin_x*lens_ipow(begin_y, 2)*begin_dx + -2.19101e-06 *lens_ipow(begin_x, 3)*begin_dx + 0.120986 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + 0.159052 *begin_y*lens_ipow(begin_dx, 4)*begin_dy + 9.46874e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 3) + -4.02888e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dy + 3.00029e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4) + -0.0727486 *lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 6) + 15.1821 *lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 2) + -1.57636e-10 *lens_ipow(begin_y, 7)*begin_dy + 3.31728e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 4) + -7.47109e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 4) + -2.58738e-11 *lens_ipow(begin_x, 6)*begin_y*begin_dy + -1.69162e-13 *lens_ipow(begin_x, 8) + -4.55483e-15 *lens_ipow(begin_y, 10)+0.0f;
    float invJ[2][2];
    const float invdet = 1.0f/(domega2_dx0[0][0]*domega2_dx0[1][1] - domega2_dx0[0][1]*domega2_dx0[1][0]);
    invJ[0][0] =  domega2_dx0[1][1]*invdet;
    invJ[1][1] =  domega2_dx0[0][0]*invdet;
    invJ[0][1] = -domega2_dx0[0][1]*invdet;
    invJ[1][0] = -domega2_dx0[1][0]*invdet;
    for(int i=0;i<2;i++)
    {
      x += invJ[0][i]*delta_out[i];
      y += invJ[1][i]*delta_out[i];
    }
    if(sqr_err>prev_sqr_err) error |= 1;
    if(sqr_ap_err>prev_sqr_ap_err) error |= 2;
    if(out[0]!=out[0]) error |= 4;
    if(out[1]!=out[1]) error |= 8;
    DEBUG_LOG;
    // reset error code for first few iterations.
    if(k<10) error = 0;
  }
}
else
  error = 128;
if(out[0]*out[0]+out[1]*out[1] > lens_outer_pupil_radius*lens_outer_pupil_radius) error |= 16;
const float begin_x = x;
const float begin_y = y;
const float begin_dx = dx;
const float begin_dy = dy;
const float begin_lambda = lambda;
if(error==0)
  out[4] =  + 0.254508  + 0.277365 *begin_lambda + -0.000103235 *begin_dx + 7.73991e-08 *begin_y + -2.93241e-06 *begin_x + -0.0357437 *lens_ipow(begin_dy, 2) + -0.0369814 *lens_ipow(begin_dx, 2) + -0.000666465 *begin_y*begin_dy + -1.70642e-05 *lens_ipow(begin_y, 2) + -0.000711174 *begin_x*begin_dx + 1.61123e-05 *lens_ipow(begin_x, 2) + -0.229332 *lens_ipow(begin_lambda, 3) + -1.45229e-05 *begin_y*lens_ipow(begin_dx, 2) + -2.45081e-06 *begin_x*begin_dx*begin_dy + -0.332127 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 0.000122776 *begin_x*begin_y*begin_dx*begin_dy + -1.04272e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + -4.34689e-07 *lens_ipow(begin_x, 4) + -1.54277 *lens_ipow(begin_dx, 6) + 1.12838e-08 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2) + -1.68729e-08 *lens_ipow(begin_y, 5)*begin_dy + -1.41269e-09 *lens_ipow(begin_y, 6) + -9.16258e-06 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 2) + 4.76842e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 4.50116e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 1.61795e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2) + -1.45811e-08 *lens_ipow(begin_x, 4)*begin_y*begin_dy + -0.00515863 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -8.70671 *lens_ipow(begin_dy, 8) + -5.27253e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 9.41918e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dx*lens_ipow(begin_dy, 3) + -3.72826e-07 *lens_ipow(begin_x, 5)*begin_dx*lens_ipow(begin_dy, 2) + 2.21495e-08 *lens_ipow(begin_y, 6)*lens_ipow(begin_dy, 4) + -1.06747e-09 *lens_ipow(begin_y, 7)*lens_ipow(begin_dx, 2)*begin_dy + -4.62681e-08 *begin_x*lens_ipow(begin_y, 5)*begin_dx*lens_ipow(begin_dy, 3) + 9.62924e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 5)*begin_dx*begin_dy + -4.6273e-14 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 6) + -1.3111e-14 *lens_ipow(begin_x, 8)*lens_ipow(begin_y, 2) + -2.51131e-15 *lens_ipow(begin_x, 10) + 0.406522 *lens_ipow(begin_lambda, 11);
else
  out[4] = 0.0f;
