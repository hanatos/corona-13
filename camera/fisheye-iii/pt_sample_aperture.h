float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + 0.000902259  + 37.6368 *begin_dx + 0.116556 *begin_x + -9.58971e-06 *lens_ipow(begin_y, 2) + -5.62534e-06 *lens_ipow(begin_x, 2) + -0.153206 *begin_dx*lens_ipow(begin_dy, 2) + 1.17228 *lens_ipow(begin_dx, 3) + 0.838948 *begin_y*begin_dx*begin_dy + 0.00613825 *lens_ipow(begin_y, 2)*begin_dx + -0.0167978 *begin_x*lens_ipow(begin_dy, 2) + 0.889901 *begin_x*lens_ipow(begin_dx, 2) + 0.0112782 *begin_x*begin_y*begin_dy + 0.0171549 *lens_ipow(begin_x, 2)*begin_dx + -5.31713e-06 *begin_x*lens_ipow(begin_y, 2)*begin_dx + -7.4088 *begin_dx*lens_ipow(begin_lambda, 4) + -0.0160046 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -0.234674 *begin_x*lens_ipow(begin_lambda, 4) + 2.9518e-07 *begin_x*lens_ipow(begin_y, 4) + 0.000797167 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 3.07656e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + 6.9492e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + 2.97897e-07 *lens_ipow(begin_x, 5) + 386.299 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + 8.74808e-07 *lens_ipow(begin_y, 5)*begin_dx*begin_dy + 1.5698e-08 *lens_ipow(begin_y, 6)*begin_dx + -0.0827476 *begin_x*begin_y*lens_ipow(begin_dy, 5) + 0.00203023 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 8.74489e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + -0.00495765 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 5) + -0.00023624 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -0.000116432 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 3)*begin_lambda + 538.864 *begin_dx*lens_ipow(begin_dy, 8) + 2377.24 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 6) + 427.056 *lens_ipow(begin_dx, 9) + 7.6351e-11 *begin_x*lens_ipow(begin_y, 7)*begin_dy + 1.0104e-10 *lens_ipow(begin_x, 7)*begin_y*begin_dy + 1.41572e-10 *lens_ipow(begin_x, 8)*begin_dx + 35.8328 *begin_dx*lens_ipow(begin_lambda, 10) + 1.14029 *begin_x*lens_ipow(begin_lambda, 10) + -3.68189e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 4);
  pred_y =  + -0.000532841  + 37.6385 *begin_dy + 0.114645 *begin_y + 0.772044 *lens_ipow(begin_dy, 3) + 1.72184 *lens_ipow(begin_dx, 2)*begin_dy + 0.885817 *begin_y*lens_ipow(begin_dy, 2) + 0.0125457 *begin_y*lens_ipow(begin_dx, 2) + 0.0164211 *lens_ipow(begin_y, 2)*begin_dy + 9.08096e-05 *lens_ipow(begin_y, 3) + 0.918219 *begin_x*begin_dx*begin_dy + 0.0108813 *begin_x*begin_y*begin_dx + 0.00652653 *lens_ipow(begin_x, 2)*begin_dy + 0.000100077 *lens_ipow(begin_x, 2)*begin_y + -0.152055 *begin_y*lens_ipow(begin_lambda, 3) + -7.44186 *begin_dy*lens_ipow(begin_lambda, 4) + -0.000281488 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + 2.47932e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + 1.57224e-05 *lens_ipow(begin_x, 3)*begin_y*begin_dx + -0.0836668 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2) + 5.31678e-08 *lens_ipow(begin_y, 6)*begin_dy + 0.00387435 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 3) + 0.00554742 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*begin_dy + -0.00015151 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_lambda, 4) + 0.00213603 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 4) + 1.40558e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + -3.93158e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2)*begin_dy + 5.45554e-10 *lens_ipow(begin_x, 6)*begin_y + -0.474885 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + -0.0152121 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 5) + -0.0482852 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + 590.433 *lens_ipow(begin_dy, 9) + 8013.18 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 5) + 786.742 *lens_ipow(begin_dx, 8)*begin_dy + 1.14028e-05 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 4) + 1.25035e-07 *begin_x*lens_ipow(begin_y, 5)*begin_dx*lens_ipow(begin_lambda, 2) + 5.36908e-06 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dy, 4) + 3.66262e-11 *lens_ipow(begin_x, 8)*begin_dy + 35.8743 *begin_dy*lens_ipow(begin_lambda, 10) + 0.810168 *begin_y*lens_ipow(begin_lambda, 10) + 2.93762e-15 *lens_ipow(begin_y, 11);
  pred_dx =  + -9.58194e-06  + -0.667314 *begin_dx + -0.0285989 *begin_x + -1.44854 *begin_dx*lens_ipow(begin_dy, 2) + -1.10292 *lens_ipow(begin_dx, 3) + -0.0169563 *begin_y*begin_dx*begin_dy + -0.00050775 *lens_ipow(begin_y, 2)*begin_dx + 0.000398916 *begin_x*lens_ipow(begin_dy, 2) + -0.0109949 *begin_x*lens_ipow(begin_dx, 2) + -0.000213514 *begin_x*begin_y*begin_dy + -9.9664e-06 *begin_x*lens_ipow(begin_y, 2) + -0.000699554 *lens_ipow(begin_x, 2)*begin_dx + -9.96278e-06 *lens_ipow(begin_x, 3) + -0.236851 *begin_dx*lens_ipow(begin_lambda, 3) + -1.3038 *lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 2) + 0.00112127 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + 7.95606e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -0.000508211 *begin_x*lens_ipow(begin_lambda, 5) + 0.00444486 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 4) + -0.0870952 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 4) + 5.53917e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4) + -3.15492e-06 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 3) + -6.08308e-12 *begin_x*lens_ipow(begin_y, 6) + 1.00772e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + 4.73016e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -0.0566703 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + 6.75305e-07 *lens_ipow(begin_x, 4)*begin_y*begin_dx*lens_ipow(begin_dy, 3) + 1.10954e-11 *lens_ipow(begin_x, 7)*lens_ipow(begin_dx, 2) + -6.00966e-14 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2) + -16.5736 *begin_dx*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 5) + -1.00218e-05 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 3) + -0.195445 *begin_x*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 5) + -8.96731e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*lens_ipow(begin_lambda, 3) + -6.67883e-09 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 3) + 1.11761 *begin_dx*lens_ipow(begin_lambda, 10) + -53.5004 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + -0.00247517 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 8) + 2.40364e-05 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 4) + -7.79088e-06 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_lambda, 6) + -6.7343e-11 *lens_ipow(begin_x, 7)*lens_ipow(begin_lambda, 4);
  pred_dy =  + 1.25512e-06  + -0.667848 *begin_dy + -0.0285768 *begin_y + -0.001593 *lens_ipow(begin_dy, 2) + -3.91201e-05 *begin_y*begin_dy + -1.96027e-05 *begin_y*begin_dx + -1.08648 *lens_ipow(begin_dy, 3) + -1.47453 *lens_ipow(begin_dx, 2)*begin_dy + -0.0108042 *begin_y*lens_ipow(begin_dy, 2) + -0.000295841 *begin_y*lens_ipow(begin_dx, 2) + -0.0006781 *lens_ipow(begin_y, 2)*begin_dy + -9.73318e-06 *lens_ipow(begin_y, 3) + -0.0183763 *begin_x*begin_dx*begin_dy + -0.000251102 *begin_x*begin_y*begin_dx + -0.000507707 *lens_ipow(begin_x, 2)*begin_dy + -9.87308e-06 *lens_ipow(begin_x, 2)*begin_y + -0.240532 *begin_dy*lens_ipow(begin_lambda, 3) + -1.07008e-05 *begin_x*begin_y*lens_ipow(begin_dx, 2) + -1.38878 *lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + -0.000665779 *begin_y*lens_ipow(begin_lambda, 4) + 0.000927268 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -0.0902573 *begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + -3.88614e-06 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2)*begin_dy + 8.22724e-05 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 4) + -6.33144e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -1.92613e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -3.20931e-11 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + -6.89377e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3)*begin_dy + -7.86867e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx + -8.46515e-12 *lens_ipow(begin_x, 6)*begin_y + -0.0313921 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + -3.43879e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dy, 3)*begin_lambda + -6.24534e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy*lens_ipow(begin_lambda, 2) + -7.71813 *lens_ipow(begin_dx, 4)*begin_dy*lens_ipow(begin_lambda, 5) + -4.00997e-05 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 5) + 1.50561 *begin_dy*lens_ipow(begin_lambda, 10) + -0.00461612 *lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 8) + -2.06316e-08 *lens_ipow(begin_y, 6)*lens_ipow(begin_dy, 5) + -4.58061e-11 *lens_ipow(begin_y, 7)*lens_ipow(begin_lambda, 4) + -1.37717e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_lambda, 6);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 37.6368  + -0.153206 *lens_ipow(begin_dy, 2) + 3.51684 *lens_ipow(begin_dx, 2) + 0.838948 *begin_y*begin_dy + 0.00613825 *lens_ipow(begin_y, 2) + 1.7798 *begin_x*begin_dx + 0.0171549 *lens_ipow(begin_x, 2) + -5.31713e-06 *begin_x*lens_ipow(begin_y, 2) + -7.4088 *lens_ipow(begin_lambda, 4) + -0.0480137 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 0.000797167 *lens_ipow(begin_x, 2)*begin_y*begin_dy + 3.07656e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + 1931.5 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 8.74808e-07 *lens_ipow(begin_y, 5)*begin_dy + 1.5698e-08 *lens_ipow(begin_y, 6) + 0.00406046 *lens_ipow(begin_x, 3)*begin_dx*lens_ipow(begin_dy, 2) + -0.00023624 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -0.000349296 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2)*begin_lambda + 538.864 *lens_ipow(begin_dy, 8) + 7131.71 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 6) + 3843.51 *lens_ipow(begin_dx, 8) + 1.41572e-10 *lens_ipow(begin_x, 8) + 35.8328 *lens_ipow(begin_lambda, 10)+0.0f;
  dx1_domega0[0][1] =  + -0.306411 *begin_dx*begin_dy + 0.838948 *begin_y*begin_dx + -0.0335956 *begin_x*begin_dy + 0.0112782 *begin_x*begin_y + 0.000797167 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 772.598 *lens_ipow(begin_dx, 5)*begin_dy + 8.74808e-07 *lens_ipow(begin_y, 5)*begin_dx + -0.413738 *begin_x*begin_y*lens_ipow(begin_dy, 4) + 0.00406046 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_dy + 8.74489e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3) + -0.00495765 *begin_x*begin_y*lens_ipow(begin_lambda, 5) + -0.000472481 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + 4310.91 *begin_dx*lens_ipow(begin_dy, 7) + 14263.4 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + 7.6351e-11 *begin_x*lens_ipow(begin_y, 7) + 1.0104e-10 *lens_ipow(begin_x, 7)*begin_y+0.0f;
  dx1_domega0[1][0] =  + 3.44368 *begin_dx*begin_dy + 0.0250915 *begin_y*begin_dx + 0.918219 *begin_x*begin_dy + 0.0108813 *begin_x*begin_y + -0.000562975 *lens_ipow(begin_y, 3)*begin_dx + 1.57224e-05 *lens_ipow(begin_x, 3)*begin_y + -0.167334 *lens_ipow(begin_y, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 0.00387435 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + 0.0166423 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + 0.00854413 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3) + -7.86316e-05 *lens_ipow(begin_x, 4)*begin_dx*begin_dy + -0.474885 *begin_x*begin_dy*lens_ipow(begin_lambda, 5) + -0.0152121 *begin_x*begin_y*lens_ipow(begin_lambda, 5) + 32052.7 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + 6293.93 *lens_ipow(begin_dx, 7)*begin_dy + 1.25035e-07 *begin_x*lens_ipow(begin_y, 5)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0[1][1] =  + 37.6385  + 2.31613 *lens_ipow(begin_dy, 2) + 1.72184 *lens_ipow(begin_dx, 2) + 1.77163 *begin_y*begin_dy + 0.0164211 *lens_ipow(begin_y, 2) + 0.918219 *begin_x*begin_dx + 0.00652653 *lens_ipow(begin_x, 2) + -7.44186 *lens_ipow(begin_lambda, 4) + 2.47932e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + -0.0836668 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + 5.31678e-08 *lens_ipow(begin_y, 6) + 0.011623 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 0.00554742 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -3.93158e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2) + -0.474885 *begin_x*begin_dx*lens_ipow(begin_lambda, 5) + -0.144856 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + 5313.89 *lens_ipow(begin_dy, 8) + 40065.9 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 4) + 786.742 *lens_ipow(begin_dx, 8) + 4.56113e-05 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 3) + 2.14763e-05 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dy, 3) + 3.66262e-11 *lens_ipow(begin_x, 8) + 35.8743 *lens_ipow(begin_lambda, 10)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
