const float out_x =  + -0.00483498  + 8.28868 *dx + -7.22246 *x + -493.876 *dx*lens_ipow(dy, 2) + -483.724 *lens_ipow(dx, 3) + 0.0490984 *lens_ipow(y, 2)*dx + 0.007749 *x*y*dy + -0.00234547 *x*lens_ipow(y, 2) + 0.0794021 *lens_ipow(x, 2)*dx + -0.00231619 *lens_ipow(x, 3) + -0.643896 *x*lens_ipow(lambda, 3) + -33.5609 *dx*lens_ipow(lambda, 4) + 37.2951 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 19.6883 *x*lens_ipow(dx, 4) + 1.05857 *x*y*lens_ipow(dx, 2)*dy + 0.0116123 *lens_ipow(x, 2)*y*dx*dy + 5.5052e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 294.363 *y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 0.000475309 *lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + -17.9513 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -0.00872687 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 1.59861e-08 *lens_ipow(x, 5)*lens_ipow(y, 2) + -9.5735 *y*dx*dy*lens_ipow(lambda, 5) + -17906.2 *dx*lens_ipow(dy, 8) + -1408.2 *lens_ipow(dx, 5)*lens_ipow(lambda, 4) + -17537.9 *lens_ipow(dx, 5)*lens_ipow(dy, 4) + -2308.01 *lens_ipow(dx, 9) + 952.22 *y*lens_ipow(dx, 7)*dy + 3.91481e-10 *lens_ipow(y, 8)*dx + 2.78188e-11 *x*lens_ipow(y, 8) + -0.538189 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 6) + 1.27918e-10 *lens_ipow(x, 5)*lens_ipow(y, 4) + 2.20726e-06 *lens_ipow(x, 6)*lens_ipow(dx, 3) + -0.00212264 *lens_ipow(y, 4)*lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -0.495093 *x*y*dy*lens_ipow(lambda, 8) + -0.00097729 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 6) + 0.000183731 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 8.83945e-12 *lens_ipow(x, 4)*lens_ipow(y, 6)*dx + -5.43472e-07 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dy, 4) + 5.96623e-14 *lens_ipow(x, 11);
const float out_y =  + -0.00458604  + 12.118 *dy + -7.15854 *y + -0.00407539 *x*dy + -0.000100799 *x*y + -523.723 *lens_ipow(dy, 3) + -517.258 *lens_ipow(dx, 2)*dy + 0.0611857 *lens_ipow(y, 2)*dy + -0.00233513 *lens_ipow(y, 3) + 0.00661237 *x*y*dx + 0.043253 *lens_ipow(x, 2)*dy + -0.00270822 *lens_ipow(x, 2)*y + -1.18818 *y*lens_ipow(lambda, 3) + -73.5077 *dy*lens_ipow(lambda, 4) + 0.258592 *x*y*dx*lens_ipow(dy, 2) + 0.0028717 *x*lens_ipow(y, 2)*dx*dy + 0.000108983 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -3.96856 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -5.75984 *x*dx*dy*lens_ipow(lambda, 3) + -0.0174741 *lens_ipow(y, 3)*lens_ipow(dx, 4) + 263.595 *x*lens_ipow(dx, 3)*lens_ipow(dy, 3) + -0.550294 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 2.73536e-08 *lens_ipow(x, 2)*lens_ipow(y, 5) + 1.69692e-08 *lens_ipow(x, 4)*lens_ipow(y, 3) + 1.72868e-07 *lens_ipow(x, 6)*dy + 9.34882e-09 *lens_ipow(x, 6)*y + -0.130783 *x*y*dx*lens_ipow(lambda, 5) + -12038.5 *lens_ipow(dy, 9) + -57564.3 *lens_ipow(dx, 2)*lens_ipow(dy, 7) + -10506.6 *lens_ipow(dx, 8)*dy + 1380.6 *y*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -2.62865 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + -0.000321804 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0301978 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 5) + 317.145 *dy*lens_ipow(lambda, 10) + 6.31414 *y*lens_ipow(lambda, 10) + 4.77077e-14 *lens_ipow(y, 11) + -0.00127433 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 6) + -0.00218373 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 1.97353e-08 *lens_ipow(x, 2)*lens_ipow(y, 6)*lens_ipow(dy, 3);
const float out_dx =  + -3.85693e-05  + -0.0727096 *dx + -0.0652088 *x + -4.1565 *dx*lens_ipow(dy, 2) + -4.11433 *lens_ipow(dx, 3) + 0.00051108 *lens_ipow(y, 2)*dx + -0.00681552 *x*lens_ipow(dy, 2) + 0.000120965 *x*y*dy + 1.00081e-05 *x*lens_ipow(y, 2) + 0.000808611 *lens_ipow(x, 2)*dx + 4.91477e-05 *lens_ipow(x, 3) + -0.0230459 *x*lens_ipow(dx, 2)*lambda + -0.266174 *dx*lens_ipow(lambda, 4) + -0.0216445 *y*dx*dy*lens_ipow(lambda, 2) + 0.000764111 *x*lens_ipow(lambda, 4) + -7.08029e-08 *x*lens_ipow(y, 4) + -5.79308e-05 *lens_ipow(x, 2)*y*dx*dy + -1.08952e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -22.8273 *dx*lens_ipow(dy, 6) + 1.22008 *y*lens_ipow(dx, 5)*dy + -1.04608e-05 *x*lens_ipow(y, 3)*lens_ipow(dy, 3) + -6.96103e-06 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + 0.0407012 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4) + -0.000953381 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.000987705 *lens_ipow(x, 3)*lens_ipow(dx, 4) + -2.64734e-06 *lens_ipow(x, 3)*y*dy*lens_ipow(lambda, 3) + -369.865 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + -111.033 *lens_ipow(dx, 9) + 15.1623 *y*lens_ipow(dx, 3)*lens_ipow(dy, 5) + -3.65184e-07 *lens_ipow(y, 5)*dx*lens_ipow(dy, 3) + 18.7281 *x*lens_ipow(dx, 4)*lens_ipow(dy, 4) + 0.00038672 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -1.53738e-08 *lens_ipow(x, 6)*dx*lens_ipow(lambda, 2) + -1.50997e-13 *lens_ipow(x, 7)*lens_ipow(y, 2) + -14.9246 *lens_ipow(dx, 5)*lens_ipow(lambda, 5) + -2.90953 *x*lens_ipow(dy, 8)*lens_ipow(lambda, 2) + -0.339268 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 8) + -0.0444722 *lens_ipow(x, 2)*y*lens_ipow(dx, 7)*dy + 6.49654e-12 *lens_ipow(x, 6)*lens_ipow(y, 3)*dx*dy + -3.05364e-13 *lens_ipow(x, 9)*lens_ipow(lambda, 2);
const float out_dy =  + -4.25514e-05  + -0.0591581 *dy + 0.000221017 *dx + -0.0653359 *y + -3.51874e-05 *y*dy + -4.20955 *lens_ipow(dy, 3) + -4.26429 *lens_ipow(dx, 2)*dy + -0.0116922 *y*lens_ipow(dy, 2) + -0.00450767 *y*lens_ipow(dx, 2) + 0.000743532 *lens_ipow(y, 2)*dy + 5.05106e-05 *lens_ipow(y, 3) + 0.000225498 *x*y*dx + 0.000280226 *lens_ipow(x, 2)*dy + 9.58856e-05 *lens_ipow(x, 2)*y + -0.190926 *dy*lens_ipow(lambda, 3) + 0.0130557 *x*y*dx*lens_ipow(dy, 2) + 0.0115135 *x*y*lens_ipow(dx, 3) + -1.68472e-06 *x*lens_ipow(y, 3)*dx + 0.00553985 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.00662699 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -2.19101e-06 *lens_ipow(x, 3)*y*dx + -41.1667 *lens_ipow(dx, 6)*dy + 0.0604929 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.0795261 *lens_ipow(y, 2)*lens_ipow(dx, 4)*dy + 2.36719e-05 *lens_ipow(y, 4)*lens_ipow(dy, 3) + -1.00722e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + 6.00058e-11 *lens_ipow(x, 2)*lens_ipow(y, 5) + -0.0674715 *x*dx*dy*lens_ipow(lambda, 5) + -68.2552 *lens_ipow(dy, 9) + -1697.28 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + -0.0727486 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 15.1821 *y*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -1.97045e-11 *lens_ipow(y, 8)*dy + 1.10576e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 4) + -2.49036e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 4) + 6.07526e-07 *lens_ipow(x, 5)*dx*lens_ipow(dy, 3) + -1.29369e-11 *lens_ipow(x, 6)*lens_ipow(y, 2)*dy + -1.69162e-13 *lens_ipow(x, 8)*y + -2882.82 *lens_ipow(dx, 2)*lens_ipow(dy, 9) + -4.14076e-16 *lens_ipow(y, 11);
const float out_transmittance =  + 0.254508  + 0.277365 *lambda + -0.000103235 *dx + 7.73991e-08 *y + -2.93241e-06 *x + -0.0357437 *lens_ipow(dy, 2) + -0.0369814 *lens_ipow(dx, 2) + -0.000666465 *y*dy + -1.70642e-05 *lens_ipow(y, 2) + -0.000711174 *x*dx + 1.61123e-05 *lens_ipow(x, 2) + -0.229332 *lens_ipow(lambda, 3) + -1.45229e-05 *y*lens_ipow(dx, 2) + -2.45081e-06 *x*dx*dy + -0.332127 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000122776 *x*y*dx*dy + -1.04272e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -4.34689e-07 *lens_ipow(x, 4) + -1.54277 *lens_ipow(dx, 6) + 1.12838e-08 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -1.68729e-08 *lens_ipow(y, 5)*dy + -1.41269e-09 *lens_ipow(y, 6) + -9.16258e-06 *x*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + 4.76842e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 4.50116e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.61795e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -1.45811e-08 *lens_ipow(x, 4)*y*dy + -0.00515863 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -8.70671 *lens_ipow(dy, 8) + -5.27253e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 9.41918e-06 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 3) + -3.72826e-07 *lens_ipow(x, 5)*dx*lens_ipow(dy, 2) + 2.21495e-08 *lens_ipow(y, 6)*lens_ipow(dy, 4) + -1.06747e-09 *lens_ipow(y, 7)*lens_ipow(dx, 2)*dy + -4.62681e-08 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 3) + 9.62924e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*dy + -4.6273e-14 *lens_ipow(x, 4)*lens_ipow(y, 6) + -1.3111e-14 *lens_ipow(x, 8)*lens_ipow(y, 2) + -2.51131e-15 *lens_ipow(x, 10) + 0.406522 *lens_ipow(lambda, 11);
