const float dx00 =  + -7.22246  + 0.007749 *y*dy + -0.00234547 *lens_ipow(y, 2) + 0.158804 *x*dx + -0.00694856 *lens_ipow(x, 2) + -0.643896 *lens_ipow(lambda, 3) + 37.2951 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 19.6883 *lens_ipow(dx, 4) + 1.05857 *y*lens_ipow(dx, 2)*dy + 0.0232247 *x*y*dx*dy + 0.000110104 *x*lens_ipow(y, 2)*dx + -17.9513 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -0.0261806 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 7.99304e-08 *lens_ipow(x, 4)*lens_ipow(y, 2) + 2.78188e-11 *lens_ipow(y, 8) + -1.07638 *x*dx*lens_ipow(lambda, 6) + 6.39588e-10 *lens_ipow(x, 4)*lens_ipow(y, 4) + 1.32436e-05 *lens_ipow(x, 5)*lens_ipow(dx, 3) + -0.495093 *y*dy*lens_ipow(lambda, 8) + -0.00293187 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 6) + 0.000734926 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 3.53578e-11 *lens_ipow(x, 3)*lens_ipow(y, 6)*dx + -2.71736e-06 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dy, 4) + 6.56286e-13 *lens_ipow(x, 10)+0.0f;
const float dx01 =  + 0.0981968 *y*dx + 0.007749 *x*dy + -0.00469094 *x*y + 1.05857 *x*lens_ipow(dx, 2)*dy + 0.0116123 *lens_ipow(x, 2)*dx*dy + 0.000110104 *lens_ipow(x, 2)*y*dx + 294.363 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + 0.00190123 *lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + 3.19722e-08 *lens_ipow(x, 5)*y + -9.5735 *dx*dy*lens_ipow(lambda, 5) + 952.22 *lens_ipow(dx, 7)*dy + 3.13185e-09 *lens_ipow(y, 7)*dx + 2.22551e-10 *x*lens_ipow(y, 7) + 5.11671e-10 *lens_ipow(x, 5)*lens_ipow(y, 3) + -0.00849057 *lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -0.495093 *x*dy*lens_ipow(lambda, 8) + -0.00195458 *lens_ipow(x, 3)*y*lens_ipow(dx, 6) + 0.000367463 *lens_ipow(x, 4)*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 5.30367e-11 *lens_ipow(x, 4)*lens_ipow(y, 5)*dx + -1.08694e-06 *lens_ipow(x, 5)*y*lens_ipow(dy, 4)+0.0f;
const float dx02 =  + 8.28868  + -493.876 *lens_ipow(dy, 2) + -1451.17 *lens_ipow(dx, 2) + 0.0490984 *lens_ipow(y, 2) + 0.0794021 *lens_ipow(x, 2) + -33.5609 *lens_ipow(lambda, 4) + 74.5902 *x*dx*lens_ipow(dy, 2) + 78.7532 *x*lens_ipow(dx, 3) + 2.11713 *x*y*dx*dy + 0.0116123 *lens_ipow(x, 2)*y*dy + 5.5052e-05 *lens_ipow(x, 2)*lens_ipow(y, 2) + 883.088 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.000475309 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -35.9026 *x*dx*lens_ipow(lambda, 4) + -9.5735 *y*dy*lens_ipow(lambda, 5) + -17906.2 *lens_ipow(dy, 8) + -7041 *lens_ipow(dx, 4)*lens_ipow(lambda, 4) + -87689.5 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + -20772.1 *lens_ipow(dx, 8) + 6665.54 *y*lens_ipow(dx, 6)*dy + 3.91481e-10 *lens_ipow(y, 8) + -0.538189 *lens_ipow(x, 2)*lens_ipow(lambda, 6) + 6.62179e-06 *lens_ipow(x, 6)*lens_ipow(dx, 2) + -0.00636793 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.00586374 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 5) + 0.000551194 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 8.83945e-12 *lens_ipow(x, 4)*lens_ipow(y, 6)+0.0f;
const float dx03 =  + -987.751 *dx*dy + 0.007749 *x*y + 74.5902 *x*lens_ipow(dx, 2)*dy + 1.05857 *x*y*lens_ipow(dx, 2) + 0.0116123 *lens_ipow(x, 2)*y*dx + 883.088 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.000950617 *lens_ipow(y, 4)*dx*dy + -0.0174537 *lens_ipow(x, 3)*dy*lens_ipow(lambda, 2) + -9.5735 *y*dx*lens_ipow(lambda, 5) + -143249 *dx*lens_ipow(dy, 7) + -70151.6 *lens_ipow(dx, 5)*lens_ipow(dy, 3) + 952.22 *y*lens_ipow(dx, 7) + -0.495093 *x*y*lens_ipow(lambda, 8) + 0.000367463 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -2.17389e-06 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dy, 3)+0.0f;
const float dx04 =  + -1.93169 *x*lens_ipow(lambda, 2) + -134.244 *dx*lens_ipow(lambda, 3) + -71.8052 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.0174537 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lambda + -47.8675 *y*dx*dy*lens_ipow(lambda, 4) + -5632.8 *lens_ipow(dx, 5)*lens_ipow(lambda, 3) + -3.22914 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 5) + -0.00636793 *lens_ipow(y, 4)*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -3.96074 *x*y*dy*lens_ipow(lambda, 7)+0.0f;
const float dx10 =  + -0.00407539 *dy + -0.000100799 *y + 0.00661237 *y*dx + 0.0865059 *x*dy + -0.00541644 *x*y + 0.258592 *y*dx*lens_ipow(dy, 2) + 0.0028717 *lens_ipow(y, 2)*dx*dy + 0.000217966 *x*lens_ipow(y, 2)*dy + -5.75984 *dx*dy*lens_ipow(lambda, 3) + 263.595 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + -1.10059 *x*lens_ipow(dy, 5) + 5.47073e-08 *x*lens_ipow(y, 5) + 6.78768e-08 *lens_ipow(x, 3)*lens_ipow(y, 3) + 1.03721e-06 *lens_ipow(x, 5)*dy + 5.60929e-08 *lens_ipow(x, 5)*y + -0.130783 *y*dx*lens_ipow(lambda, 5) + -0.00128721 *lens_ipow(x, 3)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.00254865 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 6) + -0.00436746 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 3.94705e-08 *x*lens_ipow(y, 6)*lens_ipow(dy, 3)+0.0f;
const float dx11 =  + -7.15854  + -0.000100799 *x + 0.122371 *y*dy + -0.00700539 *lens_ipow(y, 2) + 0.00661237 *x*dx + -0.00270822 *lens_ipow(x, 2) + -1.18818 *lens_ipow(lambda, 3) + 0.258592 *x*dx*lens_ipow(dy, 2) + 0.00574339 *x*y*dx*dy + 0.000217966 *lens_ipow(x, 2)*y*dy + -3.96856 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.0524223 *lens_ipow(y, 2)*lens_ipow(dx, 4) + 1.36768e-07 *lens_ipow(x, 2)*lens_ipow(y, 4) + 5.09076e-08 *lens_ipow(x, 4)*lens_ipow(y, 2) + 9.34882e-09 *lens_ipow(x, 6) + -0.130783 *x*dx*lens_ipow(lambda, 5) + 1380.6 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + -5.2573 *y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + -0.000321804 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0905933 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 5) + 6.31414 *lens_ipow(lambda, 10) + 5.24785e-13 *lens_ipow(y, 10) + -0.00254865 *lens_ipow(x, 2)*y*dy*lens_ipow(lambda, 6) + -0.00655119 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 1.18412e-07 *lens_ipow(x, 2)*lens_ipow(y, 5)*lens_ipow(dy, 3)+0.0f;
const float dx12 =  + -1034.52 *dx*dy + 0.00661237 *x*y + 0.258592 *x*y*lens_ipow(dy, 2) + 0.0028717 *x*lens_ipow(y, 2)*dy + -5.75984 *x*dy*lens_ipow(lambda, 3) + -0.0698964 *lens_ipow(y, 3)*lens_ipow(dx, 3) + 790.784 *x*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.130783 *x*y*lens_ipow(lambda, 5) + -115129 *dx*lens_ipow(dy, 7) + -84052.6 *lens_ipow(dx, 7)*dy + 8283.59 *y*lens_ipow(dx, 5)*lens_ipow(dy, 2) + -5.2573 *lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 4) + -0.000643607 *lens_ipow(x, 4)*y*dx*lens_ipow(dy, 2) + -0.0603955 *lens_ipow(y, 3)*dx*lens_ipow(lambda, 5) + -0.00436746 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2)+0.0f;
const float dx13 =  + 12.118  + -0.00407539 *x + -1571.17 *lens_ipow(dy, 2) + -517.258 *lens_ipow(dx, 2) + 0.0611857 *lens_ipow(y, 2) + 0.043253 *lens_ipow(x, 2) + -73.5077 *lens_ipow(lambda, 4) + 0.517184 *x*y*dx*dy + 0.0028717 *x*lens_ipow(y, 2)*dx + 0.000108983 *lens_ipow(x, 2)*lens_ipow(y, 2) + -7.93711 *y*dy*lens_ipow(lambda, 3) + -5.75984 *x*dx*lens_ipow(lambda, 3) + 790.784 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -2.75147 *lens_ipow(x, 2)*lens_ipow(dy, 4) + 1.72868e-07 *lens_ipow(x, 6) + -108347 *lens_ipow(dy, 8) + -402950 *lens_ipow(dx, 2)*lens_ipow(dy, 6) + -10506.6 *lens_ipow(dx, 8) + 2761.2 *y*lens_ipow(dx, 6)*dy + -2.62865 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -0.000643607 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*dy + 317.145 *lens_ipow(lambda, 10) + -0.00127433 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 6) + -0.00436746 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + 5.92058e-08 *lens_ipow(x, 2)*lens_ipow(y, 6)*lens_ipow(dy, 2)+0.0f;
const float dx14 =  + -3.56453 *y*lens_ipow(lambda, 2) + -294.031 *dy*lens_ipow(lambda, 3) + -11.9057 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -17.2795 *x*dx*dy*lens_ipow(lambda, 2) + -0.653916 *x*y*dx*lens_ipow(lambda, 4) + -10.5146 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + -0.150989 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 3171.45 *dy*lens_ipow(lambda, 9) + 63.1414 *y*lens_ipow(lambda, 9) + -0.00764596 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 5) + -0.00436746 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda+0.0f;
const float dx20 =  + -0.0652088  + -0.00681552 *lens_ipow(dy, 2) + 0.000120965 *y*dy + 1.00081e-05 *lens_ipow(y, 2) + 0.00161722 *x*dx + 0.000147443 *lens_ipow(x, 2) + -0.0230459 *lens_ipow(dx, 2)*lambda + 0.000764111 *lens_ipow(lambda, 4) + -7.08029e-08 *lens_ipow(y, 4) + -0.000115862 *x*y*dx*dy + -2.17905e-06 *x*lens_ipow(y, 2)*dx + -1.04608e-05 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -6.96103e-06 *lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + 0.0814024 *x*dx*lens_ipow(dy, 4) + -0.00286014 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.00296311 *lens_ipow(x, 2)*lens_ipow(dx, 4) + -7.94203e-06 *lens_ipow(x, 2)*y*dy*lens_ipow(lambda, 3) + 18.7281 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + 0.000773441 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -9.22431e-08 *lens_ipow(x, 5)*dx*lens_ipow(lambda, 2) + -1.05698e-12 *lens_ipow(x, 6)*lens_ipow(y, 2) + -2.90953 *lens_ipow(dy, 8)*lens_ipow(lambda, 2) + -0.339268 *lens_ipow(dx, 2)*lens_ipow(lambda, 8) + -0.0889445 *x*y*lens_ipow(dx, 7)*dy + 3.89792e-11 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx*dy + -2.74828e-12 *lens_ipow(x, 8)*lens_ipow(lambda, 2)+0.0f;
const float dx21 =  + 0.00102216 *y*dx + 0.000120965 *x*dy + 2.00162e-05 *x*y + -0.0216445 *dx*dy*lens_ipow(lambda, 2) + -2.83211e-07 *x*lens_ipow(y, 3) + -5.79308e-05 *lens_ipow(x, 2)*dx*dy + -2.17905e-06 *lens_ipow(x, 2)*y*dx + 1.22008 *lens_ipow(dx, 5)*dy + -3.13825e-05 *x*lens_ipow(y, 2)*lens_ipow(dy, 3) + -2.08831e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -2.64734e-06 *lens_ipow(x, 3)*dy*lens_ipow(lambda, 3) + 15.1623 *lens_ipow(dx, 3)*lens_ipow(dy, 5) + -1.82592e-06 *lens_ipow(y, 4)*dx*lens_ipow(dy, 3) + 0.000773441 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -3.01994e-13 *lens_ipow(x, 7)*y + -0.0444722 *lens_ipow(x, 2)*lens_ipow(dx, 7)*dy + 1.94896e-11 *lens_ipow(x, 6)*lens_ipow(y, 2)*dx*dy+0.0f;
const float dx22 =  + -0.0727096  + -4.1565 *lens_ipow(dy, 2) + -12.343 *lens_ipow(dx, 2) + 0.00051108 *lens_ipow(y, 2) + 0.000808611 *lens_ipow(x, 2) + -0.0460917 *x*dx*lambda + -0.266174 *lens_ipow(lambda, 4) + -0.0216445 *y*dy*lens_ipow(lambda, 2) + -5.79308e-05 *lens_ipow(x, 2)*y*dy + -1.08952e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -22.8273 *lens_ipow(dy, 6) + 6.10041 *y*lens_ipow(dx, 4)*dy + -1.39221e-05 *x*lens_ipow(y, 3)*dx*dy + 0.0407012 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -0.00190676 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + -0.00395082 *lens_ipow(x, 3)*lens_ipow(dx, 3) + -2589.05 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + -999.293 *lens_ipow(dx, 8) + 45.4869 *y*lens_ipow(dx, 2)*lens_ipow(dy, 5) + -3.65184e-07 *lens_ipow(y, 5)*lens_ipow(dy, 3) + 74.9123 *x*lens_ipow(dx, 3)*lens_ipow(dy, 4) + 0.00116016 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.53738e-08 *lens_ipow(x, 6)*lens_ipow(lambda, 2) + -74.6229 *lens_ipow(dx, 4)*lens_ipow(lambda, 5) + -0.678537 *x*dx*lens_ipow(lambda, 8) + -0.311306 *lens_ipow(x, 2)*y*lens_ipow(dx, 6)*dy + 6.49654e-12 *lens_ipow(x, 6)*lens_ipow(y, 3)*dy+0.0f;
const float dx23 =  + -8.313 *dx*dy + -0.013631 *x*dy + 0.000120965 *x*y + -0.0216445 *y*dx*lens_ipow(lambda, 2) + -5.79308e-05 *lens_ipow(x, 2)*y*dx + -136.964 *dx*lens_ipow(dy, 5) + 1.22008 *y*lens_ipow(dx, 5) + -3.13825e-05 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + -6.96103e-06 *x*lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.162805 *lens_ipow(x, 2)*dx*lens_ipow(dy, 3) + -0.00190676 *lens_ipow(x, 3)*lens_ipow(dx, 2)*dy + -2.64734e-06 *lens_ipow(x, 3)*y*lens_ipow(lambda, 3) + -739.73 *lens_ipow(dx, 7)*dy + 75.8115 *y*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -1.09555e-06 *lens_ipow(y, 5)*dx*lens_ipow(dy, 2) + 74.9123 *x*lens_ipow(dx, 4)*lens_ipow(dy, 3) + 0.000773441 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -23.2762 *x*lens_ipow(dy, 7)*lens_ipow(lambda, 2) + -0.0444722 *lens_ipow(x, 2)*y*lens_ipow(dx, 7) + 6.49654e-12 *lens_ipow(x, 6)*lens_ipow(y, 3)*dx+0.0f;
const float dx24 =  + -0.0230459 *x*lens_ipow(dx, 2) + -1.0647 *dx*lens_ipow(lambda, 3) + -0.0432889 *y*dx*dy*lambda + 0.00305644 *x*lens_ipow(lambda, 3) + -7.94203e-06 *lens_ipow(x, 3)*y*dy*lens_ipow(lambda, 2) + -3.07477e-08 *lens_ipow(x, 6)*dx*lambda + -74.6229 *lens_ipow(dx, 5)*lens_ipow(lambda, 4) + -5.81906 *x*lens_ipow(dy, 8)*lambda + -2.71415 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 7) + -6.10729e-13 *lens_ipow(x, 9)*lambda+0.0f;
const float dx30 =  + 0.000225498 *y*dx + 0.000560451 *x*dy + 0.000191771 *x*y + 0.0130557 *y*dx*lens_ipow(dy, 2) + 0.0115135 *y*lens_ipow(dx, 3) + -1.68472e-06 *lens_ipow(y, 3)*dx + 0.0110797 *x*lens_ipow(dy, 3) + 0.013254 *x*lens_ipow(dx, 2)*dy + -6.57304e-06 *lens_ipow(x, 2)*y*dx + -2.01444e-08 *x*lens_ipow(y, 4)*dy + 1.20012e-10 *x*lens_ipow(y, 5) + -0.0674715 *dx*dy*lens_ipow(lambda, 5) + 2.21152e-07 *x*lens_ipow(y, 3)*lens_ipow(lambda, 4) + -4.98073e-06 *x*lens_ipow(y, 3)*lens_ipow(dy, 4) + 3.03763e-06 *lens_ipow(x, 4)*dx*lens_ipow(dy, 3) + -7.76213e-11 *lens_ipow(x, 5)*lens_ipow(y, 2)*dy + -1.35329e-12 *lens_ipow(x, 7)*y+0.0f;
const float dx31 =  + -0.0653359  + -3.51874e-05 *dy + -0.0116922 *lens_ipow(dy, 2) + -0.00450767 *lens_ipow(dx, 2) + 0.00148706 *y*dy + 0.000151532 *lens_ipow(y, 2) + 0.000225498 *x*dx + 9.58856e-05 *lens_ipow(x, 2) + 0.0130557 *x*dx*lens_ipow(dy, 2) + 0.0115135 *x*lens_ipow(dx, 3) + -5.05417e-06 *x*lens_ipow(y, 2)*dx + -2.19101e-06 *lens_ipow(x, 3)*dx + 0.120986 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.159052 *y*lens_ipow(dx, 4)*dy + 9.46874e-05 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -4.02888e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + 3.00029e-10 *lens_ipow(x, 2)*lens_ipow(y, 4) + -0.0727486 *lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 15.1821 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + -1.57636e-10 *lens_ipow(y, 7)*dy + 3.31728e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 4) + -7.47109e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 4) + -2.58738e-11 *lens_ipow(x, 6)*y*dy + -1.69162e-13 *lens_ipow(x, 8) + -4.55483e-15 *lens_ipow(y, 10)+0.0f;
const float dx32 =  + 0.000221017  + -8.52859 *dx*dy + -0.00901535 *y*dx + 0.000225498 *x*y + 0.0130557 *x*y*lens_ipow(dy, 2) + 0.0345406 *x*y*lens_ipow(dx, 2) + -1.68472e-06 *x*lens_ipow(y, 3) + 0.013254 *lens_ipow(x, 2)*dx*dy + -2.19101e-06 *lens_ipow(x, 3)*y + -247 *lens_ipow(dx, 5)*dy + 0.120986 *lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 0.318104 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -0.0674715 *x*dy*lens_ipow(lambda, 5) + -6789.11 *lens_ipow(dx, 3)*lens_ipow(dy, 5) + 91.0928 *y*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 6.07526e-07 *lens_ipow(x, 5)*lens_ipow(dy, 3) + -5765.64 *dx*lens_ipow(dy, 9)+0.0f;
const float dx33 =  + -0.0591581  + -3.51874e-05 *y + -12.6286 *lens_ipow(dy, 2) + -4.26429 *lens_ipow(dx, 2) + -0.0233843 *y*dy + 0.000743532 *lens_ipow(y, 2) + 0.000280226 *lens_ipow(x, 2) + -0.190926 *lens_ipow(lambda, 3) + 0.0261114 *x*y*dx*dy + 0.0166195 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.00662699 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -41.1667 *lens_ipow(dx, 6) + 0.181479 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.0795261 *lens_ipow(y, 2)*lens_ipow(dx, 4) + 7.10156e-05 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -1.00722e-08 *lens_ipow(x, 2)*lens_ipow(y, 4) + -0.0674715 *x*dx*lens_ipow(lambda, 5) + -614.297 *lens_ipow(dy, 8) + -8486.39 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + -0.145497 *y*dy*lens_ipow(lambda, 6) + 30.3643 *y*lens_ipow(dx, 6)*dy + -1.97045e-11 *lens_ipow(y, 8) + -9.96146e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 3) + 1.82258e-06 *lens_ipow(x, 5)*dx*lens_ipow(dy, 2) + -1.29369e-11 *lens_ipow(x, 6)*lens_ipow(y, 2) + -25945.4 *lens_ipow(dx, 2)*lens_ipow(dy, 8)+0.0f;
const float dx34 =  + -0.572779 *dy*lens_ipow(lambda, 2) + -0.337358 *x*dx*dy*lens_ipow(lambda, 4) + -0.436492 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 4.42304e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 3)+0.0f;
const float dx40 =  + -2.93241e-06  + -0.000711174 *dx + 3.22246e-05 *x + -2.45081e-06 *dx*dy + 0.000122776 *y*dx*dy + -2.08544e-06 *x*lens_ipow(y, 2) + -1.73876e-06 *lens_ipow(x, 3) + -9.16258e-06 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + 9.53684e-06 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + 9.00232e-06 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + 6.47182e-06 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -5.83246e-08 *lens_ipow(x, 3)*y*dy + -0.0103173 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -0.000105451 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 2.82576e-05 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 3) + -1.86413e-06 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2) + -4.62681e-08 *lens_ipow(y, 5)*dx*lens_ipow(dy, 3) + 2.88877e-10 *lens_ipow(x, 2)*lens_ipow(y, 5)*dx*dy + -1.85092e-13 *lens_ipow(x, 3)*lens_ipow(y, 6) + -1.04888e-13 *lens_ipow(x, 7)*lens_ipow(y, 2) + -2.51131e-14 *lens_ipow(x, 9)+0.0f;
const float dx41 =  + 7.73991e-08  + -0.000666465 *dy + -3.41285e-05 *y + -1.45229e-05 *lens_ipow(dx, 2) + 0.000122776 *x*dx*dy + -2.08544e-06 *lens_ipow(x, 2)*y + 4.51353e-08 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -8.43644e-08 *lens_ipow(y, 4)*dy + -8.47612e-09 *lens_ipow(y, 5) + -1.83252e-05 *x*y*dx*lens_ipow(lambda, 2) + 9.53684e-06 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 9.00232e-06 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + -1.45811e-08 *lens_ipow(x, 4)*dy + -0.000105451 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 9.41918e-06 *lens_ipow(x, 3)*dx*lens_ipow(dy, 3) + 1.32897e-07 *lens_ipow(y, 5)*lens_ipow(dy, 4) + -7.4723e-09 *lens_ipow(y, 6)*lens_ipow(dx, 2)*dy + -2.3134e-07 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 3) + 4.81462e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy + -2.77638e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -2.62219e-14 *lens_ipow(x, 8)*y+0.0f;
const float dx42 =  + -0.000103235  + -0.0739627 *dx + -0.000711174 *x + -2.90458e-05 *y*dx + -2.45081e-06 *x*dy + -0.664254 *dx*lens_ipow(dy, 2) + 0.000122776 *x*y*dy + -9.25665 *lens_ipow(dx, 5) + 2.25676e-08 *lens_ipow(y, 4)*dx + -9.16258e-06 *x*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 9.00232e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 3.23591e-06 *lens_ipow(x, 4)*dx + -0.0103173 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lambda + -0.000105451 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 9.41918e-06 *lens_ipow(x, 3)*y*lens_ipow(dy, 3) + -3.72826e-07 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -2.13494e-09 *lens_ipow(y, 7)*dx*dy + -4.62681e-08 *x*lens_ipow(y, 5)*lens_ipow(dy, 3) + 9.62924e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*dy+0.0f;
const float dx43 =  + -0.0714874 *dy + -0.000666465 *y + -2.45081e-06 *x*dx + -0.664254 *lens_ipow(dx, 2)*dy + 0.000122776 *x*y*dx + -1.68729e-08 *lens_ipow(y, 5) + 9.53684e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -1.45811e-08 *lens_ipow(x, 4)*y + -0.0103173 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy*lambda + -69.6537 *lens_ipow(dy, 7) + -0.000105451 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 2.82576e-05 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + -7.45652e-07 *lens_ipow(x, 5)*dx*dy + 8.85981e-08 *lens_ipow(y, 6)*lens_ipow(dy, 3) + -1.06747e-09 *lens_ipow(y, 7)*lens_ipow(dx, 2) + -1.38804e-07 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 2) + 9.62924e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx+0.0f;
const float dx44 =  + 0.277365  + -0.687996 *lens_ipow(lambda, 2) + -1.83252e-05 *x*lens_ipow(y, 2)*dx*lambda + -0.00515863 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.47174 *lens_ipow(lambda, 10)+0.0f;
