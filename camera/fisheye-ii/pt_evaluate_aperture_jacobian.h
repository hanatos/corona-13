const float dx00 =  + 0.436491  + -9.44772e-05 *dx + 0.362828 *lens_ipow(dy, 2) + 2.00488 *lens_ipow(dx, 2) + 0.0174479 *y*dy + -4.84547e-05 *lens_ipow(y, 2) + 0.063565 *x*dx + -0.000176661 *lens_ipow(x, 2) + -0.00911571 *lens_ipow(lambda, 4) + 1.69333e-05 *x*y*dx*dy + 0.0004876 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.00346054 *lens_ipow(y, 2)*lens_ipow(dy, 4) + 1.87863e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -1.10053e-09 *lens_ipow(y, 6) + -5.92331e-05 *x*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + 1.08152e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -2.73721e-08 *lens_ipow(x, 4)*lens_ipow(y, 2) + 0.154323 *y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + -15.1628 *lens_ipow(dy, 8) + 1.15752e-07 *x*lens_ipow(y, 5)*dx*dy + -0.0955541 *lens_ipow(x, 2)*lens_ipow(dx, 6) + -6.32939e-11 *lens_ipow(x, 2)*lens_ipow(y, 6) + 3.58681e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.33652e-07 *lens_ipow(x, 6)*lens_ipow(dx, 2) + 1.04464e-05 *lens_ipow(y, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.310546 *x*lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 0.000146293 *lens_ipow(x, 3)*y*dx*dy*lens_ipow(lambda, 4) + 3.22918e-09 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx*dy + -2.70902e-13 *lens_ipow(x, 10)+0.0f;
const float dx01 =  + 1.65118 *dx*dy + 0.0292028 *y*dx + 0.0174479 *x*dy + -9.69094e-05 *x*y + 8.46664e-06 *lens_ipow(x, 2)*dx*dy + -0.0150185 *lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 0.00692107 *x*y*lens_ipow(dy, 4) + 7.51453e-06 *x*lens_ipow(y, 3)*lens_ipow(dx, 2) + -6.60316e-09 *x*lens_ipow(y, 5) + -5.92331e-05 *lens_ipow(x, 2)*y*dx*lens_ipow(lambda, 2) + 7.2101e-06 *lens_ipow(x, 3)*y*lens_ipow(dy, 2) + -1.09489e-08 *lens_ipow(x, 5)*y + 0.154323 *x*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + -1.30316e-09 *lens_ipow(y, 7)*dx + 2.8938e-07 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx*dy + -1.26588e-10 *lens_ipow(x, 3)*lens_ipow(y, 5) + 1.43473e-07 *lens_ipow(x, 5)*y*lens_ipow(dx, 2) + 4.17854e-05 *x*lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.310546 *lens_ipow(x, 2)*y*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 3.65732e-05 *lens_ipow(x, 4)*dx*dy*lens_ipow(lambda, 4) + 1.61459e-09 *lens_ipow(x, 6)*lens_ipow(y, 2)*dx*dy+0.0f;
const float dx02 =  + 31.8705  + -0.00434827 *dy + -9.44772e-05 *x + 23.493 *lens_ipow(dy, 2) + 70.2071 *lens_ipow(dx, 2) + 1.65118 *y*dy + 0.0146014 *lens_ipow(y, 2) + 4.00976 *x*dx + 0.0317825 *lens_ipow(x, 2) + -0.275446 *lens_ipow(lambda, 3) + 8.46664e-06 *lens_ipow(x, 2)*y*dy + -0.00500617 *lens_ipow(y, 3)*lens_ipow(dy, 3) + 3.75727e-06 *x*lens_ipow(y, 4)*dx + -2.96166e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 0.308646 *x*y*dx*dy*lens_ipow(lambda, 3) + -1.62895e-10 *lens_ipow(y, 8) + 5.78761e-08 *lens_ipow(x, 2)*lens_ipow(y, 5)*dy + -0.191108 *lens_ipow(x, 3)*lens_ipow(dx, 5) + 1.43473e-07 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx + 3.81864e-08 *lens_ipow(x, 7)*dx + -214166 *lens_ipow(dx, 8)*lens_ipow(dy, 2) + 0.776365 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 3.65732e-05 *lens_ipow(x, 4)*y*dy*lens_ipow(lambda, 4) + 5.38196e-10 *lens_ipow(x, 6)*lens_ipow(y, 3)*dy+0.0f;
const float dx03 =  + -0.00434827 *dx + 46.986 *dx*dy + 1.65118 *y*dx + 0.725656 *x*dy + 0.0174479 *x*y + 8.46664e-06 *lens_ipow(x, 2)*y*dx + 0.000325067 *lens_ipow(x, 3)*dy + -0.0150185 *lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + 0.0138421 *x*lens_ipow(y, 2)*lens_ipow(dy, 3) + 7.2101e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy + 0.154323 *x*y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -121.302 *x*lens_ipow(dy, 7) + 5.78761e-08 *lens_ipow(x, 2)*lens_ipow(y, 5)*dx + -47592.4 *lens_ipow(dx, 9)*dy + 2.08927e-05 *x*lens_ipow(y, 4)*dy*lens_ipow(lambda, 4) + 0.310546 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 5)*dy + 3.65732e-05 *lens_ipow(x, 4)*y*dx*lens_ipow(lambda, 4) + 5.38196e-10 *lens_ipow(x, 6)*lens_ipow(y, 3)*dx+0.0f;
const float dx04 =  + -0.826337 *dx*lens_ipow(lambda, 2) + -0.0364628 *x*lens_ipow(lambda, 3) + -5.92331e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lambda + 0.462969 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + 4.17854e-05 *x*lens_ipow(y, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.000146293 *lens_ipow(x, 4)*y*dx*dy*lens_ipow(lambda, 3)+0.0f;
const float dx10 =  + -1.05829e-05  + 1.6358 *dx*dy + 0.0172154 *y*dx + 0.0288495 *x*dy + -0.000123919 *x*y + -0.00022343 *y*dx*dy + 0.0173161 *y*dx*lens_ipow(dy, 2) + 0.000249095 *lens_ipow(y, 2)*dx*dy + 8.42586 *dx*lens_ipow(dy, 5) + 1.9236e-05 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.0119164 *lens_ipow(x, 2)*lens_ipow(dx, 3)*dy + -0.00048316 *lens_ipow(x, 2)*y*lens_ipow(dx, 3) + 1.72036 *x*lens_ipow(dy, 7) + 0.0164504 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -2.349e-10 *lens_ipow(x, 3)*lens_ipow(y, 5) + -1.25861e-09 *lens_ipow(x, 7)*dy + -4.91324e-11 *lens_ipow(x, 7)*y + 0.159106 *y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -1.31041e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 3) + 0.0521695 *lens_ipow(y, 3)*dx*lens_ipow(dy, 6) + 1.02787e-07 *lens_ipow(y, 6)*dx*dy*lens_ipow(lambda, 2) + -1.77767e-13 *x*lens_ipow(y, 9) + 7.52607e-09 *lens_ipow(x, 4)*lens_ipow(y, 4)*dx*dy+0.0f;
const float dx11 =  + 0.436577  + 2.01849 *lens_ipow(dy, 2) + 0.361428 *lens_ipow(dx, 2) + 0.0639486 *y*dy + -0.000188654 *lens_ipow(y, 2) + 0.0172154 *x*dx + -6.19596e-05 *lens_ipow(x, 2) + -0.00022343 *x*dx*dy + -0.00803071 *lens_ipow(lambda, 4) + -0.0719071 *lens_ipow(dx, 4) + 0.000630431 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.0173161 *x*dx*lens_ipow(dy, 2) + 0.000498189 *x*y*dx*dy + 2.8854e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000161053 *lens_ipow(x, 3)*lens_ipow(dx, 3) + -0.164984 *lens_ipow(y, 2)*lens_ipow(dy, 6) + 1.68025e-07 *lens_ipow(y, 6)*lens_ipow(dy, 2) + 0.0164504 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -2.93625e-10 *lens_ipow(x, 4)*lens_ipow(y, 4) + -6.14155e-12 *lens_ipow(x, 8) + 0.159106 *x*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -6.55207e-07 *lens_ipow(x, 4)*y*dy*lens_ipow(lambda, 3) + 283.107 *lens_ipow(dy, 10) + -2.78629e-13 *lens_ipow(y, 10) + 0.156508 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 6) + 6.16721e-07 *x*lens_ipow(y, 5)*dx*dy*lens_ipow(lambda, 2) + -7.99952e-13 *lens_ipow(x, 2)*lens_ipow(y, 8) + 6.02085e-09 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx*dy+0.0f;
const float dx12 =  + 46.7086 *dx*dy + 0.722855 *y*dx + 1.6358 *x*dy + 0.0172154 *x*y + -0.00022343 *x*y*dy + -0.287628 *y*lens_ipow(dx, 3) + 0.000420287 *lens_ipow(y, 3)*dx + 0.0173161 *x*y*lens_ipow(dy, 2) + 0.000249095 *x*lens_ipow(y, 2)*dy + 8.42586 *x*lens_ipow(dy, 5) + -0.0119164 *lens_ipow(x, 3)*lens_ipow(dx, 2)*dy + -0.00048316 *lens_ipow(x, 3)*y*lens_ipow(dx, 2) + 0.0164504 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 0.159106 *x*y*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 0.0521695 *x*lens_ipow(y, 3)*lens_ipow(dy, 6) + 1.02787e-07 *x*lens_ipow(y, 6)*dy*lens_ipow(lambda, 2) + 1.50521e-09 *lens_ipow(x, 5)*lens_ipow(y, 4)*dy+0.0f;
const float dx13 =  + 31.8523  + 71.3082 *lens_ipow(dy, 2) + 23.3543 *lens_ipow(dx, 2) + 4.03697 *y*dy + 0.0319743 *lens_ipow(y, 2) + 1.6358 *x*dx + 0.0144248 *lens_ipow(x, 2) + -0.00022343 *x*y*dx + -0.357427 *lens_ipow(lambda, 4) + 0.0346321 *x*y*dx*dy + 0.000249095 *x*lens_ipow(y, 2)*dx + 42.1293 *x*dx*lens_ipow(dy, 4) + 1.9236e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -0.00397214 *lens_ipow(x, 3)*lens_ipow(dx, 3) + -0.329967 *lens_ipow(y, 3)*lens_ipow(dy, 5) + 4.80071e-08 *lens_ipow(y, 7)*dy + 6.02127 *lens_ipow(x, 2)*lens_ipow(dy, 6) + 0.0246756 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.57326e-10 *lens_ipow(x, 8) + 0.318213 *x*y*dx*dy*lens_ipow(lambda, 5) + -3.27603e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(lambda, 3) + 2831.07 *y*lens_ipow(dy, 9) + 0.313017 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 5) + 1.02787e-07 *x*lens_ipow(y, 6)*dx*lens_ipow(lambda, 2) + 1.50521e-09 *lens_ipow(x, 5)*lens_ipow(y, 4)*dx+0.0f;
const float dx14 =  + -1.42971 *dy*lens_ipow(lambda, 3) + -0.0321228 *y*lens_ipow(lambda, 3) + 0.795532 *x*y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -9.8281e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + 2.05574e-07 *x*lens_ipow(y, 6)*dx*dy*lambda+0.0f;
const float dx20 =  + -0.0407339  + 0.0148577 *lens_ipow(dy, 2) + 0.0211172 *lens_ipow(dx, 2) + 0.00095871 *y*dy + -9.42028e-06 *lens_ipow(y, 2) + 0.00146903 *x*dx + -2.84957e-05 *lens_ipow(x, 2) + -0.00427668 *lens_ipow(lambda, 4) + -0.0268341 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 5.50992e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 3.06334e-05 *x*y*dx*dy + 8.28625e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.00830647 *y*lens_ipow(dy, 5) + -5.47517e-06 *lens_ipow(y, 3)*lens_ipow(dy, 3) + 0.000579069 *lens_ipow(x, 2)*lens_ipow(dx, 4) + -0.000181321 *y*dy*lens_ipow(lambda, 5) + -1.92189 *lens_ipow(dx, 8) + 5.68699e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -6.18357e-12 *lens_ipow(x, 2)*lens_ipow(y, 6) + 3.08935e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -1.15859e-11 *lens_ipow(x, 6)*lens_ipow(y, 2) + -0.191022 *lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 0.0208323 *lens_ipow(lambda, 10) + -0.323351 *lens_ipow(y, 2)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -1.0162e-15 *lens_ipow(y, 10) + -9.79536e-10 *lens_ipow(x, 6)*lens_ipow(lambda, 4) + -1.22717e-14 *lens_ipow(x, 10)+0.0f;
const float dx21 =  + 0.00588034 *dx*dy + -0.000363015 *y*dx + 0.00095871 *x*dy + -1.88406e-05 *x*y + 0.000110198 *x*y*lens_ipow(dx, 2) + 1.53167e-05 *lens_ipow(x, 2)*dx*dy + -1.08109 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + 7.92839e-07 *lens_ipow(y, 4)*dx*dy + -0.00830647 *x*lens_ipow(dy, 5) + -1.64255e-05 *x*lens_ipow(y, 2)*lens_ipow(dy, 3) + -0.000181321 *x*dy*lens_ipow(lambda, 5) + -3.64251 *dx*lens_ipow(dy, 7) + 3.79132e-05 *lens_ipow(x, 3)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.23671e-11 *lens_ipow(x, 3)*lens_ipow(y, 5) + -3.31026e-12 *lens_ipow(x, 7)*y + -0.646703 *x*y*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -1.0162e-14 *x*lens_ipow(y, 9)+0.0f;
const float dx22 =  + -0.689144  + -0.00078789 *dx + -1.00535 *lens_ipow(dy, 2) + -2.92572 *lens_ipow(dx, 2) + 0.00588034 *y*dy + -0.000181507 *lens_ipow(y, 2) + 0.0422343 *x*dx + 0.000734514 *lens_ipow(x, 2) + -0.249736 *lens_ipow(lambda, 4) + -0.0536683 *x*dx*lens_ipow(dy, 2) + 0.000110198 *x*lens_ipow(y, 2)*dx + 1.53167e-05 *lens_ipow(x, 2)*y*dy + -3.24326 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 1.58568e-07 *lens_ipow(y, 5)*dy + 0.000772092 *lens_ipow(x, 3)*lens_ipow(dx, 3) + 0.346269 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -3.64251 *y*lens_ipow(dy, 7) + -15.3751 *x*lens_ipow(dx, 7) + 3.79132e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 1.23574e-06 *lens_ipow(x, 5)*dx*lens_ipow(lambda, 2) + -0.764089 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 5) + 1.1421 *lens_ipow(lambda, 10) + -1.94011 *x*lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(dy, 2)+0.0f;
const float dx23 =  + -2.0107 *dx*dy + 0.00588034 *y*dx + 0.0297154 *x*dy + 0.00095871 *x*y + -0.0536683 *x*lens_ipow(dx, 2)*dy + 1.53167e-05 *lens_ipow(x, 2)*y*dx + 5.52417e-05 *lens_ipow(x, 3)*dy + -3.24326 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.58568e-07 *lens_ipow(y, 5)*dx + -0.0415323 *x*y*lens_ipow(dy, 4) + -1.64255e-05 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + 0.692539 *dx*dy*lens_ipow(lambda, 5) + -0.000181321 *x*y*lens_ipow(lambda, 5) + -25.4976 *y*dx*lens_ipow(dy, 6) + 3.79132e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.646703 *x*lens_ipow(y, 2)*lens_ipow(dx, 6)*dy+0.0f;
const float dx24 =  + -0.998943 *dx*lens_ipow(lambda, 3) + -0.0171067 *x*lens_ipow(lambda, 3) + 1.73135 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.000906607 *x*y*dy*lens_ipow(lambda, 4) + 1.23574e-06 *lens_ipow(x, 5)*lens_ipow(dx, 2)*lambda + -0.955111 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 4) + 11.421 *dx*lens_ipow(lambda, 9) + 0.208323 *x*lens_ipow(lambda, 9) + -5.59735e-10 *lens_ipow(x, 7)*lens_ipow(lambda, 3)+0.0f;
const float dx30 =  + 0.00536501 *dx*dy + 0.00092874 *y*dx + -0.000333198 *x*dy + -1.91038e-05 *x*y + 0.000121509 *x*y*lens_ipow(dy, 2) + 7.14163e-05 *lens_ipow(x, 2)*dx*dy + -4.45221e-05 *lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + 7.22198e-09 *lens_ipow(y, 5)*dx + 0.00085973 *x*y*lens_ipow(dx, 4) + -2.3278 *lens_ipow(dx, 7)*dy + -0.0172838 *lens_ipow(y, 2)*dx*lens_ipow(dy, 5) + -1.20603e-11 *lens_ipow(x, 3)*lens_ipow(y, 5) + -3.12559e-12 *lens_ipow(x, 7)*y + -0.307797 *lens_ipow(dx, 3)*dy*lens_ipow(lambda, 5) + -0.142248 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -0.000461444 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + 5.87473e-13 *x*lens_ipow(y, 8)*dy + -0.425316 *lens_ipow(x, 2)*lens_ipow(dx, 5)*lens_ipow(dy, 3) + -1.67666e-10 *lens_ipow(x, 7)*dy*lens_ipow(lambda, 2)+0.0f;
const float dx31 =  + -0.0407469  + 0.0224369 *lens_ipow(dy, 2) + 0.0144449 *lens_ipow(dx, 2) + 0.00152509 *y*dy + -2.77648e-05 *lens_ipow(y, 2) + 0.00092874 *x*dx + -9.55191e-06 *lens_ipow(x, 2) + -0.00423847 *lens_ipow(lambda, 4) + -0.0433327 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000118945 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 6.07546e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.000843409 *lens_ipow(y, 2)*lens_ipow(dy, 4) + -0.000133566 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 3.61099e-08 *x*lens_ipow(y, 4)*dx + 0.000429865 *lens_ipow(x, 2)*lens_ipow(dx, 4) + -2.16953 *lens_ipow(dy, 8) + -1.39372e-07 *lens_ipow(y, 4)*lens_ipow(lambda, 4) + -0.0345677 *x*y*dx*lens_ipow(dy, 5) + -1.50754e-11 *lens_ipow(x, 4)*lens_ipow(y, 4) + -3.90698e-13 *lens_ipow(x, 8) + -0.203696 *lens_ipow(dy, 4)*lens_ipow(lambda, 5) + 4.50176e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.0210119 *lens_ipow(lambda, 10) + -1.39401e-14 *lens_ipow(y, 10) + -0.0711239 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -0.000461444 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + 2.34989e-12 *lens_ipow(x, 2)*lens_ipow(y, 7)*dy+0.0f;
const float dx32 =  + -1.96745 *dx*dy + 0.0288899 *y*dx + 0.00536501 *x*dy + 0.00092874 *x*y + -0.0866654 *y*dx*lens_ipow(dy, 2) + 7.92968e-05 *lens_ipow(y, 3)*dx + 2.38054e-05 *lens_ipow(x, 3)*dy + -4.45221e-05 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + 7.22198e-09 *x*lens_ipow(y, 5) + 0.00171946 *lens_ipow(x, 2)*y*lens_ipow(dx, 3) + -16.2946 *x*lens_ipow(dx, 6)*dy + -0.0172838 *x*lens_ipow(y, 2)*lens_ipow(dy, 5) + -0.92339 *x*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 5) + -0.142248 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -0.000461444 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 4) + -0.708859 *lens_ipow(x, 3)*lens_ipow(dx, 4)*lens_ipow(dy, 3)+0.0f;
const float dx33 =  + -0.685162  + -2.86249 *lens_ipow(dy, 2) + -0.983723 *lens_ipow(dx, 2) + 0.0448739 *y*dy + 0.000762545 *lens_ipow(y, 2) + 0.00536501 *x*dx + -0.000166599 *lens_ipow(x, 2) + -0.162756 *lens_ipow(lambda, 3) + -0.0866654 *y*lens_ipow(dx, 2)*dy + 0.000121509 *lens_ipow(x, 2)*y*dy + 2.38054e-05 *lens_ipow(x, 3)*dx + 0.00112454 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -8.90442e-05 *x*lens_ipow(y, 3)*dx*dy + -17.3563 *y*lens_ipow(dy, 7) + -2.3278 *x*lens_ipow(dx, 7) + -0.0864192 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 4) + -0.814784 *y*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + 1.8007e-06 *lens_ipow(y, 5)*dy*lens_ipow(lambda, 3) + -0.307797 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 5) + 0.826781 *lens_ipow(lambda, 10) + -0.284495 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -0.000230722 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 2.93736e-13 *lens_ipow(x, 2)*lens_ipow(y, 8) + -0.425316 *lens_ipow(x, 3)*lens_ipow(dx, 5)*lens_ipow(dy, 2) + -2.09582e-11 *lens_ipow(x, 8)*lens_ipow(lambda, 2)+0.0f;
const float dx34 =  + -0.488268 *dy*lens_ipow(lambda, 2) + -0.0169539 *y*lens_ipow(lambda, 3) + -1.11498e-07 *lens_ipow(y, 5)*lens_ipow(lambda, 3) + -1.01848 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + 2.70106e-06 *lens_ipow(y, 5)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.53898 *x*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 4) + 8.26781 *dy*lens_ipow(lambda, 9) + 0.210119 *y*lens_ipow(lambda, 9) + -0.142248 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 4)*lambda + -0.000922889 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + -4.19164e-11 *lens_ipow(x, 8)*dy*lambda+0.0f;
const float dx40 =  + -1.649e-07  + 4.65024e-06 *dy + -0.00206822 *dx + -7.10464e-05 *x + -0.00040244 *y*dx*dy + -6.14652e-06 *lens_ipow(y, 2)*dx + 0.000232703 *x*lens_ipow(dy, 2) + 0.0665558 *lens_ipow(dx, 5) + -2.75349e-07 *x*lens_ipow(y, 3)*dy + 7.47629e-06 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 5.14633e-08 *lens_ipow(y, 5)*dx*dy + -3.33783e-11 *x*lens_ipow(y, 6) + -9.25231e-11 *lens_ipow(x, 3)*lens_ipow(y, 4) + -7.37397e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + -1.93294e-09 *lens_ipow(x, 5)*y*dy + -1.51541e-10 *lens_ipow(x, 5)*lens_ipow(y, 2) + -1.66721e-11 *lens_ipow(x, 7) + 0.821073 *y*dx*lens_ipow(dy, 7) + 0.94371 *y*lens_ipow(dx, 7)*dy + 4.19623e-05 *lens_ipow(y, 4)*dx*lens_ipow(dy, 4) + 0.000126373 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.000337583 *lens_ipow(x, 3)*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.000157508 *lens_ipow(x, 3)*y*lens_ipow(dx, 4)*dy + -1.39401e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 6.14311e-09 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*dy + -9.28666e-07 *lens_ipow(x, 5)*lens_ipow(dy, 4)+0.0f;
const float dx41 =  + 6.77241e-07  + -0.00217319 *dy + -7.17688e-05 *y + -0.00040244 *x*dx*dy + -1.2293e-05 *x*y*dx + 0.0637497 *lens_ipow(dy, 5) + 7.35132e-06 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -4.13023e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -1.70289e-11 *lens_ipow(y, 7) + 2.57316e-07 *x*lens_ipow(y, 4)*dx*dy + -1.00135e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + -9.25231e-11 *lens_ipow(x, 4)*lens_ipow(y, 3) + -2.94959e-09 *lens_ipow(x, 5)*y*dx + -3.22157e-10 *lens_ipow(x, 6)*dy + -5.05137e-11 *lens_ipow(x, 6)*y + -3.8644e-07 *lens_ipow(y, 5)*lens_ipow(dx, 4) + 0.821073 *x*dx*lens_ipow(dy, 7) + 0.94371 *x*lens_ipow(dx, 7)*dy + 0.000167849 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 4) + 0.000189559 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -8.43957e-05 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 3.9377e-05 *lens_ipow(x, 4)*lens_ipow(dx, 4)*dy + -6.97003e-06 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.68587e-09 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx*dy+0.0f;
const float dx42 =  + -0.0833809 *dx + -0.00206822 *x + -0.196817 *dx*lens_ipow(dy, 2) + -0.00040244 *x*y*dy + -6.14652e-06 *x*lens_ipow(y, 2) + 0.332779 *x*lens_ipow(dx, 4) + 3.73814e-06 *lens_ipow(x, 4)*dx + 5.14633e-08 *x*lens_ipow(y, 5)*dy + -1.47479e-09 *lens_ipow(x, 5)*lens_ipow(y, 2) + -2.57626e-07 *lens_ipow(y, 6)*lens_ipow(dx, 3) + 0.821073 *x*y*lens_ipow(dy, 7) + 6.60597 *x*y*lens_ipow(dx, 6)*dy + 4.19623e-05 *x*lens_ipow(y, 4)*lens_ipow(dy, 4) + 0.000126373 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + -0.000168791 *lens_ipow(x, 4)*y*dx*lens_ipow(dy, 3) + 0.000157508 *lens_ipow(x, 4)*y*lens_ipow(dx, 3)*dy + -6.97003e-06 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 1.22862e-09 *lens_ipow(x, 5)*lens_ipow(y, 3)*dy+0.0f;
const float dx43 =  + -0.0898399 *dy + -0.00217319 *y + 4.65024e-06 *x + -0.196817 *lens_ipow(dx, 2)*dy + -0.00040244 *x*y*dx + 0.000232703 *lens_ipow(x, 2)*dy + 0.318749 *y*lens_ipow(dy, 4) + 3.67566e-06 *lens_ipow(y, 4)*dy + -1.37674e-07 *lens_ipow(x, 2)*lens_ipow(y, 3) + 5.14633e-08 *x*lens_ipow(y, 5)*dx + -3.22157e-10 *lens_ipow(x, 6)*y + 5.74751 *x*y*dx*lens_ipow(dy, 6) + 0.94371 *x*y*lens_ipow(dx, 7) + 0.000167849 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 3) + 0.000189559 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.000253187 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.9377e-05 *lens_ipow(x, 4)*y*lens_ipow(dx, 4) + -6.97003e-06 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 1.22862e-09 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx + -6.19111e-07 *lens_ipow(x, 6)*lens_ipow(dy, 3)+0.0f;
const float dx44 =  + 0.202527  + -0.511865 *lens_ipow(lambda, 2) + 3.4382 *lens_ipow(lambda, 10)+0.0f;
