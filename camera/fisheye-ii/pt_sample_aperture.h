float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + -7.48661e-05  + 31.8705 *begin_dx + 0.436491 *begin_x + -0.00434827 *begin_dx*begin_dy + -9.44772e-05 *begin_x*begin_dx + 23.493 *begin_dx*lens_ipow(begin_dy, 2) + 23.4024 *lens_ipow(begin_dx, 3) + 1.65118 *begin_y*begin_dx*begin_dy + 0.0146014 *lens_ipow(begin_y, 2)*begin_dx + 0.362828 *begin_x*lens_ipow(begin_dy, 2) + 2.00488 *begin_x*lens_ipow(begin_dx, 2) + 0.0174479 *begin_x*begin_y*begin_dy + -4.84547e-05 *begin_x*lens_ipow(begin_y, 2) + 0.0317825 *lens_ipow(begin_x, 2)*begin_dx + -5.88871e-05 *lens_ipow(begin_x, 3) + -0.275446 *begin_dx*lens_ipow(begin_lambda, 3) + -0.00911571 *begin_x*lens_ipow(begin_lambda, 4) + 8.46664e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 0.000162533 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -0.00500617 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 3) + 0.00346054 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 4) + 1.87863e-06 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2) + -1.10053e-09 *begin_x*lens_ipow(begin_y, 6) + -2.96166e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 2) + 3.60505e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -5.47443e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + 0.154323 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 3) + -1.62895e-10 *lens_ipow(begin_y, 8)*begin_dx + -15.1628 *begin_x*lens_ipow(begin_dy, 8) + 5.78761e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5)*begin_dx*begin_dy + -0.0318514 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 6) + -2.1098e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6) + 7.17363e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 1.90932e-08 *lens_ipow(begin_x, 7)*lens_ipow(begin_dx, 2) + -23796.2 *lens_ipow(begin_dx, 9)*lens_ipow(begin_dy, 2) + 1.04464e-05 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + 0.155273 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + 3.65732e-05 *lens_ipow(begin_x, 4)*begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 4) + 5.38196e-10 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + -2.46275e-14 *lens_ipow(begin_x, 11);
  pred_y =  + 6.2105e-05  + 31.8523 *begin_dy + 0.436577 *begin_y + -1.05829e-05 *begin_x + 23.7694 *lens_ipow(begin_dy, 3) + 23.3543 *lens_ipow(begin_dx, 2)*begin_dy + 2.01849 *begin_y*lens_ipow(begin_dy, 2) + 0.361428 *begin_y*lens_ipow(begin_dx, 2) + 0.0319743 *lens_ipow(begin_y, 2)*begin_dy + -6.28848e-05 *lens_ipow(begin_y, 3) + 1.6358 *begin_x*begin_dx*begin_dy + 0.0172154 *begin_x*begin_y*begin_dx + 0.0144248 *lens_ipow(begin_x, 2)*begin_dy + -6.19596e-05 *lens_ipow(begin_x, 2)*begin_y + -0.00022343 *begin_x*begin_y*begin_dx*begin_dy + -0.357427 *begin_dy*lens_ipow(begin_lambda, 4) + -0.00803071 *begin_y*lens_ipow(begin_lambda, 4) + -0.0719071 *begin_y*lens_ipow(begin_dx, 4) + 0.000210144 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + 0.0173161 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.000249095 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 8.42586 *begin_x*begin_dx*lens_ipow(begin_dy, 5) + 9.61801e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -0.00397214 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3)*begin_dy + -0.000161053 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dx, 3) + -0.0549945 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 6) + 2.40036e-08 *lens_ipow(begin_y, 7)*lens_ipow(begin_dy, 2) + 0.860181 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 7) + 0.00822521 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -5.8725e-11 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 5) + -1.57326e-10 *lens_ipow(begin_x, 8)*begin_dy + -6.14155e-12 *lens_ipow(begin_x, 8)*begin_y + 0.159106 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 5) + -3.27603e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 3) + 283.107 *begin_y*lens_ipow(begin_dy, 10) + -2.53299e-14 *lens_ipow(begin_y, 11) + 0.0521695 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 6) + 1.02787e-07 *begin_x*lens_ipow(begin_y, 6)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -8.88835e-14 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 9) + 1.50521e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4)*begin_dx*begin_dy;
  pred_dx =  + 6.77723e-06  + -0.689144 *begin_dx + -0.0407339 *begin_x + -0.000393945 *lens_ipow(begin_dx, 2) + -1.00535 *begin_dx*lens_ipow(begin_dy, 2) + -0.975239 *lens_ipow(begin_dx, 3) + 0.00588034 *begin_y*begin_dx*begin_dy + -0.000181507 *lens_ipow(begin_y, 2)*begin_dx + 0.0148577 *begin_x*lens_ipow(begin_dy, 2) + 0.0211172 *begin_x*lens_ipow(begin_dx, 2) + 0.00095871 *begin_x*begin_y*begin_dy + -9.42028e-06 *begin_x*lens_ipow(begin_y, 2) + 0.000734514 *lens_ipow(begin_x, 2)*begin_dx + -9.49856e-06 *lens_ipow(begin_x, 3) + -0.249736 *begin_dx*lens_ipow(begin_lambda, 4) + -0.00427668 *begin_x*lens_ipow(begin_lambda, 4) + -0.0268341 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 5.50992e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 1.53167e-05 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 2.76208e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -1.08109 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 1.58568e-07 *lens_ipow(begin_y, 5)*begin_dx*begin_dy + -0.00830647 *begin_x*begin_y*lens_ipow(begin_dy, 5) + -5.47517e-06 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 3) + 0.000193023 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 4) + 0.346269 *begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 5) + -0.000181321 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 5) + -3.64251 *begin_y*begin_dx*lens_ipow(begin_dy, 7) + -1.92189 *begin_x*lens_ipow(begin_dx, 8) + 1.89566e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -2.06119e-12 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6) + 6.1787e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -1.65513e-12 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2) + -0.191022 *begin_x*lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 5) + 1.1421 *begin_dx*lens_ipow(begin_lambda, 10) + 0.0208323 *begin_x*lens_ipow(begin_lambda, 10) + -0.323351 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 2) + -1.0162e-15 *begin_x*lens_ipow(begin_y, 10) + -1.39934e-10 *lens_ipow(begin_x, 7)*lens_ipow(begin_lambda, 4) + -1.11561e-15 *lens_ipow(begin_x, 11);
  pred_dy =  + 4.48002e-06  + -0.685162 *begin_dy + -0.0407469 *begin_y + -0.954165 *lens_ipow(begin_dy, 3) + -0.983723 *lens_ipow(begin_dx, 2)*begin_dy + 0.0224369 *begin_y*lens_ipow(begin_dy, 2) + 0.0144449 *begin_y*lens_ipow(begin_dx, 2) + 0.000762545 *lens_ipow(begin_y, 2)*begin_dy + -9.25494e-06 *lens_ipow(begin_y, 3) + 0.00536501 *begin_x*begin_dx*begin_dy + 0.00092874 *begin_x*begin_y*begin_dx + -0.000166599 *lens_ipow(begin_x, 2)*begin_dy + -9.55191e-06 *lens_ipow(begin_x, 2)*begin_y + -0.162756 *begin_dy*lens_ipow(begin_lambda, 3) + -0.00423847 *begin_y*lens_ipow(begin_lambda, 4) + -0.0433327 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 3.96484e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + 6.07546e-05 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 2) + 2.38054e-05 *lens_ipow(begin_x, 3)*begin_dx*begin_dy + 0.000281136 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 4) + -4.45221e-05 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + 7.22198e-09 *begin_x*lens_ipow(begin_y, 5)*begin_dx + 0.000429865 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 4) + -2.16953 *begin_y*lens_ipow(begin_dy, 8) + -2.78744e-08 *lens_ipow(begin_y, 5)*lens_ipow(begin_lambda, 4) + -2.3278 *begin_x*lens_ipow(begin_dx, 7)*begin_dy + -0.0172838 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 5) + -3.01508e-12 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 5) + -3.90698e-13 *lens_ipow(begin_x, 8)*begin_y + -0.203696 *begin_y*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 5) + 9.00352e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + -0.307797 *begin_x*lens_ipow(begin_dx, 3)*begin_dy*lens_ipow(begin_lambda, 5) + 0.826781 *begin_dy*lens_ipow(begin_lambda, 10) + 0.0210119 *begin_y*lens_ipow(begin_lambda, 10) + -1.26728e-15 *lens_ipow(begin_y, 11) + -0.0711239 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2) + -0.000230722 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 4) + 2.93736e-13 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 8)*begin_dy + -0.141772 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 3) + -2.09582e-11 *lens_ipow(begin_x, 8)*begin_dy*lens_ipow(begin_lambda, 2);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 31.8705  + -0.00434827 *begin_dy + -9.44772e-05 *begin_x + 23.493 *lens_ipow(begin_dy, 2) + 70.2071 *lens_ipow(begin_dx, 2) + 1.65118 *begin_y*begin_dy + 0.0146014 *lens_ipow(begin_y, 2) + 4.00976 *begin_x*begin_dx + 0.0317825 *lens_ipow(begin_x, 2) + -0.275446 *lens_ipow(begin_lambda, 3) + 8.46664e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dy + -0.00500617 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 3) + 3.75727e-06 *begin_x*lens_ipow(begin_y, 4)*begin_dx + -2.96166e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 2) + 0.308646 *begin_x*begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + -1.62895e-10 *lens_ipow(begin_y, 8) + 5.78761e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5)*begin_dy + -0.191108 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 5) + 1.43473e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*begin_dx + 3.81864e-08 *lens_ipow(begin_x, 7)*begin_dx + -214166 *lens_ipow(begin_dx, 8)*lens_ipow(begin_dy, 2) + 0.776365 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 3.65732e-05 *lens_ipow(begin_x, 4)*begin_y*begin_dy*lens_ipow(begin_lambda, 4) + 5.38196e-10 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3)*begin_dy+0.0f;
  dx1_domega0[0][1] =  + -0.00434827 *begin_dx + 46.986 *begin_dx*begin_dy + 1.65118 *begin_y*begin_dx + 0.725656 *begin_x*begin_dy + 0.0174479 *begin_x*begin_y + 8.46664e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 0.000325067 *lens_ipow(begin_x, 3)*begin_dy + -0.0150185 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + 0.0138421 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + 7.2101e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dy + 0.154323 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 3) + -121.302 *begin_x*lens_ipow(begin_dy, 7) + 5.78761e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5)*begin_dx + -47592.4 *lens_ipow(begin_dx, 9)*begin_dy + 2.08927e-05 *begin_x*lens_ipow(begin_y, 4)*begin_dy*lens_ipow(begin_lambda, 4) + 0.310546 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5)*begin_dy + 3.65732e-05 *lens_ipow(begin_x, 4)*begin_y*begin_dx*lens_ipow(begin_lambda, 4) + 5.38196e-10 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3)*begin_dx+0.0f;
  dx1_domega0[1][0] =  + 46.7086 *begin_dx*begin_dy + 0.722855 *begin_y*begin_dx + 1.6358 *begin_x*begin_dy + 0.0172154 *begin_x*begin_y + -0.00022343 *begin_x*begin_y*begin_dy + -0.287628 *begin_y*lens_ipow(begin_dx, 3) + 0.000420287 *lens_ipow(begin_y, 3)*begin_dx + 0.0173161 *begin_x*begin_y*lens_ipow(begin_dy, 2) + 0.000249095 *begin_x*lens_ipow(begin_y, 2)*begin_dy + 8.42586 *begin_x*lens_ipow(begin_dy, 5) + -0.0119164 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_dy + -0.00048316 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dx, 2) + 0.0164504 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 3) + 0.159106 *begin_x*begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 5) + 0.0521695 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 6) + 1.02787e-07 *begin_x*lens_ipow(begin_y, 6)*begin_dy*lens_ipow(begin_lambda, 2) + 1.50521e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4)*begin_dy+0.0f;
  dx1_domega0[1][1] =  + 31.8523  + 71.3082 *lens_ipow(begin_dy, 2) + 23.3543 *lens_ipow(begin_dx, 2) + 4.03697 *begin_y*begin_dy + 0.0319743 *lens_ipow(begin_y, 2) + 1.6358 *begin_x*begin_dx + 0.0144248 *lens_ipow(begin_x, 2) + -0.00022343 *begin_x*begin_y*begin_dx + -0.357427 *lens_ipow(begin_lambda, 4) + 0.0346321 *begin_x*begin_y*begin_dx*begin_dy + 0.000249095 *begin_x*lens_ipow(begin_y, 2)*begin_dx + 42.1293 *begin_x*begin_dx*lens_ipow(begin_dy, 4) + 1.9236e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dy + -0.00397214 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3) + -0.329967 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 5) + 4.80071e-08 *lens_ipow(begin_y, 7)*begin_dy + 6.02127 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 6) + 0.0246756 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -1.57326e-10 *lens_ipow(begin_x, 8) + 0.318213 *begin_x*begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + -3.27603e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 3) + 2831.07 *begin_y*lens_ipow(begin_dy, 9) + 0.313017 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 5) + 1.02787e-07 *begin_x*lens_ipow(begin_y, 6)*begin_dx*lens_ipow(begin_lambda, 2) + 1.50521e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4)*begin_dx+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
