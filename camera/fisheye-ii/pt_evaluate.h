const float out_x =  + -0.000784753  + 7.63569 *dx + -1.44172 *x + -0.0134337 *dx*dy + 8.22474e-06 *lens_ipow(y, 2) + 1.89833e-05 *lens_ipow(x, 2) + 12.392 *dx*lens_ipow(dy, 2) + 12.7751 *lens_ipow(dx, 3) + 1.15799 *y*dx*dy + 0.034187 *lens_ipow(y, 2)*dx + 0.722517 *x*lens_ipow(dy, 2) + 1.88901 *x*lens_ipow(dx, 2) + 0.0499706 *x*y*dy + -0.000556658 *x*lens_ipow(y, 2) + 0.0866546 *lens_ipow(x, 2)*dx + -0.000546433 *lens_ipow(x, 3) + -0.26754 *x*lens_ipow(lambda, 3) + 3.08254e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -4.62751 *dx*lens_ipow(lambda, 6) + -9.99294e-06 *lens_ipow(y, 5)*dx*dy + -0.116753 *x*y*lens_ipow(dy, 5) + -1.45818 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -1.49592 *x*y*lens_ipow(dx, 4)*dy + -0.0267369 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 4) + -2.61735e-05 *lens_ipow(x, 4)*y*dx*dy + 3.54291e-07 *x*lens_ipow(y, 5)*dy*lambda + 0.00533301 *lens_ipow(y, 4)*lens_ipow(dx, 5) + 0.0379634 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.0068482 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -3523.6 *lens_ipow(dx, 9)*lambda + -0.0655726 *x*y*dy*lens_ipow(lambda, 7) + -6.10251e-11 *lens_ipow(x, 3)*lens_ipow(y, 6)*lambda + -4.19341e-08 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(lambda, 3) + -1.44358e-07 *lens_ipow(x, 7)*lens_ipow(dx, 2)*lambda + -1.37445e-11 *lens_ipow(x, 9)*lambda + 1.17814 *x*lens_ipow(lambda, 10) + -17.537 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 6) + 0.00703605 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + 9.75557e-08 *lens_ipow(x, 4)*lens_ipow(y, 4)*lens_ipow(dx, 3) + 5.05006e-07 *lens_ipow(x, 7)*lens_ipow(dy, 4);
const float out_y =  + 0.000311169  + 7.88254 *dy + -1.4375 *y + 0.000528357 *y*dy + 1.24646e-05 *x*y + 12.3294 *lens_ipow(dy, 3) + 0.229534 *dx*lens_ipow(dy, 2) + 12.0105 *lens_ipow(dx, 2)*dy + 1.8975 *y*lens_ipow(dy, 2) + 0.683344 *y*lens_ipow(dx, 2) + 0.0836872 *lens_ipow(y, 2)*dy + -0.000110733 *lens_ipow(y, 2)*dx + -0.000573825 *lens_ipow(y, 3) + 1.24023 *x*dx*dy + 0.0415129 *x*y*dx + 0.0332037 *lens_ipow(x, 2)*dy + -0.000570216 *lens_ipow(x, 2)*y + -0.297598 *y*lens_ipow(lambda, 3) + 0.0132079 *x*y*dx*lambda + -0.00427025 *x*lens_ipow(y, 2)*dx*dy + 0.057279 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -9.94245 *dy*lens_ipow(lambda, 5) + 3.70943 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + -1.48468 *x*y*dx*lens_ipow(dy, 4) + 0.412618 *lens_ipow(x, 2)*lens_ipow(dx, 4)*dy + 1.45008e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx + -1.13533e-05 *lens_ipow(x, 5)*dx*dy + 1.28871e-07 *lens_ipow(x, 5)*y*dx + -2.39716e-05 *lens_ipow(x, 4)*y*lens_ipow(dy, 2)*lambda + 0.00473397 *lens_ipow(y, 4)*lens_ipow(dy, 5) + -30.3653 *x*y*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 0.0285724 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -1.62748e-07 *lens_ipow(x, 2)*lens_ipow(y, 5)*lens_ipow(dy, 2) + 2.17952e-09 *lens_ipow(y, 8)*dy*lambda + -0.0503258 *x*y*dx*lens_ipow(lambda, 7) + 39.8188 *dy*lens_ipow(lambda, 10) + 1.59946 *y*lens_ipow(lambda, 10) + 778.271 *y*lens_ipow(dy, 10) + -1.30547e-10 *lens_ipow(x, 2)*lens_ipow(y, 7)*lens_ipow(lambda, 2) + -1.7793e-10 *lens_ipow(x, 6)*lens_ipow(y, 3)*lens_ipow(lambda, 2);
const float out_dx =  + -1.11922e-05  + -0.225093 *dx + -0.0841526 *x + -0.0013309 *dx*dy + 0.69134 *dx*lens_ipow(dy, 2) + 0.684338 *lens_ipow(dx, 3) + 0.0445775 *y*dx*dy + 0.00135277 *lens_ipow(y, 2)*dx + 0.0180183 *x*lens_ipow(dy, 2) + 0.0627795 *x*lens_ipow(dx, 2) + 0.00141379 *x*y*dy + 6.70309e-05 *x*lens_ipow(y, 2) + 0.00269862 *lens_ipow(x, 2)*dx + 8.04753e-05 *lens_ipow(x, 3) + -0.125917 *dx*lens_ipow(lambda, 4) + 0.00229236 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -9.59349e-06 *lens_ipow(x, 2)*y*dx*dy + -0.000933339 *lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + -6.94939e-06 *x*lens_ipow(y, 3)*lens_ipow(dy, 3) + 0.0641089 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -3.04543e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + 6.48934e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -819.638 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + -5.14338e-06 *lens_ipow(y, 5)*lens_ipow(dx, 3)*dy + -0.00176429 *x*lens_ipow(lambda, 8) + -0.0155381 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 5) + 8.81661e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 5) + -0.0050225 *lens_ipow(x, 3)*lens_ipow(dx, 6) + -5.07911e-12 *lens_ipow(x, 3)*lens_ipow(y, 6) + -2.74459e-08 *lens_ipow(x, 6)*dx*lens_ipow(lambda, 2) + -1110.59 *lens_ipow(dx, 7)*lens_ipow(dy, 2)*lambda + -396.033 *lens_ipow(dx, 9)*lens_ipow(lambda, 2) + -0.121143 *y*dx*dy*lens_ipow(lambda, 8) + -1.11792 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 6) + -3.65546e-15 *x*lens_ipow(y, 10) + 1.27558e-08 *lens_ipow(x, 6)*y*dx*dy*lens_ipow(lambda, 2) + -4.36002e-10 *lens_ipow(x, 7)*lens_ipow(lambda, 4) + -4.19371e-14 *lens_ipow(x, 7)*lens_ipow(y, 4) + -1.78292e-14 *lens_ipow(x, 9)*lens_ipow(y, 2) + -3.29006e-15 *lens_ipow(x, 11);
const float out_dy =  + 1.42794e-06  + -0.217603 *dy + -0.0841902 *y + 1.58292e-06 *x + 0.674894 *lens_ipow(dy, 3) + 0.062871 *y*lens_ipow(dy, 2) + 0.000197419 *y*dx*dy + 0.0140976 *y*lens_ipow(dx, 2) + 0.0027188 *lens_ipow(y, 2)*dy + 8.19753e-05 *lens_ipow(y, 3) + 0.037641 *x*dx*dy + 0.00114241 *x*y*dx + 0.00116084 *lens_ipow(x, 2)*dy + 9.25027e-05 *lens_ipow(x, 2)*y + -0.104653 *dy*lens_ipow(lambda, 3) + 0.901071 *lens_ipow(dx, 2)*dy*lambda + 1.97753e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.0122643 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.000486164 *x*y*dx*lens_ipow(dy, 2) + -4.04251e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lambda + 0.0670325 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.000863154 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + 0.0307372 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 0.03181 *lens_ipow(x, 2)*lens_ipow(dx, 4)*dy + -6.17425e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + -1.54011e-05 *lens_ipow(x, 3)*y*lens_ipow(dx, 3) + -0.00096889 *y*lens_ipow(lambda, 7) + 0.000134695 *lens_ipow(y, 4)*lens_ipow(dy, 5) + -3.46155e-08 *lens_ipow(y, 6)*dy*lens_ipow(lambda, 2) + -8.41613e-13 *lens_ipow(y, 9) + 4.08366e-08 *lens_ipow(x, 6)*lens_ipow(dy, 3) + 2.80098e-08 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy*lambda + -347.408 *lens_ipow(dy, 9)*lens_ipow(lambda, 2) + -6837.89 *lens_ipow(dx, 2)*lens_ipow(dy, 9) + -1.13769 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 6) + -5.1954e-10 *lens_ipow(y, 7)*lens_ipow(lambda, 4) + 1.86281e-11 *x*lens_ipow(y, 8)*dx*dy + 1.39238e-05 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 2.12766e-08 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -2.86346e-14 *lens_ipow(x, 8)*lens_ipow(y, 3);
const float out_transmittance =  + 0.34271  + 0.000440114 *dx + -1.36373e-05 *y + -0.0212991 *lens_ipow(dy, 2) + 0.0100278 *lens_ipow(dx, 2) + -0.00147188 *y*dy + -0.000195121 *lens_ipow(y, 2) + -0.000134569 *x*dy + -0.00112552 *x*dx + -1.04343e-05 *x*y + -0.000339071 *lens_ipow(x, 2) + 0.154403 *lens_ipow(lambda, 3) + 0.000531139 *x*lens_ipow(dy, 2) + -6.42917e-07 *x*lens_ipow(y, 2) + -7.32405e-08 *lens_ipow(x, 3) + -0.00716731 *y*lens_ipow(dx, 3) + -0.000658014 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 2.90119e-06 *lens_ipow(y, 3)*dx + -0.00071396 *x*y*dx*dy + -0.000895088 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 3.92759e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + 3.79158e-06 *lens_ipow(x, 4) + -6.62658e-07 *x*lens_ipow(y, 3)*dx + 0.000270429 *lens_ipow(y, 3)*lens_ipow(dy, 3) + 1.52285e-08 *lens_ipow(y, 6) + 2.14191e-07 *lens_ipow(x, 4)*y*dy + -8.38736e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*dy + -1.68291e-10 *lens_ipow(x, 8) + 2.78604e-10 *lens_ipow(y, 8)*lens_ipow(dx, 2) + -8.78562e-13 *lens_ipow(y, 10) + -3.6812e-12 *lens_ipow(x, 2)*lens_ipow(y, 8) + -2.36696e-09 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*dy + -4.85345e-12 *lens_ipow(x, 4)*lens_ipow(y, 6) + 5.46428e-13 *lens_ipow(x, 5)*lens_ipow(y, 5) + -8.44652e-12 *lens_ipow(x, 6)*lens_ipow(y, 4) + 2.06445e-10 *lens_ipow(x, 8)*lens_ipow(dy, 2) + -2.61949e-12 *lens_ipow(x, 8)*lens_ipow(y, 2) + -1.11549 *lens_ipow(lambda, 11) + 5.90677e-13 *x*lens_ipow(y, 9)*dx + 1.2684e-14 *lens_ipow(x, 9)*lens_ipow(y, 2);
