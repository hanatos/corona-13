const float out_x =  + -7.48661e-05  + 31.8705 *dx + 0.436491 *x + -0.00434827 *dx*dy + -9.44772e-05 *x*dx + 23.493 *dx*lens_ipow(dy, 2) + 23.4024 *lens_ipow(dx, 3) + 1.65118 *y*dx*dy + 0.0146014 *lens_ipow(y, 2)*dx + 0.362828 *x*lens_ipow(dy, 2) + 2.00488 *x*lens_ipow(dx, 2) + 0.0174479 *x*y*dy + -4.84547e-05 *x*lens_ipow(y, 2) + 0.0317825 *lens_ipow(x, 2)*dx + -5.88871e-05 *lens_ipow(x, 3) + -0.275446 *dx*lens_ipow(lambda, 3) + -0.00911571 *x*lens_ipow(lambda, 4) + 8.46664e-06 *lens_ipow(x, 2)*y*dx*dy + 0.000162533 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -0.00500617 *lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + 0.00346054 *x*lens_ipow(y, 2)*lens_ipow(dy, 4) + 1.87863e-06 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + -1.10053e-09 *x*lens_ipow(y, 6) + -2.96166e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + 3.60505e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -5.47443e-09 *lens_ipow(x, 5)*lens_ipow(y, 2) + 0.154323 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + -1.62895e-10 *lens_ipow(y, 8)*dx + -15.1628 *x*lens_ipow(dy, 8) + 5.78761e-08 *lens_ipow(x, 2)*lens_ipow(y, 5)*dx*dy + -0.0318514 *lens_ipow(x, 3)*lens_ipow(dx, 6) + -2.1098e-11 *lens_ipow(x, 3)*lens_ipow(y, 6) + 7.17363e-08 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.90932e-08 *lens_ipow(x, 7)*lens_ipow(dx, 2) + -23796.2 *lens_ipow(dx, 9)*lens_ipow(dy, 2) + 1.04464e-05 *x*lens_ipow(y, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.155273 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 3.65732e-05 *lens_ipow(x, 4)*y*dx*dy*lens_ipow(lambda, 4) + 5.38196e-10 *lens_ipow(x, 6)*lens_ipow(y, 3)*dx*dy + -2.46275e-14 *lens_ipow(x, 11);
const float out_y =  + 6.2105e-05  + 31.8523 *dy + 0.436577 *y + -1.05829e-05 *x + 23.7694 *lens_ipow(dy, 3) + 23.3543 *lens_ipow(dx, 2)*dy + 2.01849 *y*lens_ipow(dy, 2) + 0.361428 *y*lens_ipow(dx, 2) + 0.0319743 *lens_ipow(y, 2)*dy + -6.28848e-05 *lens_ipow(y, 3) + 1.6358 *x*dx*dy + 0.0172154 *x*y*dx + 0.0144248 *lens_ipow(x, 2)*dy + -6.19596e-05 *lens_ipow(x, 2)*y + -0.00022343 *x*y*dx*dy + -0.357427 *dy*lens_ipow(lambda, 4) + -0.00803071 *y*lens_ipow(lambda, 4) + -0.0719071 *y*lens_ipow(dx, 4) + 0.000210144 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.0173161 *x*y*dx*lens_ipow(dy, 2) + 0.000249095 *x*lens_ipow(y, 2)*dx*dy + 8.42586 *x*dx*lens_ipow(dy, 5) + 9.61801e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.00397214 *lens_ipow(x, 3)*lens_ipow(dx, 3)*dy + -0.000161053 *lens_ipow(x, 3)*y*lens_ipow(dx, 3) + -0.0549945 *lens_ipow(y, 3)*lens_ipow(dy, 6) + 2.40036e-08 *lens_ipow(y, 7)*lens_ipow(dy, 2) + 0.860181 *lens_ipow(x, 2)*lens_ipow(dy, 7) + 0.00822521 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -5.8725e-11 *lens_ipow(x, 4)*lens_ipow(y, 5) + -1.57326e-10 *lens_ipow(x, 8)*dy + -6.14155e-12 *lens_ipow(x, 8)*y + 0.159106 *x*y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -3.27603e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 3) + 283.107 *y*lens_ipow(dy, 10) + -2.53299e-14 *lens_ipow(y, 11) + 0.0521695 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 6) + 1.02787e-07 *x*lens_ipow(y, 6)*dx*dy*lens_ipow(lambda, 2) + -8.88835e-14 *lens_ipow(x, 2)*lens_ipow(y, 9) + 1.50521e-09 *lens_ipow(x, 5)*lens_ipow(y, 4)*dx*dy;
const float out_dx =  + 6.77723e-06  + -0.689144 *dx + -0.0407339 *x + -0.000393945 *lens_ipow(dx, 2) + -1.00535 *dx*lens_ipow(dy, 2) + -0.975239 *lens_ipow(dx, 3) + 0.00588034 *y*dx*dy + -0.000181507 *lens_ipow(y, 2)*dx + 0.0148577 *x*lens_ipow(dy, 2) + 0.0211172 *x*lens_ipow(dx, 2) + 0.00095871 *x*y*dy + -9.42028e-06 *x*lens_ipow(y, 2) + 0.000734514 *lens_ipow(x, 2)*dx + -9.49856e-06 *lens_ipow(x, 3) + -0.249736 *dx*lens_ipow(lambda, 4) + -0.00427668 *x*lens_ipow(lambda, 4) + -0.0268341 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 5.50992e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.53167e-05 *lens_ipow(x, 2)*y*dx*dy + 2.76208e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -1.08109 *y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 1.58568e-07 *lens_ipow(y, 5)*dx*dy + -0.00830647 *x*y*lens_ipow(dy, 5) + -5.47517e-06 *x*lens_ipow(y, 3)*lens_ipow(dy, 3) + 0.000193023 *lens_ipow(x, 3)*lens_ipow(dx, 4) + 0.346269 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -0.000181321 *x*y*dy*lens_ipow(lambda, 5) + -3.64251 *y*dx*lens_ipow(dy, 7) + -1.92189 *x*lens_ipow(dx, 8) + 1.89566e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -2.06119e-12 *lens_ipow(x, 3)*lens_ipow(y, 6) + 6.1787e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -1.65513e-12 *lens_ipow(x, 7)*lens_ipow(y, 2) + -0.191022 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 1.1421 *dx*lens_ipow(lambda, 10) + 0.0208323 *x*lens_ipow(lambda, 10) + -0.323351 *x*lens_ipow(y, 2)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -1.0162e-15 *x*lens_ipow(y, 10) + -1.39934e-10 *lens_ipow(x, 7)*lens_ipow(lambda, 4) + -1.11561e-15 *lens_ipow(x, 11);
const float out_dy =  + 4.48002e-06  + -0.685162 *dy + -0.0407469 *y + -0.954165 *lens_ipow(dy, 3) + -0.983723 *lens_ipow(dx, 2)*dy + 0.0224369 *y*lens_ipow(dy, 2) + 0.0144449 *y*lens_ipow(dx, 2) + 0.000762545 *lens_ipow(y, 2)*dy + -9.25494e-06 *lens_ipow(y, 3) + 0.00536501 *x*dx*dy + 0.00092874 *x*y*dx + -0.000166599 *lens_ipow(x, 2)*dy + -9.55191e-06 *lens_ipow(x, 2)*y + -0.162756 *dy*lens_ipow(lambda, 3) + -0.00423847 *y*lens_ipow(lambda, 4) + -0.0433327 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.96484e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 6.07546e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 2.38054e-05 *lens_ipow(x, 3)*dx*dy + 0.000281136 *lens_ipow(y, 3)*lens_ipow(dy, 4) + -4.45221e-05 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + 7.22198e-09 *x*lens_ipow(y, 5)*dx + 0.000429865 *lens_ipow(x, 2)*y*lens_ipow(dx, 4) + -2.16953 *y*lens_ipow(dy, 8) + -2.78744e-08 *lens_ipow(y, 5)*lens_ipow(lambda, 4) + -2.3278 *x*lens_ipow(dx, 7)*dy + -0.0172838 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 5) + -3.01508e-12 *lens_ipow(x, 4)*lens_ipow(y, 5) + -3.90698e-13 *lens_ipow(x, 8)*y + -0.203696 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + 9.00352e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.307797 *x*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 5) + 0.826781 *dy*lens_ipow(lambda, 10) + 0.0210119 *y*lens_ipow(lambda, 10) + -1.26728e-15 *lens_ipow(y, 11) + -0.0711239 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -0.000230722 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + 2.93736e-13 *lens_ipow(x, 2)*lens_ipow(y, 8)*dy + -0.141772 *lens_ipow(x, 3)*lens_ipow(dx, 5)*lens_ipow(dy, 3) + -2.09582e-11 *lens_ipow(x, 8)*dy*lens_ipow(lambda, 2);
const float out_transmittance =  + 0.68  + 0.202527 *lambda + 6.77241e-07 *y + -1.649e-07 *x + -0.04492 *lens_ipow(dy, 2) + -0.0416905 *lens_ipow(dx, 2) + -0.00217319 *y*dy + -3.58844e-05 *lens_ipow(y, 2) + 4.65024e-06 *x*dy + -0.00206822 *x*dx + -3.55232e-05 *lens_ipow(x, 2) + -0.170622 *lens_ipow(lambda, 3) + -0.0984085 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.00040244 *x*y*dx*dy + -6.14652e-06 *x*lens_ipow(y, 2)*dx + 0.000116351 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.0637497 *y*lens_ipow(dy, 5) + 1.83783e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + 0.0665558 *x*lens_ipow(dx, 5) + -1.37674e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + 1.86907e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -2.12861e-12 *lens_ipow(y, 8) + 5.14633e-08 *x*lens_ipow(y, 5)*dx*dy + -1.66891e-11 *lens_ipow(x, 2)*lens_ipow(y, 6) + -2.31308e-11 *lens_ipow(x, 4)*lens_ipow(y, 4) + -1.47479e-09 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx + -3.22157e-10 *lens_ipow(x, 6)*y*dy + -2.52569e-11 *lens_ipow(x, 6)*lens_ipow(y, 2) + -2.08402e-12 *lens_ipow(x, 8) + -6.44066e-08 *lens_ipow(y, 6)*lens_ipow(dx, 4) + 0.821073 *x*y*dx*lens_ipow(dy, 7) + 0.94371 *x*y*lens_ipow(dx, 7)*dy + 4.19623e-05 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 4) + 6.31863e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -8.43957e-05 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 3.9377e-05 *lens_ipow(x, 4)*y*lens_ipow(dx, 4)*dy + -3.48502e-06 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.22862e-09 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx*dy + -1.54778e-07 *lens_ipow(x, 6)*lens_ipow(dy, 4) + 0.312564 *lens_ipow(lambda, 11);
