const float out_x =  + 0.000332875  + 38.4939 *dx + 5.52046e-07 *y + 0.808035 *x + -0.00232839 *lens_ipow(dx, 2) + -1.56745e-06 *x*y + 1.13603 *dx*lens_ipow(lambda, 2) + -8.94836 *dx*lens_ipow(dy, 2) + -11.2887 *lens_ipow(dx, 3) + 0.00325261 *lens_ipow(y, 2)*dx + 0.14674 *x*lens_ipow(dy, 2) + 0.0112868 *x*y*dy + 0.000141138 *x*lens_ipow(y, 2) + 0.0121795 *lens_ipow(x, 2)*dx + 0.000129755 *lens_ipow(x, 3) + 0.0221718 *dx*lens_ipow(dy, 3) + -0.0212165 *lens_ipow(dx, 3)*dy + 0.0157898 *x*lens_ipow(lambda, 3) + 0.00665478 *lens_ipow(dx, 4)*dy + 3.20226 *lens_ipow(dx, 5) + -0.0818127 *y*lens_ipow(dx, 3)*dy + -0.00352902 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.000239042 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.000639126 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2) + 0.000274387 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 9.3389 *dx*lens_ipow(dy, 6) + 16.4145 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + -1.36058 *dx*lens_ipow(lambda, 7) + -0.70917 *lens_ipow(dx, 3)*lens_ipow(lambda, 5) + 0.0168168 *lens_ipow(y, 2)*lens_ipow(dx, 7) + 0.00866087 *x*lens_ipow(dx, 2)*lens_ipow(dy, 6) + 3.03344e-11 *lens_ipow(x, 8)*dx + 3.07216 *lens_ipow(dx, 11) + 0.445589 *y*dx*lens_ipow(dy, 9) + -4.43038e-08 *lens_ipow(y, 6)*lens_ipow(dx, 5) + 3.85742e-14 *lens_ipow(y, 10)*dx + 0.00375095 *lens_ipow(x, 2)*y*lens_ipow(dx, 7)*dy + -4.35115e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*lens_ipow(dy, 3) + -6.51474e-12 *lens_ipow(x, 5)*lens_ipow(y, 4)*lens_ipow(dx, 2) + 1.81549e-10 *lens_ipow(x, 7)*lens_ipow(lambda, 4);
const float out_y =  + 0.000800444  + 38.6818 *dy + -0.000396378 *dx + 0.809858 *y + 0.000112878 *y*dy + -4.9063e-05 *x*dy + 0.000166233 *x*dx + -10.6648 *lens_ipow(dy, 3) + -9.49893 *lens_ipow(dx, 2)*dy + 0.141577 *y*lens_ipow(dx, 2) + 0.0109229 *lens_ipow(y, 2)*dy + 0.000115124 *lens_ipow(y, 3) + 0.0113582 *x*y*dx + 0.00352415 *lens_ipow(x, 2)*dy + 0.000148077 *lens_ipow(x, 2)*y + 1.22435 *dy*lens_ipow(lambda, 4) + 4.07587 *lens_ipow(dx, 4)*dy + 0.000111513 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.0332369 *x*dx*lens_ipow(dy, 3) + -3.93619e-05 *x*lens_ipow(y, 2)*dx*dy + -0.0037682 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 0.000233835 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 4.8376 *lens_ipow(dy, 5)*lens_ipow(lambda, 2) + 17.9149 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 0.00825841 *y*lens_ipow(dx, 6) + 8.54151e-08 *lens_ipow(y, 5)*lens_ipow(dx, 2) + 0.314717 *lens_ipow(dx, 2)*lens_ipow(dy, 6) + 6.11751 *lens_ipow(dy, 9) + 8.02097 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + 0.0666773 *y*lens_ipow(lambda, 8) + 0.000170091 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 0.0116883 *lens_ipow(x, 2)*lens_ipow(dy, 7) + 2.43312e-08 *lens_ipow(y, 6)*dy*lens_ipow(lambda, 3) + -10.395 *lens_ipow(dy, 3)*lens_ipow(lambda, 8) + 0.00108051 *lens_ipow(y, 3)*lens_ipow(dy, 6)*lens_ipow(lambda, 2) + 0.00313065 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 7) + -7.99358e-05 *lens_ipow(x, 3)*y*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -6.593e-12 *lens_ipow(x, 4)*lens_ipow(y, 5)*lens_ipow(dy, 2) + -4.07579e-07 *lens_ipow(x, 5)*dx*dy*lens_ipow(lambda, 4) + -1.65797e-11 *lens_ipow(x, 5)*lens_ipow(y, 3)*lens_ipow(dx, 3);
const float out_dx =  + 4.01593e-05  + -1.13552 *dx + 1.71298e-09 *y + -0.0492188 *x + -0.000230811 *lens_ipow(dy, 2) + -8.67819e-05 *lens_ipow(dx, 2) + 1.70815e-06 *x*dy + -2.70486e-07 *lens_ipow(x, 2) + -1.98465 *dx*lens_ipow(dy, 2) + -1.25098 *lens_ipow(dx, 3) + -0.0933151 *y*dx*dy + -0.00108289 *lens_ipow(y, 2)*dx + -0.0504185 *x*lens_ipow(dy, 2) + -0.0819684 *x*lens_ipow(dx, 2) + -0.00250089 *x*y*dy + -2.63877e-05 *x*lens_ipow(y, 2) + -0.00192777 *lens_ipow(x, 2)*dx + -1.22139e-05 *lens_ipow(x, 3) + 0.169351 *dx*lens_ipow(lambda, 3) + -0.0027988 *y*lens_ipow(dx, 3)*dy + -2.69104e-05 *y*lens_ipow(dx, 4) + 0.00795007 *x*lens_ipow(lambda, 4) + -0.00104939 *x*lens_ipow(dy, 4) + -1.22159e-05 *lens_ipow(x, 2)*y*dx*dy + 5.53087e-09 *lens_ipow(x, 3)*lens_ipow(y, 2) + 6.28782e-06 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.197021 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 5.19268e-07 *lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + 2.50031e-06 *lens_ipow(x, 3)*lens_ipow(dy, 4) + -1.90139e-05 *lens_ipow(x, 3)*lens_ipow(dx, 4) + -0.080177 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + -9.89596e-13 *lens_ipow(y, 8)*dx + -1.09702e-12 *lens_ipow(x, 8)*dx + -0.879262 *dx*lens_ipow(lambda, 10) + -0.137924 *dx*lens_ipow(dy, 10) + -0.224137 *lens_ipow(dx, 11) + -0.000313522 *lens_ipow(y, 2)*lens_ipow(dx, 9) + -0.0384944 *x*lens_ipow(lambda, 10) + 0.00145553 *x*y*lens_ipow(dx, 6)*dy*lens_ipow(lambda, 2) + 5.33249e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 4);
const float out_dy =  + -3.49293e-06  + -1.13523 *dy + -0.0493509 *y + 2.05829e-06 *x + -0.000170224 *lens_ipow(dy, 2) + 1.65345e-07 *lens_ipow(y, 2) + 1.37864e-08 *x*y + -1.19016 *lens_ipow(dy, 3) + -0.444308 *lens_ipow(dx, 2)*dy + 0.000185801 *lens_ipow(dx, 3) + -0.0762816 *y*lens_ipow(dy, 2) + -0.0176375 *y*lens_ipow(dx, 2) + -0.00175014 *lens_ipow(y, 2)*dy + -1.03955e-05 *lens_ipow(y, 3) + 0.00379349 *x*dx*dy + -0.000454984 *x*y*dx + 0.000305372 *lens_ipow(x, 2)*dy + 2.89778e-06 *lens_ipow(x, 2)*y + -0.000653953 *lens_ipow(dx, 3)*dy + 0.265059 *dy*lens_ipow(lambda, 4) + 0.0080274 *y*lens_ipow(lambda, 4) + -0.000148504 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.00103283 *x*y*dx*lens_ipow(dy, 2) + -8.20623e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -1.00139e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + -0.456593 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + -2.0609e-05 *lens_ipow(y, 3)*lens_ipow(dy, 4) + 0.000710661 *lens_ipow(x, 2)*lens_ipow(dx, 4)*dy + -5.06788e-07 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 4) + -0.475785 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + -0.334401 *lens_ipow(dx, 8)*dy + -1.2027e-12 *lens_ipow(y, 8)*dy + 0.00068186 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -5.29948e-10 *lens_ipow(x, 6)*lens_ipow(dy, 3) + -1.27064 *dy*lens_ipow(lambda, 10) + -0.250263 *lens_ipow(dy, 11) + -0.0386125 *y*lens_ipow(lambda, 10) + -0.00220053 *y*lens_ipow(dx, 10) + 0.000429511 *x*y*dx*lens_ipow(dy, 8) + -1.84131e-15 *lens_ipow(x, 9)*y*dx;
const float out_transmittance =  + 0.917368  + -5.66651e-05 *dy + 2.32758e-05 *dx + -0.0368658 *lens_ipow(dy, 2) + -0.0222116 *lens_ipow(dx, 2) + -0.00153216 *y*dy + -1.8982e-05 *lens_ipow(y, 2) + -9.97992e-07 *x*dy + -0.00112255 *x*dx + -8.63335e-06 *lens_ipow(x, 2) + 0.0254024 *lens_ipow(lambda, 3) + -0.000667485 *dx*lens_ipow(dy, 2) + -0.000946979 *dx*lens_ipow(dy, 3) + -0.241391 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.129633 *lens_ipow(dx, 4) + -2.63693e-05 *y*lens_ipow(dx, 3) + 3.60707e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.00037023 *x*y*dx*dy + -1.45543e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + 0.000126749 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda + -0.00679596 *x*lens_ipow(dx, 3)*lambda + -0.212737 *lens_ipow(dy, 6) + -0.084192 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -0.0896338 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + 2.33254e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -2.68231e-05 *lens_ipow(x, 2)*lens_ipow(lambda, 4) + -1.32759e-10 *lens_ipow(x, 2)*lens_ipow(y, 4) + 9.16575e-08 *lens_ipow(x, 4)*lens_ipow(dy, 2) + 3.28415e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -2.33314e-10 *lens_ipow(x, 6) + 0.00218107 *y*dy*lens_ipow(lambda, 5) + 2.26227e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -0.0648339 *lens_ipow(dx, 8) + -6.18196e-13 *lens_ipow(y, 8) + 2.21726e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 4) + -0.243532 *lens_ipow(dx, 4)*lens_ipow(lambda, 5) + -1.68167e-05 *lens_ipow(y, 3)*lens_ipow(dy, 7) + 1.13661e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -1.12536e-15 *lens_ipow(x, 8)*lens_ipow(y, 2) + -0.121461 *lens_ipow(lambda, 11);
