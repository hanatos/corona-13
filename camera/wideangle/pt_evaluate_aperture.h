const float out_x =  + -1.45977e-05  + 33.0198 *dx + 4.34706e-06 *y + 0.590865 *x + -0.00612442 *lens_ipow(dy, 2) + 0.000107017 *y*dx + 3.60094e-06 *lens_ipow(y, 2) + 6.94731e-06 *x*y + 2.39929e-06 *lens_ipow(x, 2) + 28.7241 *dx*lens_ipow(dy, 2) + 28.7695 *lens_ipow(dx, 3) + 2.72925 *y*dx*dy + 0.0443946 *lens_ipow(y, 2)*dx + 1.03501 *x*lens_ipow(dy, 2) + -0.000629516 *x*dx*dy + 3.78078 *x*lens_ipow(dx, 2) + 0.0773786 *x*y*dy + 0.00113911 *x*lens_ipow(y, 2) + 0.121896 *lens_ipow(x, 2)*dx + 5.35929e-07 *lens_ipow(x, 2)*y + 0.00112678 *lens_ipow(x, 3) + -0.0121689 *y*lens_ipow(dx, 2)*dy + 1.03302e-05 *x*lens_ipow(y, 2)*dx + -0.075106 *x*lens_ipow(lambda, 4) + 0.112328 *x*lens_ipow(dy, 4) + -1.89372e-05 *lens_ipow(x, 2)*y*dx*dy + 0.000288058 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 1.28042e-07 *lens_ipow(x, 3)*lens_ipow(y, 2) + 2.15719e-07 *lens_ipow(x, 5) + -2.21332 *dx*lens_ipow(lambda, 5) + -9.00309e-07 *lens_ipow(x, 3)*y*lens_ipow(lambda, 2) + 8.0143e-08 *lens_ipow(x, 6)*dx + 4.365e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy*lambda + 4.29905e-12 *x*lens_ipow(y, 8) + -9.78558e-08 *lens_ipow(x, 6)*y*dx*dy + 3.86969e-13 *lens_ipow(x, 9)*y + 8.87442 *dx*lens_ipow(lambda, 10) + 0.359032 *x*lens_ipow(lambda, 10) + 7.74365e-08 *lens_ipow(x, 2)*lens_ipow(y, 6)*dx*lens_ipow(dy, 2) + 6.52176e-13 *lens_ipow(x, 5)*lens_ipow(y, 6);
const float out_y =  + -1.27715e-05  + 33.028 *dy + 0.592062 *y + 5.99218e-06 *x + 0.00200405 *lens_ipow(dx, 2) + 0.000153303 *y*dx + 3.71186e-06 *x*y + 28.6036 *lens_ipow(dy, 3) + 28.8268 *lens_ipow(dx, 2)*dy + 3.76492 *y*lens_ipow(dy, 2) + 1.04157 *y*lens_ipow(dx, 2) + 0.121886 *lens_ipow(y, 2)*dy + 0.00113931 *lens_ipow(y, 3) + 2.73214 *x*dx*dy + 2.9143e-05 *x*y*dy + 0.0776132 *x*y*dx + 9.04475e-07 *x*lens_ipow(y, 2) + 0.0445754 *lens_ipow(x, 2)*dy + 0.00114321 *lens_ipow(x, 2)*y + -0.0476118 *y*lens_ipow(lambda, 3) + -1.26068 *dy*lens_ipow(lambda, 4) + 0.0873411 *y*lens_ipow(dx, 4) + 0.000142096 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 2.19267e-08 *lens_ipow(y, 5) + -0.000251576 *x*lens_ipow(y, 2)*dx*dy + -5.49403e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + 7.58404e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.000390339 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + -6.75449e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 4) + 0.000799558 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 2.39644e-07 *lens_ipow(x, 5)*y*dx*lens_ipow(lambda, 2) + 1.0824e-08 *lens_ipow(x, 7)*dx*dy + 5.69878e-12 *lens_ipow(x, 8)*y + 1.03377e-08 *lens_ipow(x, 2)*lens_ipow(y, 6)*dy*lambda + 5.96074 *dy*lens_ipow(lambda, 10) + 0.246937 *y*lens_ipow(lambda, 10) + 6.1849e-13 *lens_ipow(x, 2)*lens_ipow(y, 9) + -6.52784e-09 *lens_ipow(x, 3)*lens_ipow(y, 6)*dx*dy + 0.000742958 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 7.37959e-13 *lens_ipow(x, 6)*lens_ipow(y, 5);
const float out_dx =  + 2.14133e-06  + -0.0430707 *dx + -3.91902e-07 *y + -0.0310928 *x + -3.21064 *dx*lens_ipow(dy, 2) + -3.2119 *lens_ipow(dx, 3) + -0.0544335 *y*dx*dy + 0.000181522 *lens_ipow(y, 2)*dx + -0.0223645 *x*lens_ipow(dy, 2) + -0.076129 *x*lens_ipow(dx, 2) + 0.00119072 *x*y*dy + 2.75323e-05 *x*lens_ipow(y, 2) + 0.00140174 *lens_ipow(x, 2)*dx + 6.68032e-08 *lens_ipow(x, 2)*y + 2.77685e-05 *lens_ipow(x, 3) + -0.182264 *dx*lens_ipow(lambda, 3) + -0.00643498 *x*lens_ipow(lambda, 4) + 0.000988239 *x*y*lens_ipow(dx, 2)*dy + -0.0217416 *lens_ipow(y, 2)*lens_ipow(dx, 5) + 0.314136 *x*lens_ipow(dy, 6) + 7.31978e-09 *x*lens_ipow(y, 5)*dy + 4.03418e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + -0.00915566 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4)*lambda + 8.97312e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy*lambda + 4.56841e-08 *lens_ipow(x, 5)*lens_ipow(dy, 2)*lambda + 73.9822 *lens_ipow(dx, 9) + 0.0244948 *lens_ipow(x, 3)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 1.37942e-11 *lens_ipow(x, 3)*lens_ipow(y, 6) + -0.000397675 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.00036476 *lens_ipow(x, 4)*lens_ipow(dx, 5)*lambda + 0.975594 *dx*lens_ipow(lambda, 10) + 1901 *lens_ipow(dx, 7)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -3.14508 *y*dx*lens_ipow(dy, 5)*lens_ipow(lambda, 4) + 0.0317773 *x*lens_ipow(lambda, 10) + 3.73242e-12 *lens_ipow(x, 2)*lens_ipow(y, 8)*dx + -3.36884e-10 *lens_ipow(x, 7)*lens_ipow(lambda, 4) + -1.09166e-10 *lens_ipow(x, 8)*y*dx*dy + -6.2297e-11 *lens_ipow(x, 9)*lens_ipow(dx, 2) + 6.41592e-14 *lens_ipow(x, 9)*lens_ipow(y, 2) + 8.05435e-15 *lens_ipow(x, 11);
const float out_dy =  + 4.66018e-07  + -0.0438014 *dy + -0.031091 *y + 3.38804e-07 *x + 6.15983e-06 *y*dx + -3.18856 *lens_ipow(dy, 3) + -3.19362 *lens_ipow(dx, 2)*dy + -0.0762984 *y*lens_ipow(dy, 2) + -0.0224616 *y*lens_ipow(dx, 2) + 0.00138872 *lens_ipow(y, 2)*dy + 2.74592e-05 *lens_ipow(y, 3) + -0.0539869 *x*dx*dy + 0.00120299 *x*y*dx + 0.000197944 *lens_ipow(x, 2)*dy + 2.76321e-05 *lens_ipow(x, 2)*y + -0.181453 *dy*lens_ipow(lambda, 3) + -0.00634061 *y*lens_ipow(lambda, 4) + 0.00101406 *x*y*dx*lens_ipow(dy, 2) + 9.78031e-10 *x*lens_ipow(y, 4) + 0.441651 *y*lens_ipow(dx, 6) + -0.0751138 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.0197984 *lens_ipow(x, 2)*lens_ipow(dy, 5) + -4.66264e-07 *lens_ipow(x, 4)*y*lens_ipow(dx, 2) + -5.034e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*dy*lambda + 5.80044e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy*lambda + -0.000199781 *lens_ipow(y, 4)*lens_ipow(dy, 5) + -6.17192e-09 *lens_ipow(y, 7)*lens_ipow(dy, 2) + -5.60323e-09 *lens_ipow(x, 2)*lens_ipow(y, 5)*lens_ipow(dx, 2) + -0.000442067 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -3.10694e-08 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx*dy + 8.9558e-12 *lens_ipow(x, 6)*lens_ipow(y, 3) + 1.00562e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*lens_ipow(lambda, 3) + 0.966882 *dy*lens_ipow(lambda, 10) + 12347.6 *lens_ipow(dx, 2)*lens_ipow(dy, 9) + 2639.39 *lens_ipow(dx, 6)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 0.0306743 *y*lens_ipow(lambda, 10) + 5.37018e-15 *lens_ipow(y, 11) + -1.09944e-10 *x*lens_ipow(y, 8)*dx*dy + -0.000674305 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + 6.14979e-14 *lens_ipow(x, 2)*lens_ipow(y, 9);
const float out_transmittance =  + 0.526804  + 0.28406 *lambda + 1.50159e-05 *dx + -8.97658e-08 *x + -0.0359058 *lens_ipow(dy, 2) + -2.93414e-05 *dx*dy + -0.0363638 *lens_ipow(dx, 2) + -0.00151568 *y*dy + -2.25391e-05 *lens_ipow(y, 2) + -7.0025e-06 *x*dy + -0.00150093 *x*dx + -2.4183e-07 *x*y + -2.10689e-05 *lens_ipow(x, 2) + -0.237481 *lens_ipow(lambda, 3) + -0.478638 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0146816 *y*lens_ipow(dx, 2)*dy + -0.0145451 *x*dx*lens_ipow(dy, 2) + -0.000609004 *x*y*dx*dy + 1.33809e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.627831 *lens_ipow(dy, 6) + -0.976015 *lens_ipow(dx, 6) + 9.19175e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.000216516 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + 6.5471e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -2.64282e-09 *lens_ipow(x, 2)*lens_ipow(y, 4) + 1.64883e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -1.90704e-09 *lens_ipow(x, 4)*lens_ipow(y, 2) + -6.76196e-10 *lens_ipow(x, 6) + -4.23661e-12 *lens_ipow(y, 8) + 0.215885 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + -0.000749231 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000263777 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 3) + -6.66562e-05 *lens_ipow(x, 4)*lens_ipow(dy, 4) + 6.70826e-08 *lens_ipow(x, 5)*y*dx*dy + -0.00153515 *lens_ipow(y, 4)*lens_ipow(dx, 6) + 0.00503066 *x*lens_ipow(y, 3)*lens_ipow(dx, 5)*dy + 2.96613e-05 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 4) + 3.01551e-09 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*dy + 6.91193e-05 *lens_ipow(x, 4)*y*lens_ipow(dx, 4)*dy + 0.430417 *lens_ipow(lambda, 11);
