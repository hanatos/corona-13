const float out_x =  + -0.000310249  + 15.983 *dx + -1.82627 *x + 0.000854024 *y*dx + 28.0752 *dx*lens_ipow(dy, 2) + 27.6115 *lens_ipow(dx, 3) + 1.58758 *y*dx*dy + 0.0523987 *lens_ipow(y, 2)*dx + 1.44199e-06 *lens_ipow(y, 3) + 0.859651 *x*lens_ipow(dy, 2) + 2.4542 *x*lens_ipow(dx, 2) + 0.0583735 *x*y*dy + 0.000158755 *x*y*dx + 0.0031524 *x*lens_ipow(y, 2) + 0.11186 *lens_ipow(x, 2)*dx + 0.00320021 *lens_ipow(x, 3) + 0.000929252 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.287397 *x*lens_ipow(lambda, 4) + 1.42363 *x*lens_ipow(dx, 4) + -0.315245 *x*y*lens_ipow(dx, 2)*dy + 0.00797403 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.010072 *lens_ipow(x, 2)*y*dx*dy + 0.00402744 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 59.486 *lens_ipow(dx, 5)*lens_ipow(lambda, 2) + 2.20592 *lens_ipow(y, 2)*lens_ipow(dx, 5) + 0.00135204 *lens_ipow(y, 4)*lens_ipow(dx, 3) + 1.93719e-05 *lens_ipow(y, 5)*dx*dy + -0.899481 *x*y*lens_ipow(dy, 5) + -28.9797 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -4.85736 *dx*lens_ipow(lambda, 8) + 1752.5 *x*lens_ipow(dx, 2)*lens_ipow(dy, 6) + 0.0983038 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 4) + -5.77033e-10 *lens_ipow(x, 3)*lens_ipow(y, 6) + -1.87231e-09 *lens_ipow(x, 6)*lens_ipow(y, 2)*dx + -3.88332e-10 *lens_ipow(x, 7)*lens_ipow(y, 2) + -7.29392e-11 *lens_ipow(x, 9) + -605284 *lens_ipow(dx, 9)*lens_ipow(dy, 2) + 1.24533 *x*lens_ipow(lambda, 10) + 8.79015e-06 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 2) + 5.95383e-07 *lens_ipow(x, 7)*lens_ipow(dx, 2)*lens_ipow(lambda, 2);
const float out_y =  + 0.000257696  + 16.0201 *dy + -1.82256 *y + 4.4789e-05 *x + -0.0621616 *lens_ipow(dy, 2) + 0.0225652 *lens_ipow(dx, 2) + 26.2104 *lens_ipow(dy, 3) + 28.1415 *lens_ipow(dx, 2)*dy + 2.54778 *y*lens_ipow(dy, 2) + 0.940597 *y*lens_ipow(dx, 2) + 0.113385 *lens_ipow(y, 2)*dy + 0.00322763 *lens_ipow(y, 3) + 1.6031 *x*dx*dy + 0.0599259 *x*y*dx + 0.0514373 *lens_ipow(x, 2)*dy + 0.00325811 *lens_ipow(x, 2)*y + -0.186441 *y*lens_ipow(lambda, 3) + -1.33388 *y*lens_ipow(dy, 4) + 0.00260526 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.146538 *x*y*dx*lens_ipow(dy, 2) + -0.00723343 *x*lens_ipow(y, 2)*dx*dy + 0.00576635 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 0.030025 *lens_ipow(y, 2)*lens_ipow(dy, 4) + 2.94253e-05 *lens_ipow(y, 5)*lens_ipow(dy, 2) + 5.35234 *lens_ipow(x, 2)*lens_ipow(dy, 5) + -4.00482e-08 *lens_ipow(x, 2)*lens_ipow(y, 5) + -0.00472476 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + -2.80148e-08 *lens_ipow(x, 4)*lens_ipow(y, 3) + -1.44855e-08 *lens_ipow(x, 6)*y + -3.23319 *dy*lens_ipow(lambda, 7) + -27.0863 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -8.48723e-11 *lens_ipow(y, 9) + -0.0291065 *x*lens_ipow(y, 3)*lens_ipow(dx, 5) + 0.0659088 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 4)*dy + -4.91574e-10 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy + -877455 *lens_ipow(dx, 2)*lens_ipow(dy, 9) + 0.880054 *y*lens_ipow(lambda, 10) + 0.575924 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 5) + 1.80589e-06 *x*lens_ipow(y, 6)*dx*dy*lens_ipow(lambda, 2) + 27.6283 *lens_ipow(x, 2)*y*lens_ipow(dy, 8);
const float out_dx =  + -5.30802e-06  + -0.339988 *dx + -0.0234805 *x + 1.27792e-07 *lens_ipow(y, 2) + 1.05778e-07 *x*y + 0.41412 *dx*lens_ipow(dy, 2) + 0.468461 *lens_ipow(dx, 3) + 0.0128846 *y*dx*dy + 2.73165e-05 *y*lens_ipow(dx, 2) + 0.000175851 *lens_ipow(y, 2)*dx + 0.00768814 *x*lens_ipow(dx, 2) + -0.000225225 *x*y*dy + -9.86015e-06 *x*lens_ipow(y, 2) + -0.000324731 *lens_ipow(x, 2)*dx + 1.18165e-05 *lens_ipow(x, 3) + -0.0219382 *dx*lens_ipow(lambda, 3) + 0.00505966 *x*lens_ipow(lambda, 3) + 0.00338762 *x*lens_ipow(dy, 2)*lambda + -0.0410086 *y*lens_ipow(dx, 3)*dy + -7.99468e-05 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -0.00312758 *x*y*lens_ipow(dx, 2)*dy + -0.000102466 *lens_ipow(x, 2)*y*dx*dy + -2.12771e-06 *lens_ipow(x, 3)*y*dy + 0.0181023 *lens_ipow(y, 2)*lens_ipow(dx, 5) + -0.000176526 *lens_ipow(x, 3)*lens_ipow(dx, 4) + 1.15588e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -332.645 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + -107.326 *lens_ipow(dx, 9) + 1.85686e-07 *lens_ipow(y, 6)*lens_ipow(dx, 3) + 0.0030712 *lens_ipow(x, 3)*lens_ipow(dy, 6) + -1.6719e-09 *lens_ipow(x, 7)*lens_ipow(dy, 2) + -2.70224e-12 *lens_ipow(x, 7)*lens_ipow(y, 2) + -1.03268e-12 *lens_ipow(x, 9) + 1.09275 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 7) + -4.20637e-08 *lens_ipow(x, 5)*lens_ipow(lambda, 5) + 6.11371e-09 *lens_ipow(x, 7)*lens_ipow(dx, 2)*lambda + -0.0274803 *x*lens_ipow(lambda, 10) + -0.300797 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 6) + -1.78428e-05 *x*lens_ipow(y, 5)*lens_ipow(dx, 4)*dy + 1.55327e-08 *lens_ipow(x, 6)*y*dx*dy*lens_ipow(lambda, 2);
const float out_dy =  + 6.7991e-06  + -0.3394 *dy + 7.91718e-06 *dx + -0.0234193 *y + -0.000458752 *lens_ipow(dy, 2) + -0.000271803 *dx*dy + 0.445768 *lens_ipow(dy, 3) + -0.00481802 *dx*lens_ipow(dy, 2) + 0.47657 *lens_ipow(dx, 2)*dy + 0.00672364 *y*lens_ipow(dy, 2) + -0.00635551 *y*lens_ipow(dx, 2) + -0.000380371 *lens_ipow(y, 2)*dy + 1.04339e-05 *lens_ipow(y, 3) + 0.00698629 *x*dx*dy + 2.60451e-06 *x*y*dy + -0.000159778 *x*y*dx + -0.000385757 *lens_ipow(x, 2)*dy + 3.2724e-05 *lens_ipow(x, 2)*y + -0.019918 *dy*lens_ipow(lambda, 3) + 0.00504652 *y*lens_ipow(lambda, 3) + 3.03038e-05 *x*y*dx*dy + 0.00219344 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 2.785e-06 *x*y*dx*lens_ipow(dy, 2) + -0.000631056 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 1.495e-05 *lens_ipow(y, 3)*lens_ipow(dy, 4) + 0.000604946 *lens_ipow(y, 3)*lens_ipow(dx, 4) + -0.00039787 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -0.000123592 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + 2.55486e-05 *lens_ipow(x, 4)*lens_ipow(dy, 3) + -4.67359e-10 *lens_ipow(x, 6)*y + -8.98971e-13 *lens_ipow(y, 9) + 9.16997e-09 *x*lens_ipow(y, 6)*dx*dy + 1.61859e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 4) + -1.43523e-11 *lens_ipow(x, 4)*lens_ipow(y, 5) + 3.67314e-09 *lens_ipow(y, 7)*lens_ipow(dy, 2)*lambda + -19009.3 *lens_ipow(dx, 4)*lens_ipow(dy, 7) + -0.0279742 *y*lens_ipow(lambda, 10) + -0.187182 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 6) + -0.0169279 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 1.84573e-12 *lens_ipow(x, 2)*lens_ipow(y, 8)*dy;
const float out_transmittance =  + 0.129885  + 0.248005 *lambda + 3.57585e-05 *dy + -1.40242e-07 *x + -0.068668 *lens_ipow(dy, 2) + -0.0733207 *lens_ipow(dx, 2) + -0.00206827 *y*dy + -2.11968e-05 *lens_ipow(y, 2) + -0.00111004 *x*dx + -2.37676e-05 *lens_ipow(x, 2) + -0.203461 *lens_ipow(lambda, 3) + -0.00279243 *dx*lens_ipow(dy, 3) + 0.00054382 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.0524655 *x*dx*lens_ipow(dy, 2) + -0.0506835 *x*lens_ipow(dx, 3) + -0.00136887 *x*y*dx*dy + -2.33081e-06 *x*lens_ipow(y, 2)*dx + -27.7461 *lens_ipow(dy, 6) + -126.87 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -97.9595 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -30.0263 *lens_ipow(dx, 6) + -2.45605 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.00988784 *lens_ipow(y, 2)*lens_ipow(dx, 4) + 1.1727e-07 *lens_ipow(y, 5)*dy + 0.0609999 *x*y*dx*lens_ipow(dy, 3) + 0.0857349 *x*y*lens_ipow(dx, 3)*dy + 1.83636e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -0.00029967 *lens_ipow(x, 3)*lens_ipow(dx, 3) + 5.8476e-10 *lens_ipow(x, 6) + 0.181625 *lens_ipow(y, 2)*lens_ipow(dy, 6) + 4.07238e-08 *lens_ipow(y, 6)*lens_ipow(dx, 2) + 1.33942e-05 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + -0.0687281 *lens_ipow(x, 2)*lens_ipow(dy, 6) + -0.00120613 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000215987 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.42463e-05 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*dy + -1.66406e-08 *lens_ipow(x, 6)*lens_ipow(dy, 2) + -8.78769e-08 *lens_ipow(x, 6)*lens_ipow(dx, 2) + -0.010715 *lens_ipow(y, 3)*lens_ipow(dx, 6)*dy + 0.361629 *lens_ipow(lambda, 11);
