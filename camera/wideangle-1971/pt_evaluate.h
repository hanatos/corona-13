const float out_x =  + 0.00020339  + 97.9694 *dx + -5.56572e-07 *y + -0.15792 *x + 0.000131035 *y*dy + 0.000216653 *x*dx + -2.83842e-06 *x*y + -40.4004 *dx*lens_ipow(dy, 2) + -39.7916 *lens_ipow(dx, 3) + 0.291008 *y*dx*dy + 0.00516604 *lens_ipow(y, 2)*dx + 0.555742 *x*lens_ipow(dy, 2) + 0.825372 *x*lens_ipow(dx, 2) + 0.00822883 *x*y*dy + -2.0305e-05 *x*y*dx + 5.87607e-05 *x*lens_ipow(y, 2) + 0.00976077 *lens_ipow(x, 2)*dx + 5.80578e-05 *lens_ipow(x, 3) + 8.80202 *dx*lens_ipow(lambda, 3) + -0.00638787 *x*lens_ipow(lambda, 3) + -1.72929e-06 *x*lens_ipow(y, 2)*dy + 0.00727222 *lens_ipow(x, 2)*dx*lambda + -0.00173765 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -7.36847e-06 *lens_ipow(x, 2)*y*dx*dy + 1.43833e-10 *lens_ipow(x, 3)*lens_ipow(y, 2) + -0.898643 *y*dx*dy*lens_ipow(lambda, 3) + 0.105484 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lambda + 35.2561 *x*lens_ipow(dx, 6) + 0.0537127 *x*y*lens_ipow(dy, 5) + -0.310332 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.000105879 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2) + 8.02862e-07 *lens_ipow(x, 5)*lens_ipow(dy, 2) + 8.088e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -106.691 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -195.674 *lens_ipow(dx, 3)*lens_ipow(lambda, 6) + -0.0101361 *x*y*dy*lens_ipow(lambda, 6) + -0.071513 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 7) + -34.997 *dx*lens_ipow(lambda, 10) + -7.11532 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 8) + -0.0036996 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 6);
const float out_y =  + 0.000127718  + 98.0203 *dy + -0.00168766 *dx + -0.157835 *y + -1.27501e-05 *x + -0.0221099 *dx*dy + 9.09981e-05 *y*dx + -0.000177701 *x*dy + -42.5469 *lens_ipow(dy, 3) + -45.2442 *lens_ipow(dx, 2)*dy + 0.874717 *y*lens_ipow(dy, 2) + -0.00332038 *y*dx*dy + 0.55939 *y*lens_ipow(dx, 2) + 0.012835 *lens_ipow(y, 2)*dy + 5.95874e-05 *lens_ipow(y, 3) + 0.216174 *x*dx*dy + -2.88804e-05 *x*y*dy + 0.00812763 *x*y*dx + 0.00505774 *lens_ipow(x, 2)*dy + 5.94187e-05 *lens_ipow(x, 2)*y + 8.76415 *dy*lens_ipow(lambda, 3) + -0.00728182 *y*lens_ipow(lambda, 3) + 0.00624187 *y*lens_ipow(dy, 3) + 0.000459158 *lens_ipow(y, 2)*dy*lambda + 0.0116774 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.00101859 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 2) + -1.03325e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -8.39618e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + -0.943858 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.390514 *x*dx*dy*lens_ipow(lambda, 3) + -5.30612 *y*lens_ipow(dx, 6) + 0.221248 *lens_ipow(y, 2)*lens_ipow(dy, 5) + -2.91859e-09 *x*lens_ipow(y, 5)*dx + -0.00573133 *x*y*dx*lens_ipow(lambda, 6) + 0.155317 *x*y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -32.9113 *dy*lens_ipow(lambda, 9) + -1352.65 *lens_ipow(dy, 5)*lens_ipow(lambda, 5) + -1782.48 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -0.033834 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 8) + -6.96656e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 6);
const float out_dx =  + -1.04483 *dx + -0.00852243 *x + -0.103975 *dx*lens_ipow(dy, 2) + 0.46888 *lens_ipow(dx, 3) + 0.00125944 *y*dx*dy + 6.29858e-06 *lens_ipow(y, 2)*dx + -0.00444794 *x*lens_ipow(dy, 2) + -7.06817e-05 *x*y*dy + -2.23936e-07 *x*lens_ipow(y, 2) + -7.42772e-05 *lens_ipow(x, 2)*dx + -2.1259e-07 *lens_ipow(x, 3) + 0.00082206 *x*lens_ipow(lambda, 3) + -0.004355 *x*lens_ipow(lambda, 10);
const float out_dy =  + -1.04491 *dy + -0.00852134 *y + 0.466359 *lens_ipow(dy, 3) + 1.01739 *lens_ipow(dx, 2)*dy + -0.0060394 *y*lens_ipow(dx, 2) + -7.35944e-05 *lens_ipow(y, 2)*dy + -2.10827e-07 *lens_ipow(y, 3) + 0.00879264 *x*dx*dy + -8.10567e-05 *x*y*dx + -6.06527e-06 *lens_ipow(x, 2)*dy + -2.08789e-07 *lens_ipow(x, 2)*y + 0.000812826 *y*lens_ipow(lambda, 3) + -0.00428298 *y*lens_ipow(lambda, 10);
const float out_transmittance =  + 0.250918  + 0.300065 *lambda + -3.43167e-05 *dx + 5.94618e-08 *y + -1.76384e-07 *x + -0.0491003 *lens_ipow(dy, 2) + -0.0501791 *lens_ipow(dx, 2) + -0.000258008 *y*dy + -1.41015e-06 *lens_ipow(y, 2) + -0.000202527 *x*dx + -7.67748e-07 *lens_ipow(x, 2) + -0.247432 *lens_ipow(lambda, 3) + -0.0273995 *y*lens_ipow(dy, 3) + -0.0135167 *y*lens_ipow(dx, 2)*dy + -0.000264022 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -9.7489e-07 *lens_ipow(y, 3)*dy + -0.0256067 *x*dx*lens_ipow(dy, 2) + -0.0326559 *x*lens_ipow(dx, 3) + -0.000397084 *x*y*dx*dy + -1.02748e-06 *x*lens_ipow(y, 2)*dx + -7.4779e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.000311522 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -1.11454e-06 *lens_ipow(x, 2)*y*dy + -9.93961e-07 *lens_ipow(x, 3)*dx + -26.2272 *lens_ipow(dy, 6) + -64.7721 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -92.9345 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -28.0047 *lens_ipow(dx, 6) + -0.767965 *y*lens_ipow(dx, 4)*dy + -0.0030545 *lens_ipow(y, 2)*lens_ipow(dx, 4) + -1.58875e-05 *lens_ipow(y, 3)*lens_ipow(dy, 3) + 0.00532933 *x*y*dx*lens_ipow(dy, 3) + -6.12124e-08 *x*lens_ipow(y, 3)*dx*dy + 6.46381e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.69391e-11 *lens_ipow(x, 2)*lens_ipow(y, 4) + -1.62917e-05 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + -2.05514e-05 *lens_ipow(x, 3)*lens_ipow(dx, 3) + -6.76989e-12 *lens_ipow(x, 6) + -2.60409e-06 *lens_ipow(x, 4)*lens_ipow(dy, 4) + 0.438506 *lens_ipow(lambda, 11);
