const float out_x =  + 4.29068e-05  + 131.941 *dx + 1.47919e-06 *y + 0.760868 *x + -0.00248268 *lens_ipow(dy, 2) + 3.05647e-05 *x*dy + 6.79418e-05 *x*dx + -5.21674e-07 *x*y + 4.33109e-07 *lens_ipow(x, 2) + 31.7351 *dx*lens_ipow(dy, 2) + 32.225 *lens_ipow(dx, 3) + 1.28139 *y*dx*dy + 0.00677532 *lens_ipow(y, 2)*dx + 0.721853 *x*lens_ipow(dy, 2) + 2.03673 *x*lens_ipow(dx, 2) + 0.0146307 *x*y*dy + 6.14833e-05 *x*lens_ipow(y, 2) + 0.0215743 *lens_ipow(x, 2)*dx + 6.19039e-05 *lens_ipow(x, 3) + -0.0115372 *x*lens_ipow(lambda, 3) + -4.70837e-07 *x*lens_ipow(y, 2)*dy + 0.12077 *dx*lens_ipow(lambda, 4) + 4.08016e-05 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + -5.33215e-10 *lens_ipow(x, 3)*lens_ipow(y, 2) + -0.359659 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 9.11649e-10 *x*lens_ipow(y, 5)*dy + 0.20722 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.10681 *lens_ipow(x, 2)*lens_ipow(dx, 5) + 0.000134914 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + 6.65254e-08 *lens_ipow(x, 5)*lens_ipow(dy, 2) + 1.41142e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -0.00128574 *x*y*dy*lens_ipow(lambda, 5) + -0.00393656 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 5) + -555.619 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.783692 *lens_ipow(y, 2)*lens_ipow(dx, 7) + -462.046 *lens_ipow(dx, 5)*lens_ipow(lambda, 5) + -2.75031 *x*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -3.30349e-08 *lens_ipow(x, 5)*lens_ipow(lambda, 5) + -10.5193 *y*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 6) + 0.0659771 *x*lens_ipow(lambda, 10);
const float out_y =  + 4.77201e-05  + 131.943 *dy + 0.760961 *y + 4.46534e-07 *x + 2.72166e-05 *y*dx + -6.26592e-07 *lens_ipow(y, 2) + 3.04161e-05 *x*dx + 4.35454e-07 *x*y + 32.3847 *lens_ipow(dy, 3) + 32.0399 *lens_ipow(dx, 2)*dy + 2.03225 *y*lens_ipow(dy, 2) + 0.725552 *y*lens_ipow(dx, 2) + 0.021516 *lens_ipow(y, 2)*dy + 6.14628e-05 *lens_ipow(y, 3) + 1.29155 *x*dx*dy + 0.0147175 *x*y*dx + 0.00679404 *lens_ipow(x, 2)*dy + 6.12551e-05 *lens_ipow(x, 2)*y + -0.0119604 *y*lens_ipow(lambda, 3) + 3.7335e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.0743001 *dy*lens_ipow(lambda, 4) + 7.39082e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + 2.34632e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + -0.30367 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.0510535 *lens_ipow(y, 2)*lens_ipow(dy, 5) + -8.41132 *x*lens_ipow(dx, 5)*dy + -0.00171867 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 1.41059e-09 *lens_ipow(x, 5)*y*dx + -0.00326215 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 5) + -0.00247691 *x*y*dx*lens_ipow(lambda, 5) + -7.73829e-05 *lens_ipow(x, 3)*dx*dy*lens_ipow(lambda, 3) + -265.517 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + -3.7727 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 4) + 4.10599e-06 *lens_ipow(y, 5)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -557.907 *lens_ipow(dx, 4)*dy*lens_ipow(lambda, 5) + -4.06703e-05 *lens_ipow(x, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + 0.0658052 *y*lens_ipow(lambda, 10) + 1055.34 *y*lens_ipow(dx, 10) + -0.512701 *x*dx*dy*lens_ipow(lambda, 8) + -5.85707e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 6);
const float out_dx =  + -8.6932e-07  + 1.09885 *dx + -1.26279e-06 *y + -0.00132365 *x + 0.0012265 *lens_ipow(dx, 2) + -5.36823e-08 *lens_ipow(y, 2) + 2.23365e-05 *x*dx + -2.97453e-08 *x*y + 1.05093e-07 *lens_ipow(x, 2) + 3.24245 *dx*lens_ipow(dy, 2) + 3.28285 *lens_ipow(dx, 3) + 0.0480135 *y*dx*dy + 0.000211836 *lens_ipow(y, 2)*dx + 0.0239438 *x*lens_ipow(dy, 2) + 0.0740722 *x*lens_ipow(dx, 2) + 0.00041325 *x*y*dy + 3.61309e-07 *x*y*dx + 1.75436e-06 *x*lens_ipow(y, 2) + 0.000644108 *lens_ipow(x, 2)*dx + 1.82361e-06 *lens_ipow(x, 3) + -0.473722 *dx*lens_ipow(lambda, 3) + -4.40139e-08 *lens_ipow(x, 2)*y*dy + 0.000136754 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 3.49091e-11 *lens_ipow(y, 5) + -0.00442241 *x*lens_ipow(lambda, 4) + -4.02563e-06 *lens_ipow(x, 2)*y*dx*dy + -12.8953 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + -0.000280941 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.0129486 *lens_ipow(x, 2)*lens_ipow(dx, 5) + -1.69778e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -8.4809e-11 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + -31.1988 *lens_ipow(dx, 5)*lens_ipow(lambda, 3) + -0.0171254 *y*dx*dy*lens_ipow(lambda, 5) + -0.0481691 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 5) + -30.853 *dx*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -6.45788e-07 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 4) + -1.21974 *x*lens_ipow(dy, 6)*lens_ipow(lambda, 3) + 2.47465 *dx*lens_ipow(lambda, 10) + 0.0223832 *x*lens_ipow(lambda, 10) + -6.84023e-12 *lens_ipow(x, 7)*lens_ipow(lambda, 4);
const float out_dy =  + 9.58992e-06  + 1.10012 *dy + -2.3823e-05 *dx + -0.00132423 *y + 1.87268e-06 *x + -0.000838678 *lens_ipow(dy, 2) + -1.64542e-05 *y*dy + -1.24193e-07 *lens_ipow(y, 2) + 1.20334e-05 *x*dy + 4.17942e-08 *x*y + 3.16362 *lens_ipow(dy, 3) + 3.32107 *lens_ipow(dx, 2)*dy + 0.0723735 *y*lens_ipow(dy, 2) + 0.0244675 *y*lens_ipow(dx, 2) + 0.000624062 *lens_ipow(y, 2)*dy + 1.82553e-06 *lens_ipow(y, 3) + 0.0488996 *x*dx*dy + 0.00042194 *x*y*dx + 0.000212792 *lens_ipow(x, 2)*dy + 1.79653e-06 *lens_ipow(x, 2)*y + -1.07738e-08 *lens_ipow(x, 3) + -0.477853 *dy*lens_ipow(lambda, 3) + 8.06506e-06 *lens_ipow(x, 2)*dx*dy + -0.00445144 *y*lens_ipow(lambda, 4) + 0.000710439 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -2.44116e-06 *x*lens_ipow(y, 2)*dx*dy + 0.000131075 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -14.8966 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + -0.000353754 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -7.28148e-07 *lens_ipow(x, 3)*y*lens_ipow(dx, 3) + -28.0094 *lens_ipow(dx, 4)*dy*lens_ipow(lambda, 3) + -0.0164122 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -0.16416 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 3) + -0.0279546 *x*dx*dy*lens_ipow(lambda, 5) + -2.18418e-12 *lens_ipow(x, 2)*lens_ipow(y, 5)*lambda + -203.867 *lens_ipow(dy, 7)*lens_ipow(lambda, 2) + -0.000223086 *x*y*dx*lens_ipow(lambda, 6) + -8.89977e-10 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy*lens_ipow(lambda, 2) + 2.47058 *dy*lens_ipow(lambda, 10) + 0.021674 *y*lens_ipow(lambda, 10);
const float out_transmittance =  + 0.553499  + 0.236684 *lambda + -2.80591e-05 *dx + 7.41546e-08 *y + -1.3086e-07 *x + -0.0459752 *lens_ipow(dy, 2) + -0.04312 *lens_ipow(dx, 2) + -0.000136496 *y*dy + -1.15138e-06 *lens_ipow(y, 2) + -0.000134304 *x*dx + -1.0243e-06 *lens_ipow(x, 2) + -0.197606 *lens_ipow(lambda, 3) + -0.0298565 *y*lens_ipow(dy, 3) + -0.0331792 *y*lens_ipow(dx, 2)*dy + -0.000257306 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -7.84179e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.05522e-06 *lens_ipow(y, 3)*dy + -0.0263453 *x*dx*lens_ipow(dy, 2) + -0.0323309 *x*lens_ipow(dx, 3) + -0.000360829 *x*y*dx*dy + -1.34622e-06 *x*lens_ipow(y, 2)*dx + -0.000275706 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -1.11259e-06 *lens_ipow(x, 2)*y*dy + -1.08364e-06 *lens_ipow(x, 3)*dx + -23.9395 *lens_ipow(dy, 6) + -93.9853 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -84.9556 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -29.9 *lens_ipow(dx, 6) + -1.12814e-05 *lens_ipow(y, 3)*lens_ipow(dy, 3) + 0.00447409 *x*y*dx*lens_ipow(dy, 3) + 1.40578e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + -1.07558e-07 *x*lens_ipow(y, 3)*dx*dy + -0.00249888 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -1.81183e-11 *lens_ipow(x, 2)*lens_ipow(y, 4) + -1.64844e-05 *lens_ipow(x, 3)*lens_ipow(dx, 3) + -7.48375e-12 *lens_ipow(x, 6) + 8.83009e-08 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*dy + -524.018 *x*lens_ipow(dx, 3)*lens_ipow(dy, 6) + 2.75165 *x*y*lens_ipow(dx, 7)*dy + 0.35576 *lens_ipow(lambda, 11);
