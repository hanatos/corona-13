const float out_x =  + 3.57824e-05  + -0.000738553 *dy + 99.8266 *dx + -1.0987e-05 *y + 0.605699 *x + 7.96105e-05 *y*dx + -1.08198e-06 *lens_ipow(x, 2) + -41.9148 *dx*lens_ipow(dy, 2) + -42.1087 *lens_ipow(dx, 3) + 0.146465 *y*dx*dy + 0.00572308 *lens_ipow(y, 2)*dx + 1.64385 *x*lens_ipow(dy, 2) + 1.84917 *x*lens_ipow(dx, 2) + 0.03206 *x*y*dy + 0.000140864 *x*lens_ipow(y, 2) + 0.0382372 *lens_ipow(x, 2)*dx + 0.000143118 *lens_ipow(x, 3) + -0.857765 *dx*lens_ipow(lambda, 3) + 0.016462 *x*lens_ipow(lambda, 3) + -0.00339212 *x*lens_ipow(dx, 2)*dy + -0.00590154 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -1.22627 *x*lens_ipow(dx, 4) + 0.000250239 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.016667 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 0.000168585 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -0.00331118 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 3) + 1157.76 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + 1067.54 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + -9.31094 *x*lens_ipow(dy, 6) + 0.00104677 *lens_ipow(x, 2)*y*dx*dy*lens_ipow(lambda, 2) + 7.47849e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2) + 1545.65 *lens_ipow(dx, 9) + -1.35394e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -1.89948e-13 *lens_ipow(x, 3)*lens_ipow(y, 6) + 59.6789 *lens_ipow(dx, 3)*lens_ipow(lambda, 8) + 841.341 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -0.109802 *x*lens_ipow(lambda, 10) + 0.938236 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -3.05705e-10 *lens_ipow(x, 7)*lens_ipow(lambda, 4) + -6.07755e-16 *lens_ipow(x, 9)*lens_ipow(y, 2);
const float out_y =  + 9.90496e-05  + 99.8135 *dy + -0.00053149 *dx + 0.605436 *y + -8.93651e-06 *x + -6.5863e-05 *y*dy + -0.00012153 *y*dx + -1.02243e-06 *lens_ipow(x, 2) + -40.7404 *lens_ipow(dy, 3) + -40.8957 *lens_ipow(dx, 2)*dy + 1.824 *y*lens_ipow(dy, 2) + 1.65697 *y*lens_ipow(dx, 2) + 0.0377848 *lens_ipow(y, 2)*dy + 0.000143157 *lens_ipow(y, 3) + 0.153398 *x*dx*dy + 0.0321332 *x*y*dx + 0.00566336 *lens_ipow(x, 2)*dy + 0.000141816 *lens_ipow(x, 2)*y + -0.911193 *dy*lens_ipow(lambda, 3) + 0.0183986 *y*lens_ipow(lambda, 3) + -9.86841e-09 *lens_ipow(x, 3)*y + 0.000268796 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + 1814.93 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 74.1741 *lens_ipow(dx, 6)*dy + -26.4905 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -8.97259 *y*lens_ipow(dx, 6) + 2.7683e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2) + 0.000985967 *x*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 2) + 4.26282e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2) + 9.63828e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2)*lambda + 5586.43 *lens_ipow(dy, 9) + -0.000590894 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -2.98269e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -5.7029e-14 *lens_ipow(x, 8)*y + 345.792 *lens_ipow(dy, 5)*lens_ipow(lambda, 6) + 40.2467 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 8) + 4862.43 *lens_ipow(dx, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + -0.121469 *y*lens_ipow(lambda, 10) + -3.09589e-16 *lens_ipow(y, 11) + -1.14237e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 6);
const float out_dx =  + 3.25265e-06  + -3.01705 *dx + -0.0283114 *x + 1.2233e-06 *y*dx + 4.24783e-06 *x*dy + -13.574 *dx*lens_ipow(dy, 2) + 1.47213 *lens_ipow(dx, 3) + -0.194055 *y*dx*dy + 2.99784e-05 *y*lens_ipow(dx, 2) + -0.000633603 *lens_ipow(y, 2)*dx + -0.144423 *x*lens_ipow(dy, 2) + -0.00215444 *x*y*dy + -6.64521e-06 *x*lens_ipow(y, 2) + -0.000304989 *lens_ipow(x, 2)*dx + -3.05453e-09 *lens_ipow(x, 2)*y + -7.11419e-07 *lens_ipow(x, 3) + 0.0527755 *dx*lens_ipow(lambda, 3) + -0.000553874 *x*lens_ipow(lambda, 3) + 24.6355 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.156289 *y*lens_ipow(dx, 3)*dy + 0.355106 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -9.45375e-06 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -6.0458e-05 *lens_ipow(x, 2)*y*dx*dy*lambda + 8.49777 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -10.1953 *lens_ipow(dx, 7) + 7.40852e-09 *lens_ipow(y, 5)*dx*dy + 1.75944 *x*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -7.51738e-09 *lens_ipow(x, 5)*lens_ipow(dx, 2) + 4.19359e-12 *lens_ipow(x, 5)*lens_ipow(y, 2) + 0.00150818 *lens_ipow(y, 2)*lens_ipow(dx, 5)*dy + -0.000989735 *x*y*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -200.905 *dx*lens_ipow(dy, 8) + 1411.34 *lens_ipow(dx, 5)*lens_ipow(dy, 4) + 2.6539 *y*lens_ipow(dx, 7)*dy + -0.00155857 *lens_ipow(x, 3)*lens_ipow(dy, 6) + 0.00216962 *x*lens_ipow(lambda, 9) + -0.00847727 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 5) + -4.1094e-12 *x*lens_ipow(y, 6)*lens_ipow(lambda, 3) + -0.263838 *dx*lens_ipow(lambda, 10) + -147.48 *y*lens_ipow(dx, 3)*lens_ipow(dy, 7);
const float out_dy =  + -1.2588e-06  + -3.02037 *dy + -0.0283463 *y + 9.43668e-05 *dx*dy + 1.66539 *lens_ipow(dy, 3) + 16.1687 *lens_ipow(dx, 2)*dy + 0.00512201 *y*lens_ipow(dy, 2) + 0.0484138 *y*lens_ipow(dx, 2) + -0.000264296 *lens_ipow(y, 2)*dy + -6.2588e-07 *lens_ipow(y, 3) + 0.282896 *x*dx*dy + 0.000934146 *x*y*dx + 0.00119969 *lens_ipow(x, 2)*dy + 5.19818e-06 *lens_ipow(x, 2)*y + 0.0513824 *dy*lens_ipow(lambda, 3) + 0.00469586 *lens_ipow(dy, 4) + -0.000578779 *y*lens_ipow(lambda, 3) + -1.79804e-06 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 6.05946 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.00089896 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.00153996 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 1.8331e-05 *lens_ipow(x, 3)*dx*dy + 4.649 *x*dx*lens_ipow(dy, 5) + 7.03767e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 5.36639e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.000628749 *lens_ipow(x, 3)*lens_ipow(dx, 3)*dy + -1.04774e-07 *x*lens_ipow(y, 4)*dx*dy*lambda + -0.111071 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 6) + -1829.95 *lens_ipow(dx, 8)*dy + 0.842426 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 5) + -1.37127e-12 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx + 1.21327e-13 *lens_ipow(x, 8)*dy + 0.00225536 *y*lens_ipow(lambda, 9) + -0.268601 *dy*lens_ipow(lambda, 10) + -629.69 *lens_ipow(dy, 11) + 4.34141 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -44.2499 *y*lens_ipow(dx, 10) + -0.00185038 *lens_ipow(y, 4)*lens_ipow(dx, 4)*lens_ipow(dy, 3) + 0.000689258 *lens_ipow(x, 4)*lens_ipow(dy, 7) + 2.64486e-09 *lens_ipow(x, 7)*dx*lens_ipow(dy, 3);
const float out_transmittance =  + 0.428598  + 0.32616 *lambda + 0.000118095 *dx + -1.83399e-07 *y + -0.187444 *lens_ipow(dy, 2) + -9.06988e-05 *dx*dy + -0.186345 *lens_ipow(dx, 2) + -0.00319088 *y*dy + 6.31783e-06 *y*dx + -1.59167e-05 *lens_ipow(y, 2) + -0.00329846 *x*dx + 8.81241e-08 *x*y + -1.50958e-05 *lens_ipow(x, 2) + -0.271441 *lens_ipow(lambda, 3) + -4.93076e-07 *lens_ipow(x, 2)*dx + -0.0426696 *y*lens_ipow(dy, 3) + -0.021322 *y*lens_ipow(dx, 2)*dy + -0.000418085 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000130425 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.0536345 *x*lens_ipow(dx, 3) + -0.000263898 *x*y*dx*dy + -0.000136595 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.00057526 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -14.1262 *lens_ipow(dy, 6) + -61.8443 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -21.4287 *lens_ipow(dx, 6) + -0.969031 *y*lens_ipow(dx, 4)*dy + -0.00223949 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 2.53658e-11 *lens_ipow(y, 6) + -0.119997 *x*dx*lens_ipow(dy, 4) + 0.000153991 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + -4.2729e-09 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -0.00018222 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + 6.35724e-11 *lens_ipow(x, 4)*lens_ipow(y, 2) + 7.08037e-12 *lens_ipow(x, 6) + -0.180268 *lens_ipow(y, 2)*lens_ipow(dx, 8) + 0.231945 *lens_ipow(x, 2)*lens_ipow(dy, 8) + 9.49451e-05 *lens_ipow(x, 4)*lens_ipow(dx, 6) + -4.23332e-08 *lens_ipow(x, 6)*lens_ipow(dy, 4) + 0.488632 *lens_ipow(lambda, 11);
