const float out_x =  + 6.99327e-05  + -0.000220837 *dy + 70.1915 *dx + 2.35337e-06 *y + 0.649826 *x + -0.00214024 *lens_ipow(dy, 2) + 0.00141685 *dx*dy + -3.11671e-07 *lens_ipow(x, 2) + -47.6158 *dx*lens_ipow(dy, 2) + -47.0819 *lens_ipow(dx, 3) + -0.642025 *y*dx*dy + -0.00128803 *lens_ipow(y, 2)*dx + -0.307546 *x*lens_ipow(dy, 2) + -0.939448 *x*lens_ipow(dx, 2) + -0.00229259 *x*y*dy + -3.36673e-06 *x*lens_ipow(y, 2) + -0.00354134 *lens_ipow(x, 2)*dx + 0.0457515 *x*lens_ipow(lambda, 3) + 5.26863 *dx*lens_ipow(lambda, 4) + 0.000100019 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -0.00546853 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 1.08478e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 6.72408e-07 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + -2.61652e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 3.34266e-09 *lens_ipow(x, 3)*lens_ipow(y, 2) + -1.0192e-08 *lens_ipow(x, 5) + 410.271 *dx*lens_ipow(dy, 6) + 517.796 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + -1.01976e-05 *lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + 3.46222 *x*lens_ipow(dy, 6) + -0.000873307 *x*y*dy*lens_ipow(lambda, 4) + 1.10865e-09 *x*lens_ipow(y, 5)*dy + -0.0722207 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 290.748 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 1892.58 *lens_ipow(dx, 9) + -3.04112e-08 *lens_ipow(x, 6)*lens_ipow(dx, 3) + 6938.21 *lens_ipow(dx, 3)*lens_ipow(dy, 6)*lambda + -25.4932 *dx*lens_ipow(lambda, 10) + -0.240046 *x*lens_ipow(lambda, 10) + -0.00117458 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 6);
const float out_y =  + 0.000247115  + 70.1983 *dy + 0.65015 *y + -2.31752e-06 *x + -0.000697927 *lens_ipow(lambda, 2) + -0.00227363 *dx*dy + -47.5935 *lens_ipow(dy, 3) + -0.018217 *dx*lens_ipow(dy, 2) + -47.6177 *lens_ipow(dx, 2)*dy + -0.954763 *y*lens_ipow(dy, 2) + -0.318851 *y*lens_ipow(dx, 2) + -0.00370718 *lens_ipow(y, 2)*dy + -4.49898e-06 *lens_ipow(y, 3) + -0.645079 *x*dx*dy + -0.00245855 *x*y*dx + -0.00131448 *lens_ipow(x, 2)*dy + -3.97232e-06 *lens_ipow(x, 2)*y + 0.0460686 *y*lens_ipow(lambda, 3) + 5.30077 *dy*lens_ipow(lambda, 4) + -0.00723085 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 2.43739e-06 *lens_ipow(y, 3)*lens_ipow(lambda, 2) + -6.84065e-05 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 2) + 1084.56 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 395.244 *lens_ipow(dx, 6)*dy + 4.18424 *y*lens_ipow(dx, 6) + -2.01855e-05 *lens_ipow(y, 4)*lens_ipow(dy, 3) + 1.86875e-09 *x*lens_ipow(y, 5)*dx + -0.0691823 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 3.83542e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + -1.16144e-05 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -0.0119652 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + 3083.33 *lens_ipow(dy, 9) + 6.90568e-12 *lens_ipow(y, 8)*dy + 1.71906e-12 *lens_ipow(x, 8)*dy + 11101 *lens_ipow(dx, 6)*lens_ipow(dy, 3)*lambda + -25.5174 *dy*lens_ipow(lambda, 10) + -0.247098 *y*lens_ipow(lambda, 10) + -0.00709034 *x*lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 4) + 3.50304e-16 *lens_ipow(x, 2)*lens_ipow(y, 9) + 1.31354e-10 *lens_ipow(x, 5)*lens_ipow(y, 3)*lens_ipow(dx, 3);
const float out_dx =  + 4.36649e-06  + 0.665725 *dx + -5.0903e-08 *y + -0.00812669 *x + 0.00020652 *lens_ipow(dy, 2) + -0.000918814 *lens_ipow(dx, 2) + 8.28468e-06 *y*dx + -2.46735e-08 *lens_ipow(y, 2) + -1.34331e-06 *x*dy + 1.73507 *dx*lens_ipow(dy, 2) + 1.72597 *lens_ipow(dx, 3) + 0.0230546 *y*dx*dy + -7.12384e-05 *y*lens_ipow(dx, 2) + 9.84913e-05 *lens_ipow(y, 2)*dx + 0.0116621 *x*lens_ipow(dy, 2) + 0.0348802 *x*lens_ipow(dx, 2) + 0.000196552 *x*y*dy + -8.71346e-07 *x*y*dx + 2.8143e-07 *x*lens_ipow(y, 2) + 0.000298654 *lens_ipow(x, 2)*dx + 3.59308e-07 *lens_ipow(x, 3) + -0.123221 *dx*lens_ipow(lambda, 3) + -0.000259437 *x*lens_ipow(dx, 3) + 3.80544e-06 *x*y*lens_ipow(dx, 2) + 8.0343e-11 *lens_ipow(x, 3)*lens_ipow(y, 2) + 0.0782513 *y*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2) + 0.00416928 *lens_ipow(y, 2)*lens_ipow(dx, 5) + -3.28396e-09 *lens_ipow(y, 5)*dx*dy + -4.59752e-07 *x*lens_ipow(y, 2)*lens_ipow(lambda, 4) + -1.04929e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 4) + 6.02464e-07 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2) + -4.52223e-09 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -0.000449871 *x*lens_ipow(lambda, 7) + 0.753242 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 1.50278 *lens_ipow(dx, 3)*lens_ipow(lambda, 6) + 0.729667 *x*lens_ipow(dx, 6)*lens_ipow(lambda, 2) + 0.540299 *dx*lens_ipow(lambda, 10) + 1287.61 *lens_ipow(dx, 11) + -0.000281917 *x*y*dy*lens_ipow(lambda, 8) + -0.000603902 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 8);
const float out_dy =  + -1.70166e-06  + 0.663793 *dy + -0.00812472 *y + 1.17108e-07 *x + -1.86085e-06 *y*dy + -2.22912e-08 *x*y + 1.75872 *lens_ipow(dy, 3) + 1.7835 *lens_ipow(dx, 2)*dy + 0.0348281 *y*lens_ipow(dy, 2) + 0.0117789 *y*lens_ipow(dx, 2) + 0.000298311 *lens_ipow(y, 2)*dy + 2.76865e-07 *lens_ipow(y, 3) + 0.024277 *x*dx*dy + 0.000202803 *x*y*dx + 0.000125271 *lens_ipow(x, 2)*dy + 4.0781e-07 *lens_ipow(x, 2)*y + -0.112295 *dy*lens_ipow(lambda, 3) + 0.00564752 *dx*lens_ipow(dy, 3) + -8.75853e-05 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 2) + 7.73145e-11 *lens_ipow(x, 2)*lens_ipow(y, 3) + 0.0382453 *y*lens_ipow(dy, 4)*lambda + -6.59328e-09 *lens_ipow(y, 5)*lens_ipow(dy, 2) + 0.00480622 *lens_ipow(x, 2)*lens_ipow(dy, 5) + -1.55928e-06 *lens_ipow(x, 2)*y*lens_ipow(lambda, 4) + 5.17152e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 2.78368e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -15.2052 *lens_ipow(dx, 6)*dy*lambda + -0.000579155 *y*lens_ipow(lambda, 7) + 0.874929 *x*dx*lens_ipow(dy, 5)*lambda + 1.17577 *lens_ipow(dy, 3)*lens_ipow(lambda, 6) + 8.04592e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -2.24488e-09 *lens_ipow(y, 5)*lens_ipow(lambda, 4) + -0.0244804 *x*dx*dy*lens_ipow(lambda, 6) + 0.490308 *dy*lens_ipow(lambda, 10) + 973.44 *lens_ipow(dy, 11) + -1.13002 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 6) + -0.0684489 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 6) + -0.000488508 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 8) + 6.93841e-18 *lens_ipow(y, 11) + -0.000665633 *x*y*dx*lens_ipow(lambda, 8);
const float out_transmittance =  + 0.63834  + 0.244252 *lambda + 2.46684e-07 *y + -2.18583e-07 *x + -0.105895 *lens_ipow(dy, 2) + -0.102704 *lens_ipow(dx, 2) + -0.00148256 *y*dy + 4.64565e-06 *y*dx + -7.19637e-06 *lens_ipow(y, 2) + -0.00174496 *x*dx + 4.457e-08 *x*y + -7.12082e-06 *lens_ipow(x, 2) + -0.204697 *lens_ipow(lambda, 3) + -1.09793 *lens_ipow(dy, 4) + -1.57552 *lens_ipow(dx, 4) + -0.0305506 *y*lens_ipow(dy, 3) + -0.0302617 *y*lens_ipow(dx, 2)*dy + -0.0212093 *x*dx*lens_ipow(dy, 2) + -0.0368258 *x*lens_ipow(dx, 3) + 3.03914e-06 *x*lens_ipow(y, 2)*dx + 2.44433e-06 *lens_ipow(x, 2)*y*dy + 2.41059e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 3.61954e-06 *lens_ipow(x, 3)*dx + 0.108017 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -67.2313 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -39.1227 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + 9.0123e-09 *lens_ipow(y, 5)*dy + 0.00821537 *x*y*dx*lens_ipow(dy, 3) + -6.50817e-07 *x*lens_ipow(y, 3)*dx*dy + -4.81939e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 4.358e-11 *lens_ipow(x, 2)*lens_ipow(y, 4) + 7.84427e-08 *lens_ipow(x, 4)*lens_ipow(dy, 2) + 4.06107e-11 *lens_ipow(x, 6) + -77.3835 *lens_ipow(dy, 8) + -22.8555 *lens_ipow(dx, 8) + 1.38173e-13 *lens_ipow(y, 8) + 9568.54 *lens_ipow(dx, 4)*lens_ipow(dy, 6) + 0.965508 *lens_ipow(y, 2)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + 4.71672e-05 *lens_ipow(y, 4)*lens_ipow(dy, 6) + 0.3711 *lens_ipow(lambda, 11);
