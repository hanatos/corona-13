//input: scene_[x,y,z] - point in scene, ap_[x,y] - point on aperture
//output: [x,y,dx,dy] point and direction on sensor
#ifndef DEBUG_LOG
#define DEBUG_LOG
#endif
float view[3] =
{
  scene_x,
  scene_y,
  scene_z + lens_outer_pupil_curvature_radius
};
normalise(view);
int error = 0;
if(1 || view[2] >= lens_field_of_view)
{
  const float eps = 1e-8;
  float sqr_err = 1e30, sqr_ap_err = 1e30;
  float prev_sqr_err = 1e32, prev_sqr_ap_err = 1e32;
  for(int k=0;k<100&&(sqr_err>eps||sqr_ap_err>eps)&&error==0;k++)
  {
    prev_sqr_err = sqr_err, prev_sqr_ap_err = sqr_ap_err;
    const float begin_x = x;
    const float begin_y = y;
    const float begin_dx = dx;
    const float begin_dy = dy;
    const float begin_lambda = lambda;
    const float pred_ap[2] = {
       + -8.12453e-05  + 0.000911091 *begin_dy + 198.216 *begin_dx + 0.829483 *begin_x + 0.000260821 *begin_y*begin_dx + 199.292 *begin_dx*lens_ipow(begin_dy, 2) + 202.748 *lens_ipow(begin_dx, 3) + 2.35854 *begin_y*begin_dx*begin_dy + 0.00602257 *lens_ipow(begin_y, 2)*begin_dx + 0.829079 *begin_x*lens_ipow(begin_dy, 2) + 3.18621 *begin_x*lens_ipow(begin_dx, 2) + 0.00934177 *begin_x*begin_y*begin_dy + 2.44959e-05 *begin_x*lens_ipow(begin_y, 2) + 0.0159097 *lens_ipow(begin_x, 2)*begin_dx + 1.24937e-07 *lens_ipow(begin_x, 2)*begin_y + 2.33169e-05 *lens_ipow(begin_x, 3) + 9.01885 *begin_dx*lens_ipow(begin_lambda, 3) + -0.0269557 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 0.0445591 *begin_x*lens_ipow(begin_lambda, 4) + -0.0429779 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -0.000174347 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -0.0206592 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + -0.0462175 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3) + -0.000464986 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + -0.211982 *begin_y*lens_ipow(begin_dx, 5) + -0.000230059 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_lambda + 2175.58 *begin_dx*lens_ipow(begin_dy, 6) + 4983.1 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4) + 6209.88 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + -0.339065 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 4) + -0.160331 *begin_x*begin_y*lens_ipow(begin_dy, 5) + -0.679798 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -6.68873e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + -37.6688 *begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 5) + -47.2747 *lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 5) + -0.000680194 *lens_ipow(begin_y, 3)*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + 18239.3 *lens_ipow(begin_dx, 9) + -41.5475 *begin_dx*lens_ipow(begin_lambda, 10) + -0.20553 *begin_x*lens_ipow(begin_lambda, 10) + 1.19791 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 7)*begin_dy,
       + 9.81663e-05  + 198.201 *begin_dy + 0.82946 *begin_y + 8.079e-06 *begin_x + -0.000117274 *begin_x*begin_dy + 203.019 *lens_ipow(begin_dy, 3) + 199.248 *lens_ipow(begin_dx, 2)*begin_dy + 3.19676 *begin_y*lens_ipow(begin_dy, 2) + 0.829491 *begin_y*lens_ipow(begin_dx, 2) + 0.0159878 *lens_ipow(begin_y, 2)*begin_dy + 2.31989e-05 *lens_ipow(begin_y, 3) + 2.33801 *begin_x*begin_dx*begin_dy + 0.00935804 *begin_x*begin_y*begin_dx + 0.00607021 *lens_ipow(begin_x, 2)*begin_dy + 2.44656e-05 *lens_ipow(begin_x, 2)*begin_y + 9.06814 *begin_dy*lens_ipow(begin_lambda, 3) + 0.0451561 *begin_y*lens_ipow(begin_lambda, 4) + -0.0457117 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -0.0182267 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.043742 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -0.0260825 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.000144031 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 2) + -0.000170775 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2) + 6101.6 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5) + 4852.31 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 3) + 2156.32 *lens_ipow(begin_dx, 6)*begin_dy + -0.408 *begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + -7.055e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -0.631091 *begin_x*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -0.163327 *begin_x*begin_y*lens_ipow(begin_dx, 5) + -0.000953331 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -6.39755e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy + -52.4451 *lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 5) + -40.5936 *lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 5) + 18162.3 *lens_ipow(begin_dy, 9) + -41.2104 *begin_dy*lens_ipow(begin_lambda, 10) + -0.2093 *begin_y*lens_ipow(begin_lambda, 10) + 1.06096 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 7) + -3.94619e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy*lens_ipow(begin_lambda, 4) + -0.00106098 *lens_ipow(begin_x, 3)*begin_dx*begin_dy*lens_ipow(begin_lambda, 6)
    };
    const float delta_ap[] = {ap_x - pred_ap[0], ap_y - pred_ap[1]};
    sqr_ap_err = delta_ap[0]*delta_ap[0]+delta_ap[1]*delta_ap[1];
    float dx1_domega0[2][2];
    dx1_domega0[0][0] =  + 198.216  + 0.000260821 *begin_y + 199.292 *lens_ipow(begin_dy, 2) + 608.243 *lens_ipow(begin_dx, 2) + 2.35854 *begin_y*begin_dy + 0.00602257 *lens_ipow(begin_y, 2) + 6.37243 *begin_x*begin_dx + 0.0159097 *lens_ipow(begin_x, 2) + 9.01885 *lens_ipow(begin_lambda, 3) + -0.0269557 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -0.0859558 *begin_x*begin_y*begin_dx*begin_dy + -0.0206592 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + -0.138653 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + -0.000464986 *lens_ipow(begin_x, 2)*begin_y*begin_dy + -1.05991 *begin_y*lens_ipow(begin_dx, 4) + -0.000460118 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_lambda + 2175.58 *lens_ipow(begin_dy, 6) + 14949.3 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + 31049.4 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -0.67813 *begin_x*begin_dx*lens_ipow(begin_lambda, 4) + -1.3596 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 3) + -1.33775e-06 *lens_ipow(begin_x, 5)*begin_dx + -37.6688 *lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 5) + -141.824 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 5) + -0.000680194 *lens_ipow(begin_y, 3)*begin_dy*lens_ipow(begin_lambda, 3) + 164154 *lens_ipow(begin_dx, 8) + -41.5475 *lens_ipow(begin_lambda, 10) + 8.38536 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 6)*begin_dy+0.0f;
    dx1_domega0[0][1] =  + 0.000911091  + 398.584 *begin_dx*begin_dy + 2.35854 *begin_y*begin_dx + 1.65816 *begin_x*begin_dy + 0.00934177 *begin_x*begin_y + -0.0539115 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + -0.0429779 *begin_x*begin_y*lens_ipow(begin_dx, 2) + -0.000348694 *begin_x*lens_ipow(begin_y, 2)*begin_dy + -0.0413184 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -0.000464986 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 13053.5 *begin_dx*lens_ipow(begin_dy, 5) + 19932.4 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 12419.8 *lens_ipow(begin_dx, 5)*begin_dy + -0.801654 *begin_x*begin_y*lens_ipow(begin_dy, 4) + -2.0394 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -75.3376 *begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + -0.000680194 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_lambda, 3) + 1.19791 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 7)+0.0f;
    dx1_domega0[1][0] =  + 398.496 *begin_dx*begin_dy + 1.65898 *begin_y*begin_dx + 2.33801 *begin_x*begin_dy + 0.00935804 *begin_x*begin_y + -0.0364535 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + -0.043742 *begin_x*begin_y*lens_ipow(begin_dy, 2) + -0.0521651 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -0.000341549 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 12203.2 *begin_dx*lens_ipow(begin_dy, 5) + 19409.2 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 12937.9 *lens_ipow(begin_dx, 5)*begin_dy + -1.89327 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -0.816636 *begin_x*begin_y*lens_ipow(begin_dx, 4) + -0.000953331 *begin_x*lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 2) + -6.39755e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dy + -81.1871 *begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + 1.06096 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 7) + -0.00106098 *lens_ipow(begin_x, 3)*begin_dy*lens_ipow(begin_lambda, 6)+0.0f;
    dx1_domega0[1][1] =  + 198.201  + -0.000117274 *begin_x + 609.058 *lens_ipow(begin_dy, 2) + 199.248 *lens_ipow(begin_dx, 2) + 6.39351 *begin_y*begin_dy + 0.0159878 *lens_ipow(begin_y, 2) + 2.33801 *begin_x*begin_dx + 0.00607021 *lens_ipow(begin_x, 2) + 9.06814 *lens_ipow(begin_lambda, 3) + -0.137135 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -0.0182267 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.087484 *begin_x*begin_y*begin_dx*begin_dy + -0.0260825 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + -0.000288061 *lens_ipow(begin_x, 2)*begin_y*begin_dy + 30508 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + 14556.9 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 2156.32 *lens_ipow(begin_dx, 6) + -0.816 *begin_y*begin_dy*lens_ipow(begin_lambda, 4) + -1.411e-06 *lens_ipow(begin_y, 5)*begin_dy + -1.26218 *begin_x*begin_y*lens_ipow(begin_dx, 3)*begin_dy + -0.000953331 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 2) + -6.39755e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx + -157.335 *lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 5) + -40.5936 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 5) + 163461 *lens_ipow(begin_dy, 8) + -41.2104 *lens_ipow(begin_lambda, 10) + 7.42671 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 6) + -3.94619e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*lens_ipow(begin_lambda, 4) + -0.00106098 *lens_ipow(begin_x, 3)*begin_dx*lens_ipow(begin_lambda, 6)+0.0f;
    float invApJ[2][2];
    const float invdetap = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
    invApJ[0][0] =  dx1_domega0[1][1]*invdetap;
    invApJ[1][1] =  dx1_domega0[0][0]*invdetap;
    invApJ[0][1] = -dx1_domega0[0][1]*invdetap;
    invApJ[1][0] = -dx1_domega0[1][0]*invdetap;
    for(int i=0;i<2;i++)
    {
      dx += invApJ[0][i]*delta_ap[i];
      dy += invApJ[1][i]*delta_ap[i];
    }
    out[0] =  + -8.78792e-05  + 0.0010333 *begin_dy + 198.202 *begin_dx + 0.829412 *begin_x + 199.455 *begin_dx*lens_ipow(begin_dy, 2) + 202.912 *lens_ipow(begin_dx, 3) + 2.36295 *begin_y*begin_dx*begin_dy + 0.00606609 *lens_ipow(begin_y, 2)*begin_dx + 0.830613 *begin_x*lens_ipow(begin_dy, 2) + 3.19642 *begin_x*lens_ipow(begin_dx, 2) + 0.00934677 *begin_x*begin_y*begin_dy + 2.48919e-05 *begin_x*lens_ipow(begin_y, 2) + 0.0160038 *lens_ipow(begin_x, 2)*begin_dx + 1.40273e-07 *lens_ipow(begin_x, 2)*begin_y + 2.33357e-05 *lens_ipow(begin_x, 3) + 9.05891 *begin_dx*lens_ipow(begin_lambda, 3) + -0.0278715 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 0.0450732 *begin_x*lens_ipow(begin_lambda, 4) + -0.0460424 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -0.000187938 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -0.0216324 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + -0.0467257 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3) + -0.000510077 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + -0.116219 *begin_y*lens_ipow(begin_dx, 5) + -0.000317906 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_lambda + 2183.8 *begin_dx*lens_ipow(begin_dy, 6) + 5028.81 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4) + 6242.97 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + -0.39441 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 4) + -0.165361 *begin_x*begin_y*lens_ipow(begin_dy, 5) + -0.668224 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -6.82251e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + -38.7306 *begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 5) + -50.1468 *lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 5) + -0.000774081 *lens_ipow(begin_y, 3)*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + 18354.3 *lens_ipow(begin_dx, 9) + -1.39778e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 5) + -41.0663 *begin_dx*lens_ipow(begin_lambda, 10) + -0.207047 *begin_x*lens_ipow(begin_lambda, 10) + 1.18104 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 7)*begin_dy;
    out[1] =  + 9.82092e-05  + 198.201 *begin_dy + 0.829461 *begin_y + 8.07839e-06 *begin_x + -0.000117284 *begin_x*begin_dy + 203.03 *lens_ipow(begin_dy, 3) + 199.257 *lens_ipow(begin_dx, 2)*begin_dy + 3.19781 *begin_y*lens_ipow(begin_dy, 2) + 0.830541 *begin_y*lens_ipow(begin_dx, 2) + 0.0159963 *lens_ipow(begin_y, 2)*begin_dy + 2.32165e-05 *lens_ipow(begin_y, 3) + 2.33799 *begin_x*begin_dx*begin_dy + 0.00936665 *begin_x*begin_y*begin_dx + 0.00607003 *lens_ipow(begin_x, 2)*begin_dy + 2.44834e-05 *lens_ipow(begin_x, 2)*begin_y + 9.06631 *begin_dy*lens_ipow(begin_lambda, 3) + 0.0451453 *begin_y*lens_ipow(begin_lambda, 4) + -0.0457221 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -0.0182302 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.0437567 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -0.0260915 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.000144059 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 2) + -0.000170816 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2) + 6103.85 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5) + 4853.99 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 3) + 2157.16 *lens_ipow(begin_dx, 6)*begin_dy + -0.40836 *begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + -7.05586e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -0.631126 *begin_x*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -0.163378 *begin_x*begin_y*lens_ipow(begin_dx, 5) + -0.000953619 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -6.397e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy + -52.496 *lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 5) + -40.6351 *lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 5) + 18169.3 *lens_ipow(begin_dy, 9) + -41.1936 *begin_dy*lens_ipow(begin_lambda, 10) + -0.209237 *begin_y*lens_ipow(begin_lambda, 10) + 1.06111 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 7) + -3.94768e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy*lens_ipow(begin_lambda, 4) + -0.00106243 *lens_ipow(begin_x, 3)*begin_dx*begin_dy*lens_ipow(begin_lambda, 6);
    out[2] =  + -4.18087e-06  + -1.81163e-05 *begin_dy + -0.189868 *begin_dx + -1.40224e-09 *begin_y + -0.00522986 *begin_x + 0.423912 *begin_dx*begin_lambda + -9.12217e-07 *begin_x*begin_dx + -0.449097 *begin_dx*lens_ipow(begin_dy, 2) + -0.448369 *lens_ipow(begin_dx, 3) + 0.00958217 *begin_y*begin_dx*begin_dy + 1.43723e-07 *lens_ipow(begin_y, 2)*begin_dy + 3.59561e-05 *lens_ipow(begin_y, 2)*begin_dx + 0.00482595 *begin_x*lens_ipow(begin_dy, 2) + 0.0143044 *begin_x*lens_ipow(begin_dx, 2) + 9.15003e-05 *begin_x*begin_y*begin_dy + 6.63889e-07 *begin_x*begin_y*begin_dx + 2.86412e-07 *begin_x*lens_ipow(begin_y, 2) + 1.66492e-09 *lens_ipow(begin_x, 2)*begin_y + 2.89902e-07 *lens_ipow(begin_x, 3) + -0.321426 *begin_dx*lens_ipow(begin_lambda, 3) + 0.000269812 *lens_ipow(begin_x, 2)*begin_dx*begin_lambda + 0.00241926 *begin_x*lens_ipow(begin_lambda, 4) + -0.000389136 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -4.84894e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + -0.00172558 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + -1.01755e-06 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_lambda + 1.43021e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 4) + 0.0599273 *begin_x*lens_ipow(begin_dy, 6) + -1.9758e-06 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -7.29671e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + -0.000981824 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + -0.00201873 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 3) + 581.215 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 6) + 413.417 *lens_ipow(begin_dx, 7)*lens_ipow(begin_dy, 2) + 88.1581 *lens_ipow(begin_dx, 9) + -1.79379e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 0.390561 *begin_dx*lens_ipow(begin_lambda, 10) + -0.0116557 *begin_x*lens_ipow(begin_lambda, 10) + -0.0263368 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 8) + -0.00106263 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_lambda, 8);
    out[3] =  + 2.13741e-08  + -0.188606 *begin_dy + -0.00523131 *begin_y + -2.00885e-07 *begin_x + 0.419807 *begin_dy*begin_lambda + 2.27548e-08 *lens_ipow(begin_y, 2) + 9.77605e-08 *begin_x*begin_dy + 1.10443e-06 *begin_x*begin_dx + -0.446393 *lens_ipow(begin_dy, 3) + -0.453972 *lens_ipow(begin_dx, 2)*begin_dy + 0.0143966 *begin_y*lens_ipow(begin_dy, 2) + 2.35894e-06 *begin_y*begin_dx*begin_dy + 0.00487752 *begin_y*lens_ipow(begin_dx, 2) + 1.53296e-07 *lens_ipow(begin_y, 2)*begin_dx + 2.87703e-07 *lens_ipow(begin_y, 3) + 2.30439e-05 *begin_x*lens_ipow(begin_dy, 2) + 0.00930113 *begin_x*begin_dx*begin_dy + 3.26691e-07 *begin_x*begin_y*begin_dy + 9.1843e-05 *begin_x*begin_y*begin_dx + 3.61659e-05 *lens_ipow(begin_x, 2)*begin_dy + 2.73633e-07 *lens_ipow(begin_x, 2)*begin_y + -0.315764 *begin_dy*lens_ipow(begin_lambda, 3) + 2.1832e-05 *begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.000271683 *lens_ipow(begin_y, 2)*begin_dy*begin_lambda + 0.00244379 *begin_y*lens_ipow(begin_lambda, 4) + -0.000356819 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -4.63817e-06 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 0.0548351 *begin_y*lens_ipow(begin_dx, 6) + -7.66846e-09 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -0.00193971 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + -7.35208e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + 84.663 *lens_ipow(begin_dy, 9) + 411.174 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 7) + 572.292 *lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 3) + -0.00272866 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 6) + -2.36697e-06 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2) + 0.385022 *begin_dy*lens_ipow(begin_lambda, 10) + -0.0116209 *begin_y*lens_ipow(begin_lambda, 10) + -0.0312861 *begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 8) + -0.00116012 *lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 8);
    float pred_out_cs[7] = {0.0f};
    lens_sphereToCs(out, out+2, pred_out_cs, pred_out_cs+3, - lens_outer_pupil_curvature_radius, lens_outer_pupil_curvature_radius);
    float view[3] =
    {
      scene_x - pred_out_cs[0],
      scene_y - pred_out_cs[1],
      scene_z - pred_out_cs[2]
    };
    normalise(view);
    float out_new[5];
    lens_csToSphere(pred_out_cs, view, out_new, out_new+2, - lens_outer_pupil_curvature_radius, lens_outer_pupil_curvature_radius);
    const float delta_out[] = {out_new[2] - out[2], out_new[3] - out[3]};
    sqr_err = delta_out[0]*delta_out[0]+delta_out[1]*delta_out[1];
    float domega2_dx0[2][2];
    domega2_dx0[0][0] =  + -0.00522986  + -9.12217e-07 *begin_dx + 0.00482595 *lens_ipow(begin_dy, 2) + 0.0143044 *lens_ipow(begin_dx, 2) + 9.15003e-05 *begin_y*begin_dy + 6.63889e-07 *begin_y*begin_dx + 2.86412e-07 *lens_ipow(begin_y, 2) + 3.32983e-09 *begin_x*begin_y + 8.69705e-07 *lens_ipow(begin_x, 2) + 0.000539624 *begin_x*begin_dx*begin_lambda + 0.00241926 *lens_ipow(begin_lambda, 4) + -0.000389136 *begin_y*lens_ipow(begin_dx, 2)*begin_dy + -9.69789e-06 *begin_x*begin_y*begin_dx*begin_dy + -1.01755e-06 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_lambda + 0.0599273 *lens_ipow(begin_dy, 6) + -1.9758e-06 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -3.64836e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2) + -0.00196365 *begin_x*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + -0.00403746 *begin_x*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 3) + -3.58757e-06 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -0.0116557 *lens_ipow(begin_lambda, 10) + -0.0263368 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 8) + -0.00212527 *begin_x*begin_dx*lens_ipow(begin_lambda, 8)+0.0f;
    domega2_dx0[0][1] =  + -1.40224e-09  + 0.00958217 *begin_dx*begin_dy + 2.87446e-07 *begin_y*begin_dy + 7.19122e-05 *begin_y*begin_dx + 9.15003e-05 *begin_x*begin_dy + 6.63889e-07 *begin_x*begin_dx + 5.72823e-07 *begin_x*begin_y + 1.66492e-09 *lens_ipow(begin_x, 2) + -0.000389136 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + -4.84894e-06 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -0.00172558 *begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + -2.0351e-06 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_lambda + 4.29063e-06 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4) + -3.95161e-06 *begin_x*begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -3.58757e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2)+0.0f;
    domega2_dx0[1][0] =  + -2.00885e-07  + 9.77605e-08 *begin_dy + 1.10443e-06 *begin_dx + 2.30439e-05 *lens_ipow(begin_dy, 2) + 0.00930113 *begin_dx*begin_dy + 3.26691e-07 *begin_y*begin_dy + 9.1843e-05 *begin_y*begin_dx + 7.23317e-05 *begin_x*begin_dy + 5.47266e-07 *begin_x*begin_y + -0.000356819 *begin_y*begin_dx*lens_ipow(begin_dy, 2) + -4.63817e-06 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + -1.47042e-06 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda+0.0f;
    domega2_dx0[1][1] =  + -0.00523131  + 4.55096e-08 *begin_y + 0.0143966 *lens_ipow(begin_dy, 2) + 2.35894e-06 *begin_dx*begin_dy + 0.00487752 *lens_ipow(begin_dx, 2) + 3.06592e-07 *begin_y*begin_dx + 8.63108e-07 *lens_ipow(begin_y, 2) + 3.26691e-07 *begin_x*begin_dy + 9.1843e-05 *begin_x*begin_dx + 2.73633e-07 *lens_ipow(begin_x, 2) + 2.1832e-05 *begin_dx*lens_ipow(begin_dy, 2) + 0.000543367 *begin_y*begin_dy*begin_lambda + 0.00244379 *lens_ipow(begin_lambda, 4) + -0.000356819 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + -9.27634e-06 *begin_x*begin_y*begin_dx*begin_dy + 0.0548351 *lens_ipow(begin_dx, 6) + -3.83423e-08 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2) + -0.00387943 *begin_y*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + -1.47042e-06 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -0.00272866 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 6) + -9.46789e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2) + -0.0116209 *lens_ipow(begin_lambda, 10) + -0.0312861 *lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 8) + -0.00232025 *begin_y*begin_dy*lens_ipow(begin_lambda, 8)+0.0f;
    float invJ[2][2];
    const float invdet = 1.0f/(domega2_dx0[0][0]*domega2_dx0[1][1] - domega2_dx0[0][1]*domega2_dx0[1][0]);
    invJ[0][0] =  domega2_dx0[1][1]*invdet;
    invJ[1][1] =  domega2_dx0[0][0]*invdet;
    invJ[0][1] = -domega2_dx0[0][1]*invdet;
    invJ[1][0] = -domega2_dx0[1][0]*invdet;
    for(int i=0;i<2;i++)
    {
      x += invJ[0][i]*delta_out[i];
      y += invJ[1][i]*delta_out[i];
    }
    if(sqr_err>prev_sqr_err) error |= 1;
    if(sqr_ap_err>prev_sqr_ap_err) error |= 2;
    if(out[0]!=out[0]) error |= 4;
    if(out[1]!=out[1]) error |= 8;
    DEBUG_LOG;
    // reset error code for first few iterations.
    if(k<10) error = 0;
  }
}
else
  error = 128;
if(out[0]*out[0]+out[1]*out[1] > lens_outer_pupil_radius*lens_outer_pupil_radius) error |= 16;
const float begin_x = x;
const float begin_y = y;
const float begin_dx = dx;
const float begin_dy = dy;
const float begin_lambda = lambda;
if(error==0)
  out[4] =  + 0.892315  + 0.0701151 *begin_lambda + 8.16678e-06 *begin_dy + -2.5646e-06 *begin_dx + -4.913e-08 *begin_y + 8.12812e-09 *begin_x + -0.03202 *lens_ipow(begin_dy, 2) + -0.0315851 *lens_ipow(begin_dx, 2) + -7.49318e-05 *begin_y*begin_dy + -2.48916e-07 *lens_ipow(begin_y, 2) + -8.5362e-05 *begin_x*begin_dx + -3.38792e-07 *lens_ipow(begin_x, 2) + -0.0591258 *lens_ipow(begin_lambda, 3) + -1.13245 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -0.0122429 *begin_y*lens_ipow(begin_dy, 3) + -0.0135323 *begin_y*lens_ipow(begin_dx, 2)*begin_dy + -3.73624e-05 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -1.34102e-05 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.0130694 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + -0.012046 *begin_x*lens_ipow(begin_dx, 3) + -7.24146e-05 *begin_x*begin_y*begin_dx*begin_dy + -1.40118e-08 *begin_x*lens_ipow(begin_y, 2)*begin_dx + -3.49854e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + -7.94532e-08 *lens_ipow(begin_x, 2)*begin_y*begin_dy + -1.0206e-08 *lens_ipow(begin_x, 2)*begin_y*begin_dx + -14.1339 *lens_ipow(begin_dy, 6) + -21.5654 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + -19.0159 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -14.4605 *lens_ipow(begin_dx, 6) + -0.000280783 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4) + 0.00779052 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 5) + 0.0119236 *begin_x*begin_y*lens_ipow(begin_dx, 5)*begin_dy + -10.9938 *begin_y*lens_ipow(begin_dy, 9) + -3.08928e-09 *lens_ipow(begin_y, 6)*lens_ipow(begin_dy, 4) + -41.8165 *begin_x*lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 4) + -11.7605 *begin_x*lens_ipow(begin_dx, 9) + 9.12987e-11 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + -3.36981e-09 *lens_ipow(begin_x, 6)*lens_ipow(begin_dx, 4) + 0.107834 *lens_ipow(begin_lambda, 11) + -38.2109 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 7)*begin_lambda;
else
  out[4] = 0.0f;
