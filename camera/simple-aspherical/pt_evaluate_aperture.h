const float out_x =  + -8.12453e-05  + 0.000911091 *dy + 198.216 *dx + 0.829483 *x + 0.000260821 *y*dx + 199.292 *dx*lens_ipow(dy, 2) + 202.748 *lens_ipow(dx, 3) + 2.35854 *y*dx*dy + 0.00602257 *lens_ipow(y, 2)*dx + 0.829079 *x*lens_ipow(dy, 2) + 3.18621 *x*lens_ipow(dx, 2) + 0.00934177 *x*y*dy + 2.44959e-05 *x*lens_ipow(y, 2) + 0.0159097 *lens_ipow(x, 2)*dx + 1.24937e-07 *lens_ipow(x, 2)*y + 2.33169e-05 *lens_ipow(x, 3) + 9.01885 *dx*lens_ipow(lambda, 3) + -0.0269557 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.0445591 *x*lens_ipow(lambda, 4) + -0.0429779 *x*y*lens_ipow(dx, 2)*dy + -0.000174347 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.0206592 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.0462175 *lens_ipow(x, 2)*lens_ipow(dx, 3) + -0.000464986 *lens_ipow(x, 2)*y*dx*dy + -0.211982 *y*lens_ipow(dx, 5) + -0.000230059 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + 2175.58 *dx*lens_ipow(dy, 6) + 4983.1 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + 6209.88 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + -0.339065 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -0.160331 *x*y*lens_ipow(dy, 5) + -0.679798 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -6.68873e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -37.6688 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -47.2747 *lens_ipow(dx, 3)*lens_ipow(lambda, 5) + -0.000680194 *lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 3) + 18239.3 *lens_ipow(dx, 9) + -41.5475 *dx*lens_ipow(lambda, 10) + -0.20553 *x*lens_ipow(lambda, 10) + 1.19791 *lens_ipow(x, 2)*y*lens_ipow(dx, 7)*dy;
const float out_y =  + 9.81663e-05  + 198.201 *dy + 0.82946 *y + 8.079e-06 *x + -0.000117274 *x*dy + 203.019 *lens_ipow(dy, 3) + 199.248 *lens_ipow(dx, 2)*dy + 3.19676 *y*lens_ipow(dy, 2) + 0.829491 *y*lens_ipow(dx, 2) + 0.0159878 *lens_ipow(y, 2)*dy + 2.31989e-05 *lens_ipow(y, 3) + 2.33801 *x*dx*dy + 0.00935804 *x*y*dx + 0.00607021 *lens_ipow(x, 2)*dy + 2.44656e-05 *lens_ipow(x, 2)*y + 9.06814 *dy*lens_ipow(lambda, 3) + 0.0451561 *y*lens_ipow(lambda, 4) + -0.0457117 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -0.0182267 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.043742 *x*y*dx*lens_ipow(dy, 2) + -0.0260825 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -0.000144031 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -0.000170775 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + 6101.6 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 4852.31 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 2156.32 *lens_ipow(dx, 6)*dy + -0.408 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -7.055e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -0.631091 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.163327 *x*y*lens_ipow(dx, 5) + -0.000953331 *x*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 2) + -6.39755e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy + -52.4451 *lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -40.5936 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 5) + 18162.3 *lens_ipow(dy, 9) + -41.2104 *dy*lens_ipow(lambda, 10) + -0.2093 *y*lens_ipow(lambda, 10) + 1.06096 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 7) + -3.94619e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy*lens_ipow(lambda, 4) + -0.00106098 *lens_ipow(x, 3)*dx*dy*lens_ipow(lambda, 6);
const float out_dx =  + -4.49536e-06  + -3.25995e-05 *dy + -0.0517651 *dx + -6.16509e-07 *y + -0.0052278 *x + -0.460396 *dx*lens_ipow(dy, 2) + -0.452101 *lens_ipow(dx, 3) + 0.00938814 *y*dx*dy + 4.14432e-07 *lens_ipow(y, 2)*dy + 3.60217e-05 *lens_ipow(y, 2)*dx + 0.00505714 *x*lens_ipow(dy, 2) + 0.0143396 *x*lens_ipow(dx, 2) + 9.39294e-05 *x*y*dy + 5.91683e-07 *x*y*dx + 2.2259e-07 *x*lens_ipow(y, 2) + 7.2069e-09 *lens_ipow(x, 2)*y + 2.36428e-07 *lens_ipow(x, 3) + 0.281101 *dx*lens_ipow(lambda, 3) + 0.00027694 *lens_ipow(x, 2)*dx*lambda + -9.91916e-05 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.00248041 *x*lens_ipow(lambda, 4) + -0.000494963 *x*y*lens_ipow(dx, 2)*dy + -4.38711e-06 *lens_ipow(x, 2)*y*dx*dy + -0.00174928 *y*lens_ipow(dx, 5) + 10.5182 *dx*lens_ipow(dy, 6) + 20.5008 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + 31.3906 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 4.94399e-06 *lens_ipow(y, 3)*lens_ipow(dx, 4) + -0.00120294 *x*y*lens_ipow(dy, 5) + -1.12464e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 4) + -0.000861726 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.00118595 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -6.09736e-09 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -0.0290002 *y*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 3) + 89.7027 *lens_ipow(dx, 9) + -0.00356106 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -1.38116 *dx*lens_ipow(lambda, 10) + -0.0119907 *x*lens_ipow(lambda, 10) + -0.0212661 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 8) + -0.00120855 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 8);
const float out_dy =  + -1.14516e-06  + -0.0518182 *dy + -0.00522682 *y + -3.74672e-07 *x + 4.25837e-08 *lens_ipow(y, 2) + -4.72128e-06 *x*dy + 2.38432e-06 *x*dx + -0.451699 *lens_ipow(dy, 3) + -0.462198 *lens_ipow(dx, 2)*dy + 0.0143555 *y*lens_ipow(dy, 2) + -2.86649e-05 *y*dx*dy + 0.00495887 *y*lens_ipow(dx, 2) + 2.3188e-07 *lens_ipow(y, 3) + 4.82065e-05 *x*lens_ipow(dy, 2) + 0.0092764 *x*dx*dy + 4.55767e-07 *x*y*dy + 9.33646e-05 *x*y*dx + 3.78189e-05 *lens_ipow(x, 2)*dy + 2.22293e-07 *lens_ipow(x, 2)*y + 0.280513 *dy*lens_ipow(lambda, 3) + 0.000154186 *y*dx*lens_ipow(dy, 2) + 0.000279613 *lens_ipow(y, 2)*dy*lambda + 0.00249751 *y*lens_ipow(lambda, 4) + -0.000451272 *x*y*dx*lens_ipow(dy, 2) + -4.47914e-06 *x*lens_ipow(y, 2)*dx*dy + -0.000136698 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 35.7671 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 11.2207 *lens_ipow(dx, 6)*dy + -0.00126652 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -0.000897379 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -6.96379e-09 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -0.00168473 *x*y*lens_ipow(dx, 5) + -5.0409e-06 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 101.422 *lens_ipow(dy, 9) + 69.6049 *lens_ipow(dx, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -3.00568e-10 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy*lens_ipow(lambda, 3) + -1.38057 *dy*lens_ipow(lambda, 10) + -0.0123033 *y*lens_ipow(lambda, 10) + -0.0218027 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -0.00120058 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 8);
const float out_transmittance =  + 0.892315  + 0.0701151 *lambda + 8.16678e-06 *dy + -2.5646e-06 *dx + -4.913e-08 *y + 8.12812e-09 *x + -0.03202 *lens_ipow(dy, 2) + -0.0315851 *lens_ipow(dx, 2) + -7.49318e-05 *y*dy + -2.48916e-07 *lens_ipow(y, 2) + -8.5362e-05 *x*dx + -3.38792e-07 *lens_ipow(x, 2) + -0.0591258 *lens_ipow(lambda, 3) + -1.13245 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0122429 *y*lens_ipow(dy, 3) + -0.0135323 *y*lens_ipow(dx, 2)*dy + -3.73624e-05 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.34102e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.0130694 *x*dx*lens_ipow(dy, 2) + -0.012046 *x*lens_ipow(dx, 3) + -7.24146e-05 *x*y*dx*dy + -1.40118e-08 *x*lens_ipow(y, 2)*dx + -3.49854e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -7.94532e-08 *lens_ipow(x, 2)*y*dy + -1.0206e-08 *lens_ipow(x, 2)*y*dx + -14.1339 *lens_ipow(dy, 6) + -21.5654 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -19.0159 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -14.4605 *lens_ipow(dx, 6) + -0.000280783 *lens_ipow(x, 2)*lens_ipow(dy, 4) + 0.00779052 *x*y*dx*lens_ipow(dy, 5) + 0.0119236 *x*y*lens_ipow(dx, 5)*dy + -10.9938 *y*lens_ipow(dy, 9) + -3.08928e-09 *lens_ipow(y, 6)*lens_ipow(dy, 4) + -41.8165 *x*lens_ipow(dx, 5)*lens_ipow(dy, 4) + -11.7605 *x*lens_ipow(dx, 9) + 9.12987e-11 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -3.36981e-09 *lens_ipow(x, 6)*lens_ipow(dx, 4) + 0.107834 *lens_ipow(lambda, 11) + -38.2109 *y*lens_ipow(dx, 2)*lens_ipow(dy, 7)*lambda;
