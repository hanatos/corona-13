const float dx00 =  + 0.829412  + 0.830613 *lens_ipow(dy, 2) + 3.19642 *lens_ipow(dx, 2) + 0.00934677 *y*dy + 2.48919e-05 *lens_ipow(y, 2) + 0.0320075 *x*dx + 2.80545e-07 *x*y + 7.00071e-05 *lens_ipow(x, 2) + 0.0450732 *lens_ipow(lambda, 4) + -0.0460424 *y*lens_ipow(dx, 2)*dy + -0.000187938 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.0432649 *x*dx*lens_ipow(dy, 2) + -0.0934514 *x*lens_ipow(dx, 3) + -0.00102015 *x*y*dx*dy + -0.000317906 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.39441 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -0.165361 *y*lens_ipow(dy, 5) + -0.668224 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -3.41126e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -2.79556e-05 *x*lens_ipow(y, 2)*dx*lens_ipow(lambda, 5) + -0.207047 *lens_ipow(lambda, 10) + 2.36208 *x*y*lens_ipow(dx, 7)*dy+0.0f;
const float dx01 =  + 2.36295 *dx*dy + 0.0121322 *y*dx + 0.00934677 *x*dy + 4.97838e-05 *x*y + 1.40273e-07 *lens_ipow(x, 2) + -0.0557429 *y*dx*lens_ipow(dy, 2) + -0.0460424 *x*lens_ipow(dx, 2)*dy + -0.000375876 *x*y*lens_ipow(dy, 2) + -0.000510077 *lens_ipow(x, 2)*dx*dy + -0.116219 *lens_ipow(dx, 5) + -0.000635812 *x*y*lens_ipow(dx, 2)*lambda + -0.165361 *x*lens_ipow(dy, 5) + -0.668224 *x*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.00232224 *lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 3) + -2.79556e-05 *lens_ipow(x, 2)*y*dx*lens_ipow(lambda, 5) + 1.18104 *lens_ipow(x, 2)*lens_ipow(dx, 7)*dy+0.0f;
const float dx02 =  + 198.202  + 199.455 *lens_ipow(dy, 2) + 608.737 *lens_ipow(dx, 2) + 2.36295 *y*dy + 0.00606609 *lens_ipow(y, 2) + 6.39284 *x*dx + 0.0160038 *lens_ipow(x, 2) + 9.05891 *lens_ipow(lambda, 3) + -0.0278715 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.0920847 *x*y*dx*dy + -0.0216324 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.140177 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.000510077 *lens_ipow(x, 2)*y*dy + -0.581093 *y*lens_ipow(dx, 4) + -0.000635812 *x*lens_ipow(y, 2)*dx*lambda + 2183.8 *lens_ipow(dy, 6) + 15086.4 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 31214.9 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -0.788819 *x*dx*lens_ipow(lambda, 4) + -1.33645 *x*y*dx*lens_ipow(dy, 3) + -1.3645e-06 *lens_ipow(x, 5)*dx + -38.7306 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -150.44 *lens_ipow(dx, 2)*lens_ipow(lambda, 5) + -0.000774081 *lens_ipow(y, 3)*dy*lens_ipow(lambda, 3) + 165189 *lens_ipow(dx, 8) + -1.39778e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 5) + -41.0663 *lens_ipow(lambda, 10) + 8.26727 *lens_ipow(x, 2)*y*lens_ipow(dx, 6)*dy+0.0f;
const float dx03 =  + 0.0010333  + 398.911 *dx*dy + 2.36295 *y*dx + 1.66123 *x*dy + 0.00934677 *x*y + -0.0557429 *lens_ipow(y, 2)*dx*dy + -0.0460424 *x*y*lens_ipow(dx, 2) + -0.000375876 *x*lens_ipow(y, 2)*dy + -0.0432649 *lens_ipow(x, 2)*dx*dy + -0.000510077 *lens_ipow(x, 2)*y*dx + 13102.8 *dx*lens_ipow(dy, 5) + 20115.2 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + 12485.9 *lens_ipow(dx, 5)*dy + -0.826805 *x*y*lens_ipow(dy, 4) + -2.00467 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -77.4612 *dx*dy*lens_ipow(lambda, 5) + -0.000774081 *lens_ipow(y, 3)*dx*lens_ipow(lambda, 3) + 1.18104 *lens_ipow(x, 2)*y*lens_ipow(dx, 7)+0.0f;
const float dx04 =  + 27.1767 *dx*lens_ipow(lambda, 2) + 0.180293 *x*lens_ipow(lambda, 3) + -0.000317906 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.57764 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -193.653 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -250.734 *lens_ipow(dx, 3)*lens_ipow(lambda, 4) + -0.00232224 *lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 2) + -6.98891e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 4) + -410.663 *dx*lens_ipow(lambda, 9) + -2.07047 *x*lens_ipow(lambda, 9)+0.0f;
const float dx10 =  + 8.07839e-06  + -0.000117284 *dy + 2.33799 *dx*dy + 0.00936665 *y*dx + 0.0121401 *x*dy + 4.89668e-05 *x*y + -0.0437567 *y*dx*lens_ipow(dy, 2) + -0.0521831 *x*lens_ipow(dx, 2)*dy + -0.000288117 *x*y*lens_ipow(dy, 2) + -0.000341631 *x*y*lens_ipow(dx, 2) + -0.631126 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.163378 *y*lens_ipow(dx, 5) + -0.000953619 *lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 2) + -1.9191e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + 1.06111 *lens_ipow(y, 2)*dx*lens_ipow(dy, 7) + -7.89535e-08 *x*lens_ipow(y, 4)*dy*lens_ipow(lambda, 4) + -0.0031873 *lens_ipow(x, 2)*dx*dy*lens_ipow(lambda, 6)+0.0f;
const float dx11 =  + 0.829461  + 3.19781 *lens_ipow(dy, 2) + 0.830541 *lens_ipow(dx, 2) + 0.0319926 *y*dy + 6.96494e-05 *lens_ipow(y, 2) + 0.00936665 *x*dx + 2.44834e-05 *lens_ipow(x, 2) + 0.0451453 *lens_ipow(lambda, 4) + -0.0914443 *y*lens_ipow(dy, 3) + -0.0364603 *y*lens_ipow(dx, 2)*dy + -0.0437567 *x*dx*lens_ipow(dy, 2) + -0.000144059 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.000170816 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.40836 *lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -3.52793e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.631126 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.163378 *x*lens_ipow(dx, 5) + -0.00190724 *x*y*dx*dy*lens_ipow(lambda, 2) + -1.2794e-06 *lens_ipow(x, 3)*y*dx*dy + -0.209237 *lens_ipow(lambda, 10) + 2.12221 *x*y*dx*lens_ipow(dy, 7) + -1.57907e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy*lens_ipow(lambda, 4)+0.0f;
const float dx12 =  + 398.513 *dx*dy + 1.66108 *y*dx + 2.33799 *x*dy + 0.00936665 *x*y + -0.0364603 *lens_ipow(y, 2)*dx*dy + -0.0437567 *x*y*lens_ipow(dy, 2) + -0.0521831 *lens_ipow(x, 2)*dx*dy + -0.000341631 *lens_ipow(x, 2)*y*dx + 12207.7 *dx*lens_ipow(dy, 5) + 19416 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + 12943 *lens_ipow(dx, 5)*dy + -1.89338 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.816889 *x*y*lens_ipow(dx, 4) + -0.000953619 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + -6.397e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy + -81.2702 *dx*dy*lens_ipow(lambda, 5) + 1.06111 *x*lens_ipow(y, 2)*lens_ipow(dy, 7) + -0.00106243 *lens_ipow(x, 3)*dy*lens_ipow(lambda, 6)+0.0f;
const float dx13 =  + 198.201  + -0.000117284 *x + 609.089 *lens_ipow(dy, 2) + 199.257 *lens_ipow(dx, 2) + 6.39562 *y*dy + 0.0159963 *lens_ipow(y, 2) + 2.33799 *x*dx + 0.00607003 *lens_ipow(x, 2) + 9.06631 *lens_ipow(lambda, 3) + -0.137166 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.0182302 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.0875135 *x*y*dx*dy + -0.0260915 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.000288117 *lens_ipow(x, 2)*y*dy + 30519.2 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 14562 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + 2157.16 *lens_ipow(dx, 6) + -0.81672 *y*dy*lens_ipow(lambda, 4) + -1.41117e-06 *lens_ipow(y, 5)*dy + -1.26225 *x*y*lens_ipow(dx, 3)*dy + -0.000953619 *x*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -6.397e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx + -157.488 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -40.6351 *lens_ipow(dx, 2)*lens_ipow(lambda, 5) + 163523 *lens_ipow(dy, 8) + -41.1936 *lens_ipow(lambda, 10) + 7.42775 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 6) + -3.94768e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(lambda, 4) + -0.00106243 *lens_ipow(x, 3)*dx*lens_ipow(lambda, 6)+0.0f;
const float dx14 =  + 27.1989 *dy*lens_ipow(lambda, 2) + 0.180581 *y*lens_ipow(lambda, 3) + -1.63344 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.00190724 *x*lens_ipow(y, 2)*dx*dy*lambda + -262.48 *lens_ipow(dy, 3)*lens_ipow(lambda, 4) + -203.176 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + -411.936 *dy*lens_ipow(lambda, 9) + -2.09237 *y*lens_ipow(lambda, 9) + -1.57907e-07 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy*lens_ipow(lambda, 3) + -0.00637459 *lens_ipow(x, 3)*dx*dy*lens_ipow(lambda, 5)+0.0f;
const float dx20 =  + -0.00522986  + -9.12217e-07 *dx + 0.00482595 *lens_ipow(dy, 2) + 0.0143044 *lens_ipow(dx, 2) + 9.15003e-05 *y*dy + 6.63889e-07 *y*dx + 2.86412e-07 *lens_ipow(y, 2) + 3.32983e-09 *x*y + 8.69705e-07 *lens_ipow(x, 2) + 0.000539624 *x*dx*lambda + 0.00241926 *lens_ipow(lambda, 4) + -0.000389136 *y*lens_ipow(dx, 2)*dy + -9.69789e-06 *x*y*dx*dy + -1.01755e-06 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + 0.0599273 *lens_ipow(dy, 6) + -1.9758e-06 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -3.64836e-08 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -0.00196365 *x*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.00403746 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -3.58757e-06 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.0116557 *lens_ipow(lambda, 10) + -0.0263368 *lens_ipow(dx, 2)*lens_ipow(lambda, 8) + -0.00212527 *x*dx*lens_ipow(lambda, 8)+0.0f;
const float dx21 =  + -1.40224e-09  + 0.00958217 *dx*dy + 2.87446e-07 *y*dy + 7.19122e-05 *y*dx + 9.15003e-05 *x*dy + 6.63889e-07 *x*dx + 5.72823e-07 *x*y + 1.66492e-09 *lens_ipow(x, 2) + -0.000389136 *x*lens_ipow(dx, 2)*dy + -4.84894e-06 *lens_ipow(x, 2)*dx*dy + -0.00172558 *dx*dy*lens_ipow(lambda, 3) + -2.0351e-06 *x*y*lens_ipow(dx, 2)*lambda + 4.29063e-06 *lens_ipow(y, 2)*lens_ipow(dx, 4) + -3.95161e-06 *x*y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -3.58757e-06 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2)+0.0f;
const float dx22 =  + -0.189868  + 0.423912 *lambda + -9.12217e-07 *x + -0.449097 *lens_ipow(dy, 2) + -1.34511 *lens_ipow(dx, 2) + 0.00958217 *y*dy + 3.59561e-05 *lens_ipow(y, 2) + 0.0286088 *x*dx + 6.63889e-07 *x*y + -0.321426 *lens_ipow(lambda, 3) + 0.000269812 *lens_ipow(x, 2)*lambda + -0.000778272 *x*y*dx*dy + -4.84894e-06 *lens_ipow(x, 2)*y*dy + -0.00172558 *y*dy*lens_ipow(lambda, 3) + -2.0351e-06 *x*lens_ipow(y, 2)*dx*lambda + 5.72084e-06 *lens_ipow(y, 3)*lens_ipow(dx, 3) + -1.45934e-08 *lens_ipow(x, 5)*dx + -0.000981824 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.00605619 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 1743.64 *lens_ipow(dx, 2)*lens_ipow(dy, 6) + 2893.92 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + 793.423 *lens_ipow(dx, 8) + -1.79379e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.390561 *lens_ipow(lambda, 10) + -0.0526737 *x*dx*lens_ipow(lambda, 8) + -0.00106263 *lens_ipow(x, 2)*lens_ipow(lambda, 8)+0.0f;
const float dx23 =  + -1.81163e-05  + -0.898194 *dx*dy + 0.00958217 *y*dx + 1.43723e-07 *lens_ipow(y, 2) + 0.00965189 *x*dy + 9.15003e-05 *x*y + -0.000389136 *x*y*lens_ipow(dx, 2) + -4.84894e-06 *lens_ipow(x, 2)*y*dx + -0.00172558 *y*dx*lens_ipow(lambda, 3) + 0.359564 *x*lens_ipow(dy, 5) + -3.95161e-06 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + -0.00196365 *lens_ipow(x, 2)*dx*dy*lens_ipow(lambda, 3) + 3487.29 *lens_ipow(dx, 3)*lens_ipow(dy, 5) + 826.834 *lens_ipow(dx, 7)*dy + -3.58757e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 2)+0.0f;
const float dx24 =  + 0.423912 *dx + -0.964277 *dx*lens_ipow(lambda, 2) + 0.000269812 *lens_ipow(x, 2)*dx + 0.00967703 *x*lens_ipow(lambda, 3) + -0.00517673 *y*dx*dy*lens_ipow(lambda, 2) + -1.01755e-06 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -3.95161e-06 *x*lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda + -0.00294547 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.00605619 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -3.58757e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lambda + 3.90561 *dx*lens_ipow(lambda, 9) + -0.116557 *x*lens_ipow(lambda, 9) + -0.210695 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 7) + -0.00850107 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 7)+0.0f;
const float dx30 =  + -2.00885e-07  + 9.77605e-08 *dy + 1.10443e-06 *dx + 2.30439e-05 *lens_ipow(dy, 2) + 0.00930113 *dx*dy + 3.26691e-07 *y*dy + 9.1843e-05 *y*dx + 7.23317e-05 *x*dy + 5.47266e-07 *x*y + -0.000356819 *y*dx*lens_ipow(dy, 2) + -4.63817e-06 *lens_ipow(y, 2)*dx*dy + -1.47042e-06 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lambda+0.0f;
const float dx31 =  + -0.00523131  + 4.55096e-08 *y + 0.0143966 *lens_ipow(dy, 2) + 2.35894e-06 *dx*dy + 0.00487752 *lens_ipow(dx, 2) + 3.06592e-07 *y*dx + 8.63108e-07 *lens_ipow(y, 2) + 3.26691e-07 *x*dy + 9.1843e-05 *x*dx + 2.73633e-07 *lens_ipow(x, 2) + 2.1832e-05 *dx*lens_ipow(dy, 2) + 0.000543367 *y*dy*lambda + 0.00244379 *lens_ipow(lambda, 4) + -0.000356819 *x*dx*lens_ipow(dy, 2) + -9.27634e-06 *x*y*dx*dy + 0.0548351 *lens_ipow(dx, 6) + -3.83423e-08 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.00387943 *y*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -1.47042e-06 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy*lambda + -0.00272866 *lens_ipow(dx, 2)*lens_ipow(lambda, 6) + -9.46789e-06 *lens_ipow(y, 3)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -0.0116209 *lens_ipow(lambda, 10) + -0.0312861 *lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -0.00232025 *y*dy*lens_ipow(lambda, 8)+0.0f;
const float dx32 =  + 1.10443e-06 *x + -0.907944 *dx*dy + 2.35894e-06 *y*dy + 0.00975504 *y*dx + 1.53296e-07 *lens_ipow(y, 2) + 0.00930113 *x*dy + 9.1843e-05 *x*y + 2.1832e-05 *y*lens_ipow(dy, 2) + -0.000356819 *x*y*lens_ipow(dy, 2) + -4.63817e-06 *x*lens_ipow(y, 2)*dy + 0.32901 *y*lens_ipow(dx, 5) + -1.47042e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy*lambda + 822.349 *dx*lens_ipow(dy, 7) + 3433.75 *lens_ipow(dx, 5)*lens_ipow(dy, 3) + -0.00545732 *y*dx*lens_ipow(lambda, 6) + -4.73394e-06 *lens_ipow(y, 4)*dx*dy*lens_ipow(lambda, 2)+0.0f;
const float dx33 =  + -0.188606  + 0.419807 *lambda + 9.77605e-08 *x + -1.33918 *lens_ipow(dy, 2) + -0.453972 *lens_ipow(dx, 2) + 0.0287931 *y*dy + 2.35894e-06 *y*dx + 4.60878e-05 *x*dy + 0.00930113 *x*dx + 3.26691e-07 *x*y + 3.61659e-05 *lens_ipow(x, 2) + -0.315764 *lens_ipow(lambda, 3) + 4.36641e-05 *y*dx*dy + 0.000271683 *lens_ipow(y, 2)*lambda + -0.000713637 *x*y*dx*dy + -4.63817e-06 *x*lens_ipow(y, 2)*dx + -1.53369e-08 *lens_ipow(y, 5)*dy + -0.00581914 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -7.35208e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + 761.967 *lens_ipow(dy, 8) + 2878.22 *lens_ipow(dx, 2)*lens_ipow(dy, 6) + 1716.88 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + -2.36697e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.385022 *lens_ipow(lambda, 10) + -0.0625722 *y*dy*lens_ipow(lambda, 8) + -0.00116012 *lens_ipow(y, 2)*lens_ipow(lambda, 8)+0.0f;
const float dx34 =  + 0.419807 *dy + -0.947291 *dy*lens_ipow(lambda, 2) + 0.000271683 *lens_ipow(y, 2)*dy + 0.00977516 *y*lens_ipow(lambda, 3) + -0.00581914 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -7.35208e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.016372 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 5) + -4.73394e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2)*dy*lambda + 3.85022 *dy*lens_ipow(lambda, 9) + -0.116209 *y*lens_ipow(lambda, 9) + -0.250289 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 7) + -0.00928098 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 7)+0.0f;
const float dx40 =  + 8.12812e-09  + -8.5362e-05 *dx + -6.77585e-07 *x + -0.0130694 *dx*lens_ipow(dy, 2) + -0.012046 *lens_ipow(dx, 3) + -7.24146e-05 *y*dx*dy + -1.40118e-08 *lens_ipow(y, 2)*dx + -6.99708e-05 *x*lens_ipow(dx, 2) + -1.58906e-07 *x*y*dy + -2.04119e-08 *x*y*dx + -0.000561567 *x*lens_ipow(dy, 4) + 0.00779052 *y*dx*lens_ipow(dy, 5) + 0.0119236 *y*lens_ipow(dx, 5)*dy + -41.8165 *lens_ipow(dx, 5)*lens_ipow(dy, 4) + -11.7605 *lens_ipow(dx, 9) + 3.65195e-10 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -2.02188e-08 *lens_ipow(x, 5)*lens_ipow(dx, 4)+0.0f;
const float dx41 =  + -4.913e-08  + -7.49318e-05 *dy + -4.97833e-07 *y + -0.0122429 *lens_ipow(dy, 3) + -0.0135323 *lens_ipow(dx, 2)*dy + -7.47249e-05 *y*lens_ipow(dy, 2) + -2.68204e-05 *y*lens_ipow(dx, 2) + -7.24146e-05 *x*dx*dy + -2.80236e-08 *x*y*dx + -7.94532e-08 *lens_ipow(x, 2)*dy + -1.0206e-08 *lens_ipow(x, 2)*dx + 0.00779052 *x*dx*lens_ipow(dy, 5) + 0.0119236 *x*lens_ipow(dx, 5)*dy + -10.9938 *lens_ipow(dy, 9) + -1.85357e-08 *lens_ipow(y, 5)*lens_ipow(dy, 4) + 2.73896e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -38.2109 *lens_ipow(dx, 2)*lens_ipow(dy, 7)*lambda+0.0f;
const float dx42 =  + -2.5646e-06  + -0.0631703 *dx + -8.5362e-05 *x + -2.26491 *dx*lens_ipow(dy, 2) + -0.0270646 *y*dx*dy + -2.68204e-05 *lens_ipow(y, 2)*dx + -0.0130694 *x*lens_ipow(dy, 2) + -0.0361379 *x*lens_ipow(dx, 2) + -7.24146e-05 *x*y*dy + -1.40118e-08 *x*lens_ipow(y, 2) + -6.99708e-05 *lens_ipow(x, 2)*dx + -1.0206e-08 *lens_ipow(x, 2)*y + -43.1308 *dx*lens_ipow(dy, 4) + -76.0635 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -86.7627 *lens_ipow(dx, 5) + 0.00779052 *x*y*lens_ipow(dy, 5) + 0.0596179 *x*y*lens_ipow(dx, 4)*dy + -209.083 *x*lens_ipow(dx, 4)*lens_ipow(dy, 4) + -105.845 *x*lens_ipow(dx, 8) + 1.82597e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*dy + -1.34792e-08 *lens_ipow(x, 6)*lens_ipow(dx, 3) + -76.4217 *y*dx*lens_ipow(dy, 7)*lambda+0.0f;
const float dx43 =  + 8.16678e-06  + -0.0640401 *dy + -7.49318e-05 *y + -2.26491 *lens_ipow(dx, 2)*dy + -0.0367288 *y*lens_ipow(dy, 2) + -0.0135323 *y*lens_ipow(dx, 2) + -7.47249e-05 *lens_ipow(y, 2)*dy + -0.0261388 *x*dx*dy + -7.24146e-05 *x*y*dx + -7.94532e-08 *lens_ipow(x, 2)*y + -84.8031 *lens_ipow(dy, 5) + -86.2617 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -38.0317 *lens_ipow(dx, 4)*dy + -0.00112313 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.0389526 *x*y*dx*lens_ipow(dy, 4) + 0.0119236 *x*y*lens_ipow(dx, 5) + -98.9441 *y*lens_ipow(dy, 8) + -1.23571e-08 *lens_ipow(y, 6)*lens_ipow(dy, 3) + -167.266 *x*lens_ipow(dx, 5)*lens_ipow(dy, 3) + 9.12987e-11 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(dx, 2) + -267.476 *y*lens_ipow(dx, 2)*lens_ipow(dy, 6)*lambda+0.0f;
const float dx44 =  + 0.0701151  + -0.177377 *lens_ipow(lambda, 2) + 1.18618 *lens_ipow(lambda, 10) + -38.2109 *y*lens_ipow(dx, 2)*lens_ipow(dy, 7)+0.0f;
