float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + -2.75777e-05  + 35.5802 *begin_dx + 9.16576e-06 *begin_y + 0.57611 *begin_x + 0.0045315 *begin_dx*begin_dy + 8.06954e-05 *begin_y*begin_dx + 2.53463e-06 *lens_ipow(begin_y, 2) + -7.80895e-07 *lens_ipow(begin_x, 2) + 38.1235 *begin_dx*lens_ipow(begin_dy, 2) + 38.2222 *lens_ipow(begin_dx, 3) + 3.0928 *begin_y*begin_dx*begin_dy + 0.0454737 *lens_ipow(begin_y, 2)*begin_dx + 1.19486 *begin_x*lens_ipow(begin_dy, 2) + 4.31218 *begin_x*lens_ipow(begin_dx, 2) + 0.0795652 *begin_x*begin_y*begin_dy + 5.09669e-05 *begin_x*begin_y*begin_dx + 0.00107686 *begin_x*lens_ipow(begin_y, 2) + 0.125814 *lens_ipow(begin_x, 2)*begin_dx + 0.00107984 *lens_ipow(begin_x, 3) + -0.0644539 *begin_x*lens_ipow(begin_lambda, 3) + -1.96618 *begin_dx*lens_ipow(begin_lambda, 4) + 0.000801215 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 7.95431e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dy + 1.38357e-08 *lens_ipow(begin_x, 4)*begin_y + 1.66823e-08 *lens_ipow(begin_x, 5) + -0.316163 *begin_y*lens_ipow(begin_dx, 4)*begin_dy + 7.54716e-08 *lens_ipow(begin_x, 4)*begin_y*begin_dy + 1.52972e-07 *begin_x*lens_ipow(begin_y, 5)*begin_dy*lens_ipow(begin_lambda, 2) + 3.87508e-12 *begin_x*lens_ipow(begin_y, 8) + -5.32515e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + 4.76218e-11 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4) + 2.15057e-08 *lens_ipow(begin_x, 7)*lens_ipow(begin_dy, 2) + 51.781 *begin_x*begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 3)*begin_lambda + 2.53133e-14 *lens_ipow(begin_x, 10) + 9.4202 *begin_dx*lens_ipow(begin_lambda, 10) + 0.342727 *begin_x*lens_ipow(begin_lambda, 10) + -0.00100112 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + 4.27468e-08 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -3.60283e-10 *lens_ipow(begin_x, 8)*begin_y*begin_dx*begin_dy + 8.46017e-14 *lens_ipow(begin_x, 9)*lens_ipow(begin_y, 2);
  pred_y =  + -5.95104e-06  + 35.5792 *begin_dy + 0.57582 *begin_y + 4.90396e-06 *begin_x + 0.00412335 *lens_ipow(begin_dx, 2) + 0.00020035 *begin_y*begin_dx + -3.6962e-05 *begin_x*begin_dy + 37.9917 *lens_ipow(begin_dy, 3) + 38.0517 *lens_ipow(begin_dx, 2)*begin_dy + 4.30109 *begin_y*lens_ipow(begin_dy, 2) + 1.20187 *begin_y*lens_ipow(begin_dx, 2) + 0.125568 *lens_ipow(begin_y, 2)*begin_dy + 0.00107905 *lens_ipow(begin_y, 3) + 3.10618 *begin_x*begin_dx*begin_dy + 0.0801155 *begin_x*begin_y*begin_dx + 0.0455699 *lens_ipow(begin_x, 2)*begin_dy + 0.00108298 *lens_ipow(begin_x, 2)*begin_y + -0.0622474 *begin_y*lens_ipow(begin_lambda, 3) + 1.09019e-07 *begin_x*lens_ipow(begin_y, 3) + -1.88828 *begin_dy*lens_ipow(begin_lambda, 4) + 1.87954e-08 *lens_ipow(begin_y, 5) + 0.000867341 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 3.22142e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 9.51235e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + 1.96136 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + -5.8194e-08 *begin_x*lens_ipow(begin_y, 6)*begin_dx*begin_dy + 0.000534861 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -6.20265e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dx*begin_dy + 7.09764e-11 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 5) + -5.33428 *begin_x*lens_ipow(begin_dx, 3)*begin_dy*lens_ipow(begin_lambda, 5) + 0.00927332 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + -2.48897e-05 *lens_ipow(begin_x, 4)*begin_dy*lens_ipow(begin_lambda, 5) + 8.90388 *begin_dy*lens_ipow(begin_lambda, 10) + 0.323866 *begin_y*lens_ipow(begin_lambda, 10) + 7.43515e-06 *lens_ipow(begin_y, 6)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2) + 2.70745e-10 *lens_ipow(begin_y, 9)*lens_ipow(begin_dx, 2) + -0.000591592 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 4) + -1.82172e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 4) + 1.1258e-08 *lens_ipow(begin_x, 8)*lens_ipow(begin_dy, 3) + 4.68681e-10 *lens_ipow(begin_x, 8)*begin_y*lens_ipow(begin_dy, 2);
  pred_dx =  + 5.2032e-06  + -0.139957 *begin_dx + 1.22714e-06 *begin_y + -0.0302107 *begin_x + -0.000329405 *lens_ipow(begin_dx, 2) + 1.09527e-07 *lens_ipow(begin_x, 2) + -2.49266 *begin_dx*lens_ipow(begin_dy, 2) + -2.55322 *lens_ipow(begin_dx, 3) + -0.0159219 *begin_y*begin_dx*begin_dy + 0.00050433 *lens_ipow(begin_y, 2)*begin_dx + -0.00215066 *begin_x*lens_ipow(begin_dy, 2) + -0.0214227 *begin_x*lens_ipow(begin_dx, 2) + 0.00185727 *begin_x*begin_y*begin_dy + 3.01562e-05 *begin_x*lens_ipow(begin_y, 2) + 0.0022914 *lens_ipow(begin_x, 2)*begin_dx + 2.75364e-05 *lens_ipow(begin_x, 3) + -0.00330274 *begin_x*lens_ipow(begin_lambda, 3) + -0.218552 *begin_dx*lens_ipow(begin_lambda, 4) + 0.000298543 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -2.51135e-07 *lens_ipow(begin_x, 3)*begin_y*begin_dy + 2.48759e-08 *lens_ipow(begin_x, 5) + 0.000645342 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4) + 3.03135e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx + -5.31132e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + -0.067713 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + -0.0125971 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 3) + -7.86213e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + 0.00608326 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 6) + 9.73246e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy*lens_ipow(begin_lambda, 2) + 2.32709e-08 *lens_ipow(begin_x, 6)*begin_dx*lens_ipow(begin_lambda, 3) + 1.03168 *begin_dx*lens_ipow(begin_lambda, 10) + 387.896 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 4) + 196.79 *lens_ipow(begin_dx, 7)*lens_ipow(begin_lambda, 4) + 0.0167349 *begin_x*lens_ipow(begin_lambda, 10) + -0.00144778 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 8) + 1.58442e-15 *begin_x*lens_ipow(begin_y, 10) + -1.6491e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 7)*begin_dx*begin_dy + 8.77876e-14 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 6) + -7.50942e-11 *lens_ipow(begin_x, 8)*begin_y*begin_dx*begin_dy + 2.17066e-14 *lens_ipow(begin_x, 9)*lens_ipow(begin_y, 2);
  pred_dy =  + 2.40112e-06  + -0.140321 *begin_dy + -0.0303397 *begin_y + 8.11769e-07 *begin_x + -2.51572 *lens_ipow(begin_dy, 3) + -2.47233 *lens_ipow(begin_dx, 2)*begin_dy + -0.0184507 *begin_y*lens_ipow(begin_dy, 2) + -0.00271495 *begin_y*lens_ipow(begin_dx, 2) + 0.00228883 *lens_ipow(begin_y, 2)*begin_dy + 2.74293e-05 *lens_ipow(begin_y, 3) + -0.01588 *begin_x*begin_dx*begin_dy + 0.00177903 *begin_x*begin_y*begin_dx + 0.000508481 *lens_ipow(begin_x, 2)*begin_dy + 2.99661e-05 *lens_ipow(begin_x, 2)*begin_y + -0.221456 *begin_dy*lens_ipow(begin_lambda, 4) + -0.00481273 *begin_y*lens_ipow(begin_lambda, 4) + 2.73159e-08 *lens_ipow(begin_y, 5) + 0.0049142 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.000213464 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 1.49055e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 0.00147276 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -9.64057e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -3.22267e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy + -4.91102e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 6.91148e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy*begin_lambda + -1.13532e-06 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dx, 2)*begin_lambda + 227.227 *lens_ipow(begin_dy, 9) + 178.208 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 2) + -0.000569371 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 5) + -0.0504257 *begin_x*begin_y*lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 2) + -1.3532e-08 *begin_x*lens_ipow(begin_y, 6)*begin_dx*begin_dy + 0.0268176 *lens_ipow(begin_x, 3)*begin_dx*lens_ipow(begin_dy, 5) + 7.83766e-12 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 5) + -3.09896e-08 *lens_ipow(begin_y, 5)*lens_ipow(begin_lambda, 5) + -0.00491125 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 1.05358 *begin_dy*lens_ipow(begin_lambda, 10) + 0.0234807 *begin_y*lens_ipow(begin_lambda, 10) + 1.62637e-14 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 9) + 5.79511e-14 *lens_ipow(begin_x, 10)*begin_dy + 3.61017e-15 *lens_ipow(begin_x, 10)*begin_y;
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 35.5802  + 0.0045315 *begin_dy + 8.06954e-05 *begin_y + 38.1235 *lens_ipow(begin_dy, 2) + 114.667 *lens_ipow(begin_dx, 2) + 3.0928 *begin_y*begin_dy + 0.0454737 *lens_ipow(begin_y, 2) + 8.62436 *begin_x*begin_dx + 5.09669e-05 *begin_x*begin_y + 0.125814 *lens_ipow(begin_x, 2) + -1.96618 *lens_ipow(begin_lambda, 4) + 0.000801215 *lens_ipow(begin_x, 2)*begin_y*begin_dy + -1.26465 *begin_y*lens_ipow(begin_dx, 3)*begin_dy + -5.32515e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dy + 207.124 *begin_x*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3)*begin_lambda + 9.4202 *lens_ipow(begin_lambda, 10) + -0.00200224 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 3) + 1.2824e-07 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -3.60283e-10 *lens_ipow(begin_x, 8)*begin_y*begin_dy+0.0f;
  dx1_domega0[0][1] =  + 0.0045315 *begin_dx + 76.247 *begin_dx*begin_dy + 3.0928 *begin_y*begin_dx + 2.38972 *begin_x*begin_dy + 0.0795652 *begin_x*begin_y + 0.000801215 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 7.95431e-06 *lens_ipow(begin_x, 3)*begin_y + -0.316163 *begin_y*lens_ipow(begin_dx, 4) + 7.54716e-08 *lens_ipow(begin_x, 4)*begin_y + 1.52972e-07 *begin_x*lens_ipow(begin_y, 5)*lens_ipow(begin_lambda, 2) + -5.32515e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dx + 4.30114e-08 *lens_ipow(begin_x, 7)*begin_dy + 155.343 *begin_x*begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2)*begin_lambda + -0.00300336 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -3.60283e-10 *lens_ipow(begin_x, 8)*begin_y*begin_dx+0.0f;
  dx1_domega0[1][0] =  + 0.0082467 *begin_dx + 0.00020035 *begin_y + 76.1035 *begin_dx*begin_dy + 2.40374 *begin_y*begin_dx + 3.10618 *begin_x*begin_dy + 0.0801155 *begin_x*begin_y + 0.000867341 *begin_x*lens_ipow(begin_y, 2)*begin_dy + 3.22142e-06 *begin_x*lens_ipow(begin_y, 3) + 1.96136 *begin_x*begin_y*lens_ipow(begin_dy, 4)*begin_lambda + -5.8194e-08 *begin_x*lens_ipow(begin_y, 6)*begin_dy + 0.00106972 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + -6.20265e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dy + -16.0029 *begin_x*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 5) + 0.00927332 *begin_x*lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 5) + 1.48703e-05 *lens_ipow(begin_y, 6)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 5.4149e-10 *lens_ipow(begin_y, 9)*begin_dx + -0.000591592 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 4)+0.0f;
  dx1_domega0[1][1] =  + 35.5792  + -3.6962e-05 *begin_x + 113.975 *lens_ipow(begin_dy, 2) + 38.0517 *lens_ipow(begin_dx, 2) + 8.60218 *begin_y*begin_dy + 0.125568 *lens_ipow(begin_y, 2) + 3.10618 *begin_x*begin_dx + 0.0455699 *lens_ipow(begin_x, 2) + -1.88828 *lens_ipow(begin_lambda, 4) + 0.000867341 *begin_x*lens_ipow(begin_y, 2)*begin_dx + 9.51235e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + 7.84544 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + -5.8194e-08 *begin_x*lens_ipow(begin_y, 6)*begin_dx + 0.00106972 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + -6.20265e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dx + -5.33428 *begin_x*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 5) + 0.00927332 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 5) + -2.48897e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_lambda, 5) + 8.90388 *lens_ipow(begin_lambda, 10) + 7.43515e-06 *lens_ipow(begin_y, 6)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -0.00236637 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 3) + 3.37739e-08 *lens_ipow(begin_x, 8)*lens_ipow(begin_dy, 2) + 9.37362e-10 *lens_ipow(begin_x, 8)*begin_y*begin_dy+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
