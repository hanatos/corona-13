const float out_x =  + 0.000273071  + 11.3942 *dx + -1.79206 *x + -0.026403 *lens_ipow(dy, 2) + 0.000508213 *y*dx + 18.3599 *dx*lens_ipow(dy, 2) + 1.40919 *y*dx*dy + 0.051411 *lens_ipow(y, 2)*dx + 0.702177 *x*lens_ipow(dy, 2) + 1.96079 *x*lens_ipow(dx, 2) + 0.0634463 *x*y*dy + 0.00273604 *x*lens_ipow(y, 2) + 0.114242 *lens_ipow(x, 2)*dx + 0.00274454 *lens_ipow(x, 3) + -0.0747238 *y*lens_ipow(dx, 2)*dy + -0.126033 *x*lens_ipow(lambda, 3) + 60.2941 *lens_ipow(dx, 3)*lens_ipow(lambda, 2) + 0.00172066 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2) + -0.00806772 *lens_ipow(x, 2)*y*dx*dy + 0.00313786 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 4.07219 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -15.3263 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.00904287 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + 0.74991 *lens_ipow(x, 2)*lens_ipow(dx, 5) + 6.27855e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -12.738 *y*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + 0.0457966 *lens_ipow(y, 4)*lens_ipow(dx, 5) + 6.7248e-08 *lens_ipow(y, 7)*dx*dy + -0.0273947 *x*y*dy*lens_ipow(lambda, 6) + -4.36807e-11 *x*lens_ipow(y, 8) + -0.0206066 *lens_ipow(x, 3)*y*lens_ipow(dy, 5) + -2.85077e-10 *lens_ipow(x, 5)*lens_ipow(y, 4) + -1.08046e-05 *lens_ipow(x, 6)*lens_ipow(dx, 3) + -9.21904e-11 *lens_ipow(x, 7)*lens_ipow(y, 2) + -2.95374e-11 *lens_ipow(x, 9) + -2.35678e+06 *lens_ipow(dx, 5)*lens_ipow(dy, 6) + -7.89248 *lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(lambda, 4) + 0.526558 *x*lens_ipow(lambda, 10) + 8.03647 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 8) + 2.45229e-05 *lens_ipow(x, 6)*y*lens_ipow(dx, 3)*dy;
const float out_y =  + 0.000173604  + 11.0908 *dy + -1.78474 *y + -0.000642049 *x*dy + 18.7614 *lens_ipow(dy, 3) + 18.3002 *lens_ipow(dx, 2)*dy + -0.103219 *y*lens_ipow(lambda, 2) + 2.16252 *y*lens_ipow(dy, 2) + 0.687603 *y*lens_ipow(dx, 2) + 0.12054 *lens_ipow(y, 2)*dy + 8.00862e-05 *lens_ipow(y, 2)*dx + 0.00277844 *lens_ipow(y, 3) + 1.42244 *x*dx*dy + 0.070137 *x*y*dx + 0.0504552 *lens_ipow(x, 2)*dy + 0.00283847 *lens_ipow(x, 2)*y + 1.57168 *dy*lens_ipow(lambda, 3) + -0.0108884 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + 0.00471391 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.012487 *x*y*dx*lens_ipow(lambda, 2) + -0.349981 *x*y*dx*lens_ipow(dy, 2) + -0.0642196 *x*y*lens_ipow(dx, 3) + -0.00822533 *x*lens_ipow(y, 2)*dx*dy + 0.189502 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -19.79 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -10.9848 *x*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2) + 0.000115866 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2) + -2.96425e-08 *lens_ipow(x, 2)*lens_ipow(y, 5) + -2.39147e-08 *lens_ipow(x, 4)*lens_ipow(y, 3) + -8.56936e-06 *lens_ipow(y, 6)*lens_ipow(dy, 3) + -1.20812e-07 *lens_ipow(y, 7)*lens_ipow(dx, 2) + -2.76624e-11 *lens_ipow(y, 9) + -1.40083e-08 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx + -3.22486e-06 *lens_ipow(x, 4)*y*lens_ipow(lambda, 4) + -3.87192e-05 *lens_ipow(x, 5)*y*dx*lens_ipow(dy, 2) + -3.21587e-11 *lens_ipow(x, 8)*y + -101.879 *y*lens_ipow(dy, 6)*lens_ipow(lambda, 3) + 0.582681 *y*lens_ipow(lambda, 10) + -2.17193e-07 *x*lens_ipow(y, 7)*dx*lens_ipow(dy, 2) + -0.0611717 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 8);
const float out_dx =  + 3.1777e-06  + -0.38828 *dx + -0.0269329 *x + 4.96973e-08 *x*y + -2.32394e-07 *lens_ipow(x, 2) + 0.443308 *dx*lens_ipow(dy, 2) + 0.40462 *lens_ipow(dx, 3) + 0.00861408 *y*dx*dy + 0.000199611 *lens_ipow(y, 2)*dx + -0.000182299 *x*y*dy + -3.7398e-06 *x*lens_ipow(y, 2) + -0.000142886 *lens_ipow(x, 2)*dx + 1.71332e-05 *lens_ipow(x, 3) + 0.00518719 *x*lens_ipow(lambda, 3) + 0.0153536 *dx*lens_ipow(lambda, 4) + -0.0166865 *x*lens_ipow(dy, 4) + -5.03297e-05 *lens_ipow(x, 2)*y*dx*dy + 3.38484e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -9.23377e-07 *lens_ipow(x, 3)*y*dy + -6.88028e-09 *lens_ipow(x, 4)*y*dy + 0.0165216 *lens_ipow(y, 2)*lens_ipow(dx, 5) + -9.26389e-05 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + 3.84119e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -1.35264e-05 *lens_ipow(x, 3)*y*lens_ipow(dy, 3) + 7.3658e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -7.77223e-06 *lens_ipow(x, 4)*lens_ipow(dx, 3) + 0.000167283 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -1054.51 *lens_ipow(dx, 5)*lens_ipow(dy, 4) + 4.06104e-06 *lens_ipow(y, 5)*dx*lens_ipow(dy, 3) + -1.62985e-05 *lens_ipow(y, 5)*lens_ipow(dx, 3)*dy + -2.32588e-09 *lens_ipow(x, 7)*lens_ipow(dy, 2) + -1.30349e-12 *lens_ipow(x, 7)*lens_ipow(y, 2) + -3.9334e-13 *lens_ipow(x, 9) + -0.593565 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -6.93166e-08 *lens_ipow(x, 5)*lens_ipow(lambda, 5) + -1778.97 *lens_ipow(dx, 11) + -0.0255423 *x*lens_ipow(lambda, 10) + -4.11955 *x*lens_ipow(dx, 6)*lens_ipow(lambda, 4) + 3.20863e-06 *x*lens_ipow(y, 3)*dy*lens_ipow(lambda, 6) + 4.6848e-06 *lens_ipow(x, 4)*y*dx*dy*lens_ipow(lambda, 4);
const float out_dy =  + 3.45882e-06  + -0.387565 *dy + -1.97645e-05 *dx + -0.0268871 *y + -1.91681e-07 *x*y + 0.39321 *lens_ipow(dy, 3) + 0.379793 *lens_ipow(dx, 2)*dy + -0.00767475 *y*lens_ipow(dx, 2) + -0.000185387 *lens_ipow(y, 2)*dy + 1.65477e-05 *lens_ipow(y, 3) + -3.06053e-05 *x*y*dx + -3.09542e-08 *x*lens_ipow(y, 2) + -0.000210542 *lens_ipow(x, 2)*dy + 3.9166e-05 *lens_ipow(x, 2)*y + 0.0051492 *y*lens_ipow(lambda, 3) + 0.0173095 *dy*lens_ipow(lambda, 4) + -0.00126511 *x*y*dx*lens_ipow(dy, 2) + 4.3721e-05 *lens_ipow(x, 3)*dx*dy + -0.00265214 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -4.80643e-05 *x*lens_ipow(y, 3)*lens_ipow(dx, 3) + 1.05682e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2) + -5.01031e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + -5.54933e-05 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + -6.29819e-10 *lens_ipow(x, 4)*lens_ipow(y, 3) + -3.8479e-10 *lens_ipow(x, 6)*y + 12.5116 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + 8.60045e-07 *lens_ipow(y, 5)*lens_ipow(dy, 4) + -4.62414e-13 *lens_ipow(y, 9) + -3.58501e-07 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 2) + 1.96721e-07 *lens_ipow(x, 6)*lens_ipow(dy, 3) + -0.154681 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + 1.41152e-06 *lens_ipow(y, 5)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 4.07165e-08 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy*lambda + -8.0891e-08 *lens_ipow(x, 4)*y*lens_ipow(lambda, 5) + -26752.4 *lens_ipow(dx, 6)*lens_ipow(dy, 5) + -0.0247506 *y*lens_ipow(lambda, 10) + -9.41248e-08 *lens_ipow(y, 5)*lens_ipow(lambda, 6) + -0.000591273 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 8) + 1.21852e-10 *lens_ipow(x, 7)*lens_ipow(y, 2)*dx*dy + 4.86351e-11 *lens_ipow(x, 8)*y*lens_ipow(dx, 2);
const float out_transmittance =  + 0.122746  + 0.246012 *lambda + 1.81291e-07 *x + -0.0545617 *lens_ipow(dy, 2) + -0.0577175 *lens_ipow(dx, 2) + -0.00124334 *y*dy + -1.09109e-05 *lens_ipow(y, 2) + -0.00104348 *x*dx + -1.1659e-07 *x*y + -1.1266e-05 *lens_ipow(x, 2) + -0.201334 *lens_ipow(lambda, 3) + -0.0470381 *y*lens_ipow(dx, 2)*dy + -7.83989e-08 *lens_ipow(y, 4) + -0.0469432 *x*dx*lens_ipow(dy, 2) + -0.024014 *x*lens_ipow(dx, 3) + -0.000889007 *x*y*dx*dy + -1.2894e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -6.67779e-08 *lens_ipow(x, 4) + -15.2367 *lens_ipow(dy, 6) + -59.9699 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -95.6303 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -19.4174 *lens_ipow(dx, 6) + -0.000198097 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -1.23354e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -0.00028129 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + -0.0170956 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -0.000684665 *lens_ipow(x, 2)*y*lens_ipow(dy, 3) + -2.78293e-05 *lens_ipow(x, 3)*lens_ipow(dx, 3) + 7.80966e-07 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -0.16413 *lens_ipow(y, 2)*lens_ipow(dx, 6) + 1.22364 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + -0.000843017 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -6.90113e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dy, 2) + -9.96442e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -286.151 *x*lens_ipow(dx, 7)*lens_ipow(dy, 2) + -0.0658487 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 6) + 0.00531327 *x*lens_ipow(y, 3)*lens_ipow(dx, 5)*dy + 0.00489262 *lens_ipow(x, 2)*y*lens_ipow(dx, 6)*dy + 1.6838e-09 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*dy + 0.355518 *lens_ipow(lambda, 11);
