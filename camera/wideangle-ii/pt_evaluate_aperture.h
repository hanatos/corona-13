const float out_x =  + -2.75777e-05  + 35.5802 *dx + 9.16576e-06 *y + 0.57611 *x + 0.0045315 *dx*dy + 8.06954e-05 *y*dx + 2.53463e-06 *lens_ipow(y, 2) + -7.80895e-07 *lens_ipow(x, 2) + 38.1235 *dx*lens_ipow(dy, 2) + 38.2222 *lens_ipow(dx, 3) + 3.0928 *y*dx*dy + 0.0454737 *lens_ipow(y, 2)*dx + 1.19486 *x*lens_ipow(dy, 2) + 4.31218 *x*lens_ipow(dx, 2) + 0.0795652 *x*y*dy + 5.09669e-05 *x*y*dx + 0.00107686 *x*lens_ipow(y, 2) + 0.125814 *lens_ipow(x, 2)*dx + 0.00107984 *lens_ipow(x, 3) + -0.0644539 *x*lens_ipow(lambda, 3) + -1.96618 *dx*lens_ipow(lambda, 4) + 0.000801215 *lens_ipow(x, 2)*y*dx*dy + 7.95431e-06 *lens_ipow(x, 3)*y*dy + 1.38357e-08 *lens_ipow(x, 4)*y + 1.66823e-08 *lens_ipow(x, 5) + -0.316163 *y*lens_ipow(dx, 4)*dy + 7.54716e-08 *lens_ipow(x, 4)*y*dy + 1.52972e-07 *x*lens_ipow(y, 5)*dy*lens_ipow(lambda, 2) + 3.87508e-12 *x*lens_ipow(y, 8) + -5.32515e-07 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*dy + 4.76218e-11 *lens_ipow(x, 5)*lens_ipow(y, 4) + 2.15057e-08 *lens_ipow(x, 7)*lens_ipow(dy, 2) + 51.781 *x*y*lens_ipow(dx, 4)*lens_ipow(dy, 3)*lambda + 2.53133e-14 *lens_ipow(x, 10) + 9.4202 *dx*lens_ipow(lambda, 10) + 0.342727 *x*lens_ipow(lambda, 10) + -0.00100112 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 4.27468e-08 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(dx, 3) + -3.60283e-10 *lens_ipow(x, 8)*y*dx*dy + 8.46017e-14 *lens_ipow(x, 9)*lens_ipow(y, 2);
const float out_y =  + -5.95104e-06  + 35.5792 *dy + 0.57582 *y + 4.90396e-06 *x + 0.00412335 *lens_ipow(dx, 2) + 0.00020035 *y*dx + -3.6962e-05 *x*dy + 37.9917 *lens_ipow(dy, 3) + 38.0517 *lens_ipow(dx, 2)*dy + 4.30109 *y*lens_ipow(dy, 2) + 1.20187 *y*lens_ipow(dx, 2) + 0.125568 *lens_ipow(y, 2)*dy + 0.00107905 *lens_ipow(y, 3) + 3.10618 *x*dx*dy + 0.0801155 *x*y*dx + 0.0455699 *lens_ipow(x, 2)*dy + 0.00108298 *lens_ipow(x, 2)*y + -0.0622474 *y*lens_ipow(lambda, 3) + 1.09019e-07 *x*lens_ipow(y, 3) + -1.88828 *dy*lens_ipow(lambda, 4) + 1.87954e-08 *lens_ipow(y, 5) + 0.000867341 *x*lens_ipow(y, 2)*dx*dy + 3.22142e-06 *x*lens_ipow(y, 3)*dx + 9.51235e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 1.96136 *x*y*dx*lens_ipow(dy, 4)*lambda + -5.8194e-08 *x*lens_ipow(y, 6)*dx*dy + 0.000534861 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -6.20265e-07 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy + 7.09764e-11 *lens_ipow(x, 4)*lens_ipow(y, 5) + -5.33428 *x*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 5) + 0.00927332 *x*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 5) + -2.48897e-05 *lens_ipow(x, 4)*dy*lens_ipow(lambda, 5) + 8.90388 *dy*lens_ipow(lambda, 10) + 0.323866 *y*lens_ipow(lambda, 10) + 7.43515e-06 *lens_ipow(y, 6)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + 2.70745e-10 *lens_ipow(y, 9)*lens_ipow(dx, 2) + -0.000591592 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*lens_ipow(dy, 4) + -1.82172e-08 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(lambda, 4) + 1.1258e-08 *lens_ipow(x, 8)*lens_ipow(dy, 3) + 4.68681e-10 *lens_ipow(x, 8)*y*lens_ipow(dy, 2);
const float out_dx =  + 5.2032e-06  + -0.139957 *dx + 1.22714e-06 *y + -0.0302107 *x + -0.000329405 *lens_ipow(dx, 2) + 1.09527e-07 *lens_ipow(x, 2) + -2.49266 *dx*lens_ipow(dy, 2) + -2.55322 *lens_ipow(dx, 3) + -0.0159219 *y*dx*dy + 0.00050433 *lens_ipow(y, 2)*dx + -0.00215066 *x*lens_ipow(dy, 2) + -0.0214227 *x*lens_ipow(dx, 2) + 0.00185727 *x*y*dy + 3.01562e-05 *x*lens_ipow(y, 2) + 0.0022914 *lens_ipow(x, 2)*dx + 2.75364e-05 *lens_ipow(x, 3) + -0.00330274 *x*lens_ipow(lambda, 3) + -0.218552 *dx*lens_ipow(lambda, 4) + 0.000298543 *x*y*lens_ipow(dx, 2)*dy + -2.51135e-07 *lens_ipow(x, 3)*y*dy + 2.48759e-08 *lens_ipow(x, 5) + 0.000645342 *x*lens_ipow(y, 2)*lens_ipow(dx, 4) + 3.03135e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + -5.31132e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -0.067713 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4)*lambda + -0.0125971 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -7.86213e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lambda + 0.00608326 *lens_ipow(x, 3)*lens_ipow(dx, 6) + 9.73246e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy*lens_ipow(lambda, 2) + 2.32709e-08 *lens_ipow(x, 6)*dx*lens_ipow(lambda, 3) + 1.03168 *dx*lens_ipow(lambda, 10) + 387.896 *lens_ipow(dx, 3)*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + 196.79 *lens_ipow(dx, 7)*lens_ipow(lambda, 4) + 0.0167349 *x*lens_ipow(lambda, 10) + -0.00144778 *x*y*dy*lens_ipow(lambda, 8) + 1.58442e-15 *x*lens_ipow(y, 10) + -1.6491e-10 *lens_ipow(x, 2)*lens_ipow(y, 7)*dx*dy + 8.77876e-14 *lens_ipow(x, 5)*lens_ipow(y, 6) + -7.50942e-11 *lens_ipow(x, 8)*y*dx*dy + 2.17066e-14 *lens_ipow(x, 9)*lens_ipow(y, 2);
const float out_dy =  + 2.40112e-06  + -0.140321 *dy + -0.0303397 *y + 8.11769e-07 *x + -2.51572 *lens_ipow(dy, 3) + -2.47233 *lens_ipow(dx, 2)*dy + -0.0184507 *y*lens_ipow(dy, 2) + -0.00271495 *y*lens_ipow(dx, 2) + 0.00228883 *lens_ipow(y, 2)*dy + 2.74293e-05 *lens_ipow(y, 3) + -0.01588 *x*dx*dy + 0.00177903 *x*y*dx + 0.000508481 *lens_ipow(x, 2)*dy + 2.99661e-05 *lens_ipow(x, 2)*y + -0.221456 *dy*lens_ipow(lambda, 4) + -0.00481273 *y*lens_ipow(lambda, 4) + 2.73159e-08 *lens_ipow(y, 5) + 0.0049142 *x*y*dx*lens_ipow(dy, 2) + 0.000213464 *x*lens_ipow(y, 2)*dx*dy + 1.49055e-06 *x*lens_ipow(y, 3)*dx + 0.00147276 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -9.64057e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -3.22267e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy + -4.91102e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 3)*lambda + 6.91148e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy*lambda + -1.13532e-06 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lambda + 227.227 *lens_ipow(dy, 9) + 178.208 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 2) + -0.000569371 *lens_ipow(y, 4)*lens_ipow(dy, 5) + -0.0504257 *x*y*lens_ipow(dx, 5)*lens_ipow(lambda, 2) + -1.3532e-08 *x*lens_ipow(y, 6)*dx*dy + 0.0268176 *lens_ipow(x, 3)*dx*lens_ipow(dy, 5) + 7.83766e-12 *lens_ipow(x, 4)*lens_ipow(y, 5) + -3.09896e-08 *lens_ipow(y, 5)*lens_ipow(lambda, 5) + -0.00491125 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + 1.05358 *dy*lens_ipow(lambda, 10) + 0.0234807 *y*lens_ipow(lambda, 10) + 1.62637e-14 *lens_ipow(x, 2)*lens_ipow(y, 9) + 5.79511e-14 *lens_ipow(x, 10)*dy + 3.61017e-15 *lens_ipow(x, 10)*y;
const float out_transmittance =  + 0.511991  + 0.303212 *lambda + 3.36175e-05 *dx + 6.59577e-07 *x + -0.0276975 *lens_ipow(dy, 2) + -0.000302309 *dx*dy + -0.0284943 *lens_ipow(dx, 2) + -0.00109379 *y*dy + -1.62639e-05 *lens_ipow(y, 2) + -9.5859e-06 *x*dy + -0.00115347 *x*dx + -2.36694e-07 *x*y + -1.62167e-05 *lens_ipow(x, 2) + -0.253272 *lens_ipow(lambda, 3) + 1.14856e-06 *x*y*dy + 0.000127482 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.11944e-07 *lens_ipow(y, 3)*dx + -0.00566463 *x*dx*lens_ipow(dy, 2) + -0.000358716 *x*y*dx*dy + -5.70355e-06 *lens_ipow(x, 2)*y*dy + -0.581371 *lens_ipow(dy, 6) + -2.9863 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -4.32363 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -0.798006 *lens_ipow(dx, 6) + 1.32229e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -3.99618e-10 *lens_ipow(y, 6) + -1.42063e-09 *lens_ipow(x, 2)*lens_ipow(y, 4) + 1.12358e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -1.83645e-09 *lens_ipow(x, 4)*lens_ipow(y, 2) + -4.05911e-10 *lens_ipow(x, 6) + 2.33193e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.330474 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 2.65969e-08 *x*lens_ipow(y, 5)*dx*dy + -0.000312595 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.33601e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy + -1.58274e-05 *lens_ipow(x, 4)*lens_ipow(dy, 4) + -3.33081e-07 *lens_ipow(y, 6)*lens_ipow(dx, 4) + 0.00170369 *x*lens_ipow(y, 3)*lens_ipow(dx, 5)*dy + 3.85649e-10 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.458177 *lens_ipow(lambda, 11);
