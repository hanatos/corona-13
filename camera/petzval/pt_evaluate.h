const float out_x =  + 4.12859e-06  + 9.45701e-05 *dy + 63.788 *dx + 0.580638 *x + 0.00691092 *dx*dy + 0.00593982 *lens_ipow(dx, 2) + 3.54369e-05 *y*dy + 6.50137e-06 *y*dx + -2.53243e-06 *lens_ipow(x, 2) + -42.1459 *dx*lens_ipow(dy, 2) + -41.5653 *lens_ipow(dx, 3) + 0.0101871 *lens_ipow(y, 2)*dx + 0.402587 *x*lens_ipow(dy, 2) + 0.440776 *x*lens_ipow(dx, 2) + 0.0278479 *x*y*dy + 0.000310157 *x*lens_ipow(y, 2) + -7.89379e-06 *lens_ipow(x, 2)*dy + 0.038931 *lens_ipow(x, 2)*dx + 0.000316531 *lens_ipow(x, 3) + -0.167559 *dx*lens_ipow(dy, 3) + 0.10932 *x*lens_ipow(lambda, 3) + 5.43354e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 6.98846 *dx*lens_ipow(lambda, 4) + -13.4067 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.00034174 *lens_ipow(x, 2)*y*dx*dy + 2.87462e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 6.7319e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + 8.47919e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 3) + -0.861676 *x*lens_ipow(dy, 6) + 0.0117883 *lens_ipow(x, 2)*lens_ipow(dx, 5) + -3.31947e-05 *lens_ipow(y, 4)*lens_ipow(dx, 5) + 6.70399e-08 *x*lens_ipow(y, 4)*lens_ipow(lambda, 4) + 3.11338e-09 *lens_ipow(x, 7)*lens_ipow(dy, 2)*lambda + -34.0239 *dx*lens_ipow(lambda, 10) + 73.4031 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -4.85342 *lens_ipow(y, 2)*lens_ipow(dx, 9) + -0.588629 *x*lens_ipow(lambda, 10) + 10.5021 *lens_ipow(x, 2)*lens_ipow(dx, 7)*lens_ipow(dy, 2) + 1.21706e-15 *lens_ipow(x, 3)*lens_ipow(y, 8) + 1.94912e-16 *lens_ipow(x, 11);
const float out_y =  + 9.84173e-05  + 63.7892 *dy + -0.000241407 *dx + 0.580787 *y + -8.3677e-06 *x + -0.00215718 *lens_ipow(dy, 2) + 4.15587e-05 *x*dy + -7.87069e-07 *lens_ipow(x, 2) + -41.6097 *lens_ipow(dy, 3) + -42.3765 *lens_ipow(dx, 2)*dy + 0.442704 *y*lens_ipow(dy, 2) + 0.406335 *y*lens_ipow(dx, 2) + 0.0390684 *lens_ipow(y, 2)*dy + 0.000315021 *lens_ipow(y, 3) + 0.0280539 *x*y*dx + 2.18427e-07 *x*lens_ipow(y, 2) + 0.0101966 *lens_ipow(x, 2)*dy + 0.000313623 *lens_ipow(x, 2)*y + 0.107869 *y*lens_ipow(lambda, 3) + 2.88198e-05 *x*y*lens_ipow(dx, 2) + 6.99505 *dy*lens_ipow(lambda, 4) + 1.82732e-05 *lens_ipow(y, 3)*lens_ipow(lambda, 2) + -0.000291516 *x*lens_ipow(y, 2)*dx*dy + 0.000136211 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -3.33244e-06 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 0.000454962 *x*dx*dy*lens_ipow(lambda, 3) + -1.13353e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + -1.3032 *y*lens_ipow(dx, 6) + 0.00721634 *lens_ipow(y, 2)*lens_ipow(dy, 5) + 0.00126756 *lens_ipow(y, 3)*lens_ipow(dx, 4) + -4.01578e-06 *x*lens_ipow(y, 3)*dx*lens_ipow(lambda, 2) + 4.2306e-09 *lens_ipow(x, 6)*dy*lambda + 5.32008e-14 *lens_ipow(y, 9) + 2.58723e-09 *lens_ipow(y, 7)*lens_ipow(dx, 2)*lambda + -34.2711 *dy*lens_ipow(lambda, 10) + -0.583892 *y*lens_ipow(lambda, 10) + 4.9731 *lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -0.000408997 *lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 3.73e-15 *lens_ipow(x, 6)*lens_ipow(y, 5) + 7.46349e-13 *lens_ipow(x, 8)*y*lens_ipow(lambda, 2);
const float out_dx =  + 3.75124e-07  + -1.62788 *dx + -4.36351e-09 *y + -0.0305627 *x + -1.14114 *dx*lens_ipow(dy, 2) + 0.960382 *lens_ipow(dx, 3) + -0.0477622 *y*dx*dy + -0.000394659 *lens_ipow(y, 2)*dx + -0.0334408 *x*lens_ipow(dy, 2) + -0.0017499 *x*lens_ipow(dx, 2) + -0.00115196 *x*y*dy + -6.69053e-06 *x*lens_ipow(y, 2) + -0.00060646 *lens_ipow(x, 2)*dx + -3.10061e-06 *lens_ipow(x, 3) + 0.0370781 *dx*lens_ipow(lambda, 3) + -0.000200509 *x*lens_ipow(lambda, 3) + 1.72885 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.57155e-05 *lens_ipow(x, 2)*y*dx*dy + -3.79636e-09 *lens_ipow(x, 3)*lens_ipow(y, 2)*lambda + 0.000512223 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -6.4637e-05 *lens_ipow(x, 3)*lens_ipow(dy, 4) + 27.7906 *lens_ipow(dx, 9) + -0.000317397 *x*lens_ipow(y, 2)*lens_ipow(dx, 6) + -1.35798e-11 *lens_ipow(x, 7)*lens_ipow(dy, 2) + -0.242612 *dx*lens_ipow(lambda, 10) + -4.99303 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 6);
const float out_dy =  + -1.08219e-06  + -1.6281 *dy + 4.21623e-06 *dx + -0.0305648 *y + 2.02282e-05 *lens_ipow(dy, 2) + 0.966154 *lens_ipow(dy, 3) + 3.08821 *lens_ipow(dx, 2)*dy + -0.00137119 *y*lens_ipow(dy, 2) + 0.00642377 *y*lens_ipow(dx, 2) + -0.00059824 *lens_ipow(y, 2)*dy + -3.05808e-06 *lens_ipow(y, 3) + 0.0735958 *x*dx*dy + 0.000384833 *lens_ipow(x, 2)*dy + 7.84626e-07 *lens_ipow(x, 2)*y + 0.0379537 *dy*lens_ipow(lambda, 3) + -0.000203596 *y*lens_ipow(lambda, 3) + -6.60185e-09 *lens_ipow(y, 5)*lens_ipow(dx, 2) + -0.104594 *x*lens_ipow(dx, 5)*dy + -0.0755948 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 5) + 29.2819 *lens_ipow(dy, 9) + 414.364 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + -1.80799e-12 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy + 3.66008e-15 *lens_ipow(x, 8)*y + -0.250029 *dy*lens_ipow(lambda, 10);
const float out_transmittance =  + 0.695607  + 0.137175 *lambda + 5.30727e-06 *dx + 4.9533e-07 *y + -0.0143904 *lens_ipow(dy, 2) + -0.0113874 *lens_ipow(dx, 2) + -0.000567518 *y*dy + -1.74105e-05 *lens_ipow(y, 2) + -5.06366e-06 *x*dy + -0.000574729 *x*dx + -1.74568e-05 *lens_ipow(x, 2) + -0.115482 *lens_ipow(lambda, 3) + 1.14242e-05 *y*dx*dy + -0.000129152 *y*dy*lens_ipow(lambda, 2) + 0.000222906 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 8.82067e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.000178598 *x*dx*lens_ipow(lambda, 2) + 0.000156553 *x*y*dx*dy + 8.91984e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.000204498 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -1.11135e-10 *lens_ipow(x, 2)*lens_ipow(y, 3) + -7.68996 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -2.74706 *lens_ipow(dx, 6) + -4.20595e-10 *lens_ipow(y, 6) + -1.02151e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -7.41889e-05 *lens_ipow(x, 2)*dx*lens_ipow(dy, 3) + -1.16018e-09 *lens_ipow(x, 2)*lens_ipow(y, 4) + -1.17593e-09 *lens_ipow(x, 4)*lens_ipow(y, 2) + -4.42264e-10 *lens_ipow(x, 6) + 0.00511412 *x*y*lens_ipow(dx, 3)*dy*lambda + -17.8435 *lens_ipow(dy, 8) + -58.0627 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + 2.54104e-05 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + 6.79814e-06 *lens_ipow(x, 4)*lens_ipow(dx, 4) + -5.7828e-11 *lens_ipow(x, 6)*y*dy + -0.985058 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -0.186187 *lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 1.5948e-08 *lens_ipow(y, 6)*lens_ipow(dy, 4) + -5.97847e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.212409 *lens_ipow(lambda, 11);
