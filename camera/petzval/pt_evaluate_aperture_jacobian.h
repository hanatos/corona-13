const float dx00 =  + 0.792054  + -2.0513e-06 *x + 0.123821 *lens_ipow(dy, 2) + 0.658175 *lens_ipow(dx, 2) + 0.013701 *y*dy + 0.000166393 *lens_ipow(y, 2) + -1.59827e-05 *x*dy + 0.045908 *x*dx + 0.000504897 *lens_ipow(x, 2) + 0.0553584 *lens_ipow(lambda, 3) + 6.06162e-06 *lens_ipow(y, 2)*lens_ipow(lambda, 3) + 0.00063748 *x*lens_ipow(dy, 4) + 0.00750986 *y*lens_ipow(dy, 5) + 0.0536028 *x*dx*lens_ipow(dy, 4) + 0.000147151 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + 1.08071e-08 *lens_ipow(x, 5)*dx + -0.289556 *x*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 9.44516e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(lambda, 3) + 6.76859e-10 *lens_ipow(x, 6)*lens_ipow(lambda, 3) + -0.298715 *lens_ipow(lambda, 10) + 1.38221 *x*lens_ipow(dx, 9) + 3.39014e-15 *lens_ipow(x, 2)*lens_ipow(y, 8) + 1.65487e-07 *lens_ipow(x, 6)*lens_ipow(dy, 4) + 1.12655e-14 *lens_ipow(x, 8)*lens_ipow(y, 2)+0.0f;
const float dx01 =  + 1.20573e-06  + 0.534569 *dx*dy + 0.0183343 *y*dx + 0.013701 *x*dy + 0.000332785 *x*y + 0.00388809 *y*dx*lens_ipow(dy, 2) + 1.21232e-05 *x*y*lens_ipow(lambda, 3) + 0.00750986 *x*lens_ipow(dy, 5) + 4.90502e-05 *lens_ipow(x, 3)*lens_ipow(dx, 2)*dy + 0.116606 *y*lens_ipow(dx, 6)*dy + 3.77806e-10 *lens_ipow(x, 5)*y*lens_ipow(lambda, 3) + -4.50813 *y*lens_ipow(dx, 9) + 9.04038e-15 *lens_ipow(x, 3)*lens_ipow(y, 7) + 2.50345e-15 *lens_ipow(x, 9)*y+0.0f;
const float dx02 =  + 50.3715  + 0.007628 *dx + 0.101002 *lens_ipow(dy, 2) + 0.722778 *lens_ipow(dx, 2) + 0.534569 *y*dy + 0.00916713 *lens_ipow(y, 2) + 1.31635 *x*dx + 0.022954 *lens_ipow(x, 2) + -0.0537504 *lens_ipow(dy, 3) + 0.161431 *lens_ipow(dx, 2)*dy + 3.57819 *lens_ipow(lambda, 4) + 0.00194404 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.0268014 *lens_ipow(x, 2)*lens_ipow(dy, 4) + 9.81004e-05 *lens_ipow(x, 3)*y*dx*dy + 1.80118e-09 *lens_ipow(x, 6) + 0.349819 *lens_ipow(y, 2)*lens_ipow(dx, 5)*dy + -0.723889 *lens_ipow(x, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -17.3519 *lens_ipow(lambda, 10) + -20.2866 *lens_ipow(y, 2)*lens_ipow(dx, 8) + 6.21996 *lens_ipow(x, 2)*lens_ipow(dx, 8)+0.0f;
const float dx03 =  + 0.000170721  + 0.202004 *dx*dy + 0.534569 *y*dx + 0.247643 *x*dy + 0.013701 *x*y + -7.99133e-06 *lens_ipow(x, 2) + -0.161251 *dx*lens_ipow(dy, 2) + 0.0538104 *lens_ipow(dx, 3) + 0.00388809 *lens_ipow(y, 2)*dx*dy + 0.00127496 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.0375493 *x*y*lens_ipow(dy, 4) + 0.107206 *lens_ipow(x, 2)*dx*lens_ipow(dy, 3) + 4.90502e-05 *lens_ipow(x, 3)*y*lens_ipow(dx, 2) + 0.0583032 *lens_ipow(y, 2)*lens_ipow(dx, 6) + -0.289556 *lens_ipow(x, 2)*lens_ipow(dx, 5)*dy + 9.45637e-08 *lens_ipow(x, 7)*lens_ipow(dy, 3)+0.0f;
const float dx04 =  + 0.166075 *x*lens_ipow(lambda, 2) + 14.3127 *dx*lens_ipow(lambda, 3) + 1.81849e-05 *x*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 5.6671e-10 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 2.90083e-10 *lens_ipow(x, 7)*lens_ipow(lambda, 2) + -173.519 *dx*lens_ipow(lambda, 9) + -2.98715 *x*lens_ipow(lambda, 9)+0.0f;
const float dx10 =  + -7.02206e-07  + -6.73559e-06 *dy + 0.504188 *dx*dy + 0.013111 *y*dx + 0.0180089 *x*dy + 0.000322478 *x*y + -0.00339704 *x*lens_ipow(dy, 3) + 0.00229183 *y*lens_ipow(dx, 5) + 8.74268e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.0045727 *x*dy*lens_ipow(lambda, 6) + -9.44344e-14 *lens_ipow(y, 8)*dx + 0.000274665 *lens_ipow(y, 3)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 2.44912e-12 *x*lens_ipow(y, 7)*lens_ipow(lambda, 2) + 2.72666e-14 *lens_ipow(x, 5)*lens_ipow(y, 5)+0.0f;
const float dx11 =  + 0.793472  + 2.57101e-05 *dy + 0.104314 *lens_ipow(dx, 2) + 0.0371675 *y*dy + 0.000447839 *lens_ipow(y, 2) + 0.013111 *x*dx + 0.000161239 *lens_ipow(x, 2) + 0.0490546 *lens_ipow(lambda, 3) + 1.01948 *lens_ipow(dy, 2)*lambda + 0.0254098 *y*dy*lens_ipow(lambda, 3) + 0.0861072 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.00229183 *x*lens_ipow(dx, 5) + 8.74268e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + 0.0655604 *lens_ipow(dx, 4)*lens_ipow(lambda, 4) + -0.00926449 *lens_ipow(y, 2)*lens_ipow(dy, 6) + 0.00443964 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 5) + -3.24835e-13 *lens_ipow(y, 8)*lambda + -7.55475e-13 *x*lens_ipow(y, 7)*dx + -0.24787 *lens_ipow(lambda, 10) + 1.4358e-06 *lens_ipow(y, 4)*lens_ipow(lambda, 6) + 0.000823994 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 8.57193e-12 *lens_ipow(x, 2)*lens_ipow(y, 6)*lens_ipow(lambda, 2) + 2.27222e-14 *lens_ipow(x, 6)*lens_ipow(y, 4)+0.0f;
const float dx12 =  + -7.98426e-05  + -2.57256 *dx*dy + 0.208628 *y*dx + 0.504188 *x*dy + 0.013111 *x*y + 7.99884 *dx*dy*lens_ipow(lambda, 3) + 0.0861072 *lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 0.0114591 *x*y*lens_ipow(dx, 4) + 8.74268e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + 0.262242 *y*lens_ipow(dx, 3)*lens_ipow(lambda, 4) + 0.00295976 *lens_ipow(y, 3)*dx*lens_ipow(lambda, 5) + -9.44344e-14 *x*lens_ipow(y, 8) + 0.000274665 *x*lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4)+0.0f;
const float dx13 =  + 50.4606  + 2.57101e-05 *y + -6.73559e-06 *x + -33.3055 *lens_ipow(dy, 2) + -1.28628 *lens_ipow(dx, 2) + 0.0185838 *lens_ipow(y, 2) + 0.504188 *x*dx + 0.00900447 *lens_ipow(x, 2) + 2.03896 *y*dy*lambda + 2.62835 *lens_ipow(lambda, 4) + 105.784 *lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.00509555 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 3.99942 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 0.0127049 *lens_ipow(y, 2)*lens_ipow(lambda, 3) + 0.129161 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.37134e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.018529 *lens_ipow(y, 3)*lens_ipow(dy, 5) + -0.00228635 *lens_ipow(x, 2)*lens_ipow(lambda, 6) + -86.2577 *lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -12.1588 *lens_ipow(lambda, 10) + -231.177 *lens_ipow(dy, 2)*lens_ipow(lambda, 8) + 0.000549329 *x*lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 4)+0.0f;
const float dx14 =  + 0.147164 *y*lens_ipow(lambda, 2) + 1.01948 *y*lens_ipow(dy, 2) + 10.5134 *dy*lens_ipow(lambda, 3) + 70.5227 *lens_ipow(dy, 3)*lambda + 11.9983 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + 0.0381147 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + 0.262242 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 3) + -0.0137181 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 5) + -86.2577 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + 0.0073994 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -3.60928e-14 *lens_ipow(y, 9) + -121.588 *dy*lens_ipow(lambda, 9) + -616.472 *lens_ipow(dy, 3)*lens_ipow(lambda, 7) + -2.4787 *y*lens_ipow(lambda, 9) + 1.72295e-06 *lens_ipow(y, 5)*lens_ipow(lambda, 5) + 0.00109866 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 2.44912e-12 *lens_ipow(x, 2)*lens_ipow(y, 7)*lambda+0.0f;
const float dx20 =  + -0.0102713  + 3.7942e-08 *dy + -0.00216452 *lens_ipow(dy, 2) + 0.000337277 *y*dy + 3.87528e-06 *lens_ipow(y, 2) + 0.000832107 *x*dx + 2.35641e-08 *x*y + 0.00225279 *lens_ipow(lambda, 3) + 1.80486e-05 *lens_ipow(x, 2)*lambda + -0.0112627 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 9.42778e-10 *lens_ipow(y, 4) + 4.33281e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 1.26754e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 1.57498e-08 *lens_ipow(x, 4) + 1.89557e-06 *lens_ipow(y, 2)*lens_ipow(lambda, 3) + -8.02074e-05 *x*y*dx*dy*lambda + 0.000885214 *y*lens_ipow(dy, 5) + -0.000410338 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.00801133 *y*lens_ipow(dx, 2)*lens_ipow(dy, 5) + 0.00130984 *x*y*lens_ipow(dx, 5)*dy + -0.00130513 *lens_ipow(x, 2)*lens_ipow(dx, 6) + -0.000271162 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 5) + -0.011703 *lens_ipow(lambda, 10) + -0.000194971 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -2.63322e-06 *lens_ipow(x, 4)*lens_ipow(dy, 6)+0.0f;
const float dx21 =  + -3.83536e-08  + 7.60148e-07 *dy + -2.51485e-05 *lens_ipow(dx, 2) + 0.000278958 *y*dx + 0.000337277 *x*dy + 7.75057e-06 *x*y + 1.17821e-08 *lens_ipow(x, 2) + 3.77111e-09 *x*lens_ipow(y, 3) + 8.45029e-09 *lens_ipow(x, 3)*y + 3.79115e-06 *x*y*lens_ipow(lambda, 3) + -4.01037e-05 *lens_ipow(x, 2)*dx*dy*lambda + 0.000885214 *x*lens_ipow(dy, 5) + 0.00801133 *x*lens_ipow(dx, 2)*lens_ipow(dy, 5) + 0.000654922 *lens_ipow(x, 2)*lens_ipow(dx, 5)*dy + 0.00337109 *y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx22 =  + 0.608182  + 0.000149416 *dx + -0.534525 *lens_ipow(dy, 2) + -1.54043 *lens_ipow(dx, 2) + -5.02969e-05 *y*dx + 0.000139479 *lens_ipow(y, 2) + 0.000416054 *lens_ipow(x, 2) + -0.0225253 *x*dx*lens_ipow(lambda, 2) + 0.242838 *lens_ipow(lambda, 5) + -4.01037e-05 *lens_ipow(x, 2)*y*dy*lambda + -0.000273558 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + 0.0160227 *x*y*dx*lens_ipow(dy, 5) + 0.00327461 *lens_ipow(x, 2)*y*lens_ipow(dx, 4)*dy + -0.00261026 *lens_ipow(x, 3)*lens_ipow(dx, 5) + -0.000180775 *lens_ipow(x, 3)*dx*lens_ipow(lambda, 5) + -0.901541 *lens_ipow(lambda, 10) + -4.96055 *lens_ipow(dx, 2)*lens_ipow(lambda, 8) + -57.0075 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -344.395 *lens_ipow(dx, 6)*lens_ipow(lambda, 4) + 0.00168554 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx23 =  + 7.60148e-07 *y + 3.7942e-08 *x + -1.06905 *dx*dy + -0.00432904 *x*dy + 0.000337277 *x*y + 2.88854e-05 *lens_ipow(x, 3)*dy + -4.01037e-05 *lens_ipow(x, 2)*y*dx*lambda + 0.00442607 *x*y*lens_ipow(dy, 4) + -0.000273558 *lens_ipow(x, 3)*lens_ipow(dx, 2)*dy + 0.0400566 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 4) + 0.000654922 *lens_ipow(x, 2)*y*lens_ipow(dx, 5) + -38.005 *lens_ipow(dx, 3)*dy*lens_ipow(lambda, 6) + 0.00337109 *lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 6) + -0.000129981 *lens_ipow(x, 3)*dy*lens_ipow(lambda, 6) + -3.15986e-06 *lens_ipow(x, 5)*lens_ipow(dy, 5)+0.0f;
const float dx24 =  + 0.00675838 *x*lens_ipow(lambda, 2) + 6.0162e-06 *lens_ipow(x, 3) + -0.0225253 *x*lens_ipow(dx, 2)*lambda + 1.21419 *dx*lens_ipow(lambda, 4) + 5.68672e-06 *x*lens_ipow(y, 2)*lens_ipow(lambda, 2) + -4.01037e-05 *lens_ipow(x, 2)*y*dx*dy + -0.000451937 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -9.01541 *dx*lens_ipow(lambda, 9) + -13.2281 *lens_ipow(dx, 3)*lens_ipow(lambda, 7) + -114.015 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -196.797 *lens_ipow(dx, 7)*lens_ipow(lambda, 3) + 0.0101133 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -0.11703 *x*lens_ipow(lambda, 9) + -0.000389943 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx30 =  + -4.74824e-07  + 0.000431408 *y*dx + 8.81992e-06 *x*y + -8.36458e-05 *lens_ipow(dx, 2)*dy + 0.000476579 *x*dy*lambda + -0.000164039 *y*dx*lens_ipow(lambda, 2) + 3.20538e-11 *lens_ipow(y, 4) + 0.000195937 *x*lens_ipow(dy, 3) + 2.67579e-09 *x*lens_ipow(y, 3) + 4.92501e-07 *lens_ipow(x, 3)*dy + 4.08074e-08 *lens_ipow(x, 3)*y*lens_ipow(lambda, 2) + 0.0207307 *y*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 0.00782527 *y*lens_ipow(dx, 7) + -0.000942381 *lens_ipow(y, 2)*dx*lens_ipow(dy, 5) + 0.00783278 *y*lens_ipow(dx, 3)*lens_ipow(lambda, 6) + -0.00129064 *x*dy*lens_ipow(lambda, 8) + 1.44943e-16 *x*lens_ipow(y, 9)+0.0f;
const float dx31 =  + -0.0103448  + 1.78648e-06 *dy + 3.2244e-06 *dx + 0.00109104 *y*dy + 1.2836e-05 *lens_ipow(y, 2) + 0.000431408 *x*dx + 4.40996e-06 *lens_ipow(x, 2) + 0.0024682 *lens_ipow(lambda, 3) + 4.03207e-06 *lens_ipow(y, 2)*lambda + 1.89509e-06 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 2.28595e-09 *lens_ipow(y, 4) + -0.000164039 *x*dx*lens_ipow(lambda, 2) + 1.28215e-10 *x*lens_ipow(y, 3) + 4.01368e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + 1.02018e-08 *lens_ipow(x, 4)*lens_ipow(lambda, 2) + 0.0047909 *y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + -0.00029444 *lens_ipow(y, 2)*lens_ipow(dy, 6) + 0.0207307 *x*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 0.00782527 *x*lens_ipow(dx, 7) + -0.00188476 *x*y*dx*lens_ipow(dy, 5) + 1.26641e-06 *lens_ipow(y, 3)*dy*lens_ipow(lambda, 5) + -0.0128775 *lens_ipow(lambda, 10) + -7.44695e-09 *lens_ipow(y, 4)*dx*lens_ipow(lambda, 5) + 0.00783278 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 6) + 6.52245e-16 *lens_ipow(x, 2)*lens_ipow(y, 8)+0.0f;
const float dx32 =  + -1.87294e-05  + 3.2244e-06 *y + -0.967619 *dx*dy + 0.000431408 *x*y + -0.000167292 *x*dx*dy + 1.2634e-06 *lens_ipow(y, 3)*dx + -0.000164039 *x*y*lens_ipow(lambda, 2) + -10.0871 *lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2) + 0.0047909 *lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 4) + 0.103653 *x*y*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 0.0547769 *x*y*lens_ipow(dx, 6) + -0.000942381 *x*lens_ipow(y, 2)*lens_ipow(dy, 5) + -139.321 *dx*lens_ipow(dy, 5)*lens_ipow(lambda, 4) + -1.48939e-09 *lens_ipow(y, 5)*lens_ipow(lambda, 5) + 0.0234983 *x*y*lens_ipow(dx, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx33 =  + 0.607813  + 1.78648e-06 *y + -1.57485 *lens_ipow(dy, 2) + -0.483809 *lens_ipow(dx, 2) + 0.000545522 *lens_ipow(y, 2) + -8.36458e-05 *x*lens_ipow(dx, 2) + 0.00023829 *lens_ipow(x, 2)*lambda + 0.000293905 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 1.23125e-07 *lens_ipow(x, 4) + 0.243968 *lens_ipow(lambda, 5) + -2.52177 *lens_ipow(dx, 4)*lens_ipow(lambda, 2) + 0.00239545 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -0.000588879 *lens_ipow(y, 3)*lens_ipow(dy, 5) + 0.0414614 *x*y*lens_ipow(dx, 5)*dy + -0.00471191 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 4) + 3.16602e-07 *lens_ipow(y, 4)*lens_ipow(lambda, 5) + -0.955327 *lens_ipow(lambda, 10) + -348.302 *lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -0.000645319 *lens_ipow(x, 2)*lens_ipow(lambda, 8)+0.0f;
const float dx34 =  + 0.00740459 *y*lens_ipow(lambda, 2) + 1.34402e-06 *lens_ipow(y, 3) + 0.00023829 *lens_ipow(x, 2)*dy + -0.000328079 *x*y*dx*lambda + 1.21984 *dy*lens_ipow(lambda, 4) + -5.04355 *lens_ipow(dx, 4)*dy*lambda + 2.04037e-08 *lens_ipow(x, 4)*y*lambda + 0.0095818 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + 1.58301e-06 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 4) + -9.55327 *dy*lens_ipow(lambda, 9) + -278.642 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 3) + -0.128775 *y*lens_ipow(lambda, 9) + -7.44695e-09 *lens_ipow(y, 5)*dx*lens_ipow(lambda, 4) + 0.0469967 *x*y*lens_ipow(dx, 3)*lens_ipow(lambda, 5) + -0.00516255 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 7)+0.0f;
const float dx40 =  + 7.32371e-09 *y + -3.12491e-05 *x + -0.000779615 *dx*lambda + -0.0127392 *dx*lens_ipow(dy, 2) + 0.00053086 *x*lens_ipow(dx, 2) + 0.00746722 *y*lens_ipow(dx, 3)*dy + -2.5205e-09 *x*lens_ipow(y, 4) + -3.0121e-07 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + -4.82767e-09 *lens_ipow(x, 3)*lens_ipow(y, 2) + -2.31126e-09 *lens_ipow(x, 5) + -3.12397e-09 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + 2.73869e-05 *lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + 0.000154145 *lens_ipow(x, 3)*lens_ipow(dx, 6) + 4.30409e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 9.20527e-08 *lens_ipow(x, 5)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.36431e-06 *x*lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -1.45047e-07 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 5)+0.0f;
const float dx41 =  + 3.70175e-07  + -3.19502e-05 *y + 7.32371e-09 *x + -0.000981915 *dy*lambda + 1.47383e-05 *dx*dy + 0.000518943 *y*lens_ipow(dy, 2) + 0.000185028 *y*lens_ipow(dx, 2) + -1.75668e-05 *y*lens_ipow(lambda, 3) + -2.84779e-09 *lens_ipow(y, 5) + 0.00746722 *x*lens_ipow(dx, 3)*dy + -5.041e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + -2.41384e-09 *lens_ipow(x, 4)*y + -4.68595e-09 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 8.21608e-05 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + -0.14262 *y*lens_ipow(dx, 8) + 1.09602e-07 *lens_ipow(y, 5)*lens_ipow(dy, 4) + 2.15204e-07 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.36431e-06 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx42 =  + 9.86266e-06  + -0.0113722 *dx + 1.47383e-05 *y*dy + -0.000779615 *x*lambda + 0.000185028 *lens_ipow(y, 2)*dx + -0.0127392 *x*lens_ipow(dy, 2) + 0.00053086 *lens_ipow(x, 2)*dx + -16.5871 *dx*lens_ipow(dy, 4) + -51.0276 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -14.5498 *lens_ipow(dx, 5) + 0.0224016 *x*y*lens_ipow(dx, 2)*dy + -0.128369 *dx*lens_ipow(lambda, 6) + 2.73869e-05 *x*lens_ipow(y, 3)*lens_ipow(dy, 3) + -0.570481 *lens_ipow(y, 2)*lens_ipow(dx, 7) + 0.000231217 *lens_ipow(x, 4)*lens_ipow(dx, 5) + 2.15204e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 3.06842e-08 *lens_ipow(x, 6)*dx*lens_ipow(dy, 2) + -2.90093e-08 *lens_ipow(x, 5)*lens_ipow(lambda, 5)+0.0f;
const float dx43 =  + -0.0182151 *dy + -0.000981915 *y*lambda + 1.47383e-05 *y*dx + 0.000518943 *lens_ipow(y, 2)*dy + -0.0254784 *x*dx*dy + -33.1742 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -25.5138 *lens_ipow(dx, 4)*dy + 0.00746722 *x*y*lens_ipow(dx, 3) + -0.106623 *dy*lens_ipow(lambda, 5) + -3.12397e-09 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -166.928 *lens_ipow(dy, 7) + 8.21608e-05 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + 7.30682e-08 *lens_ipow(y, 6)*lens_ipow(dy, 3) + 2.15204e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 3.06842e-08 *lens_ipow(x, 6)*lens_ipow(dx, 2)*dy + 3.36431e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 5)+0.0f;
const float dx44 =  + 0.0996122  + -0.251169 *lens_ipow(lambda, 2) + -0.000981915 *y*dy + -0.000779615 *x*dx + -2.63501e-05 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + -1.50605e-07 *lens_ipow(x, 4)*lambda + -0.266558 *lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.385107 *lens_ipow(dx, 2)*lens_ipow(lambda, 5) + 1.76039 *lens_ipow(lambda, 10) + 8.41077e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -1.45047e-07 *lens_ipow(x, 5)*dx*lens_ipow(lambda, 4)+0.0f;
