const float dx00 =  + 2.58883  + 2.41907e-06 *y + 1.04275e-05 *x + 1.26004 *lens_ipow(dy, 2) + 0.0414114 *y*dy + 0.000350368 *lens_ipow(y, 2) + 0.115257 *x*dx + 0.00105239 *lens_ipow(x, 2) + -0.0874267 *lens_ipow(lambda, 3) + 0.0227785 *lens_ipow(dx, 2)*lambda + 0.0131072 *y*dy*lambda + 2.20274e-06 *lens_ipow(y, 2)*dy + -6.80364e-05 *x*lens_ipow(lambda, 3) + 0.00551518 *x*lens_ipow(dy, 3)*lambda + 1.00066 *lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -4.21092e-06 *x*lens_ipow(y, 3)*dx*dy + 0.0531762 *lens_ipow(x, 2)*lens_ipow(dx, 4) + 0.000103079 *lens_ipow(y, 2)*lens_ipow(lambda, 5) + 0.000146681 *lens_ipow(x, 3)*dx*lens_ipow(lambda, 3) + 0.277279 *lens_ipow(lambda, 9) + 2.18957e-06 *lens_ipow(x, 4)*lens_ipow(lambda, 6) + 4.85525e-15 *lens_ipow(x, 6)*lens_ipow(y, 4)+0.0f;
const float dx01 =  + -2.28631e-05  + 2.41907e-06 *x + -1.18733 *dx*dy + 0.0228056 *y*dx + 0.0414114 *x*dy + 0.000700736 *x*y + 0.0131072 *x*dy*lambda + 4.40548e-06 *x*y*dy + 29.8208 *lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2) + -6.31638e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + 0.000206159 *x*y*lens_ipow(lambda, 5) + -4.1666 *y*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 1.43821 *y*lens_ipow(dx, 3)*lens_ipow(lambda, 6) + 2.77443e-15 *lens_ipow(x, 7)*lens_ipow(y, 3)+0.0f;
const float dx02 =  + 399.583  + 0.0564878 *dx + 1.70625 *lens_ipow(lambda, 2) + -241.438 *lens_ipow(dy, 2) + -735.461 *lens_ipow(dx, 2) + -1.18733 *y*dy + 0.0114028 *lens_ipow(y, 2) + 0.0576284 *lens_ipow(x, 2) + 0.045557 *x*dx*lambda + 1716.46 *lens_ipow(dx, 4) + -320.686 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 89.4623 *y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -2.10546e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + 0.0709016 *lens_ipow(x, 3)*lens_ipow(dx, 3) + 3.66702e-05 *lens_ipow(x, 4)*lens_ipow(lambda, 3) + -2.0833 *lens_ipow(y, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -6.11315 *lens_ipow(lambda, 9) + 5887.6 *dx*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + 8.99251e+07 *lens_ipow(dx, 8)*lens_ipow(dy, 2) + 2.15731 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx03 =  + -0.0040198  + -482.877 *dx*dy + -1.18733 *y*dx + 2.52008 *x*dy + 0.0414114 *x*y + 0.0131072 *x*y*lambda + 2.20274e-06 *x*lens_ipow(y, 2) + 0.00827277 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lambda + 29.8208 *y*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + 2.00132 *x*dy*lens_ipow(lambda, 4) + -2.10546e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx + -8.33321 *lens_ipow(y, 2)*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 11775.2 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + 1.99834e+07 *lens_ipow(dx, 9)*dy+0.0f;
const float dx04 =  + 3.41249 *dx*lambda + -0.26228 *x*lens_ipow(lambda, 2) + 0.0227785 *x*lens_ipow(dx, 2) + 0.0131072 *x*y*dy + -0.000102055 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 0.00275759 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -427.582 *lens_ipow(dx, 3)*lens_ipow(lambda, 3) + 59.6415 *y*lens_ipow(dx, 3)*dy*lambda + 4.00263 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.000515397 *x*lens_ipow(y, 2)*lens_ipow(lambda, 4) + 0.000110011 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 2) + -4.1666 *lens_ipow(y, 2)*dx*lens_ipow(dy, 4)*lambda + -55.0184 *dx*lens_ipow(lambda, 8) + 2.49551 *x*lens_ipow(lambda, 8) + 14719 *lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + 4.31462 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 5) + 2.62749e-06 *lens_ipow(x, 5)*lens_ipow(lambda, 5)+0.0f;
const float dx10 =  + 1.48627e-05  + -2.87632e-06 *y + 3.58612e-06 *x + -3.05602 *dx*dy + 5.3719e-05 *y*dy + 0.017554 *x*dy + 0.000602917 *x*y + 0.0821105 *y*dx*lambda + 5.50017 *dx*dy*lens_ipow(lambda, 2) + -0.00051614 *lens_ipow(y, 2)*dx*dy + 1.56538e-05 *lens_ipow(x, 2)*y*dx + -0.0104561 *y*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 0.000855743 *x*y*lens_ipow(lambda, 4) + 3.99569e-10 *lens_ipow(x, 5)*y + 5.77343e-09 *x*lens_ipow(y, 3)*lens_ipow(lambda, 4) + 0.273303 *x*dy*lens_ipow(lambda, 8) + 9.90423e-16 *x*lens_ipow(y, 9)+0.0f;
const float dx11 =  + 2.58684  + 0.000427641 *dy + -2.87632e-06 *x + 0.413533 *lens_ipow(dx, 2) + 0.114184 *y*dy + 0.00104715 *lens_ipow(y, 2) + 5.3719e-05 *x*dy + 0.000301458 *lens_ipow(x, 2) + -0.0599654 *lens_ipow(lambda, 3) + 0.0330832 *lens_ipow(dy, 2)*lambda + -0.019729 *lens_ipow(dx, 3) + 0.0821105 *x*dx*lambda + -0.00103228 *x*y*dx*dy + 5.21794e-06 *lens_ipow(x, 3)*dx + 7.10664 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 160.905 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 52.3091 *lens_ipow(dx, 6) + -0.000535583 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -0.0104561 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 0.000427871 *lens_ipow(x, 2)*lens_ipow(lambda, 4) + 6.65948e-11 *lens_ipow(x, 6) + 0.000191917 *lens_ipow(y, 3)*dy*lens_ipow(lambda, 3) + 8.66014e-09 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 4) + 2.97165e-06 *lens_ipow(y, 4)*lens_ipow(lambda, 6) + 4.4569e-15 *lens_ipow(x, 2)*lens_ipow(y, 8)+0.0f;
const float dx12 =  + -580.023 *dx*dy + 0.827065 *y*dx + -3.05602 *x*dy + -0.059187 *y*lens_ipow(dx, 2) + 0.0821105 *x*y*lambda + 5.50017 *x*dy*lens_ipow(lambda, 2) + -0.00051614 *x*lens_ipow(y, 2)*dy + 5.21794e-06 *lens_ipow(x, 3)*y + 14.2133 *y*dx*lens_ipow(lambda, 4) + 321.811 *y*dx*lens_ipow(dy, 4) + 313.854 *y*lens_ipow(dx, 5) + 3916.4 *dx*dy*lens_ipow(lambda, 8)+0.0f;
const float dx13 =  + 398.883  + 0.000427641 *y + 5.16056 *lens_ipow(lambda, 2) + -724.995 *lens_ipow(dy, 2) + -290.011 *lens_ipow(dx, 2) + 0.057092 *lens_ipow(y, 2) + -3.05602 *x*dx + 5.3719e-05 *x*y + 0.00877699 *lens_ipow(x, 2) + 0.0661664 *y*dy*lambda + 997.486 *lens_ipow(dy, 4) + 5.50017 *x*dx*lens_ipow(lambda, 2) + -0.00051614 *x*lens_ipow(y, 2)*dx + -384.632 *lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 643.621 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.000401687 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.0313683 *x*y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 4.79792e-05 *lens_ipow(y, 4)*lens_ipow(lambda, 3) + -40.335 *lens_ipow(lambda, 9) + 1958.2 *lens_ipow(dx, 2)*lens_ipow(lambda, 8) + 0.136651 *lens_ipow(x, 2)*lens_ipow(lambda, 8)+0.0f;
const float dx14 =  + 10.3211 *dy*lambda + -0.179896 *y*lens_ipow(lambda, 2) + 0.0330832 *y*lens_ipow(dy, 2) + 0.0821105 *x*y*dx + 11.0003 *x*dx*dy*lambda + -512.843 *lens_ipow(dy, 3)*lens_ipow(lambda, 3) + 28.4266 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.0209122 *x*y*lens_ipow(dy, 3)*lambda + 0.00171149 *lens_ipow(x, 2)*y*lens_ipow(lambda, 3) + 0.000143938 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 2) + 1.15469e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 3) + -363.015 *dy*lens_ipow(lambda, 8) + 15665.6 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 7) + 3.56597e-06 *lens_ipow(y, 5)*lens_ipow(lambda, 5) + 1.09321 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 7)+0.0f;
const float dx20 =  + -0.0220831  + -0.105079 *lens_ipow(dy, 2) + 0.00846378 *lens_ipow(dx, 2) + -0.0016196 *y*dy + -6.67979e-06 *lens_ipow(y, 2) + -0.000637207 *x*dx + -6.39572e-06 *lens_ipow(x, 2) + 0.000778602 *lens_ipow(lambda, 3) + 2.40962e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 4) + -0.00411936 *lens_ipow(lambda, 10)+0.0f;
const float dx21 =  + -0.181349 *dx*dy + -0.00140764 *y*dx + -0.0016196 *x*dy + -1.33596e-05 *x*y + -0.000632288 *lens_ipow(dx, 3)*dy + 1.60642e-08 *lens_ipow(x, 3)*y*lens_ipow(dx, 4)+0.0f;
const float dx22 =  + -3.02386  + -12.6295 *lens_ipow(dy, 2) + 5.55621 *lens_ipow(dx, 2) + -0.181349 *y*dy + -0.00070382 *lens_ipow(y, 2) + 0.0169276 *x*dx + -0.000318603 *lens_ipow(x, 2) + -1.49114 *lens_ipow(dx, 4) + -0.00189686 *y*lens_ipow(dx, 2)*dy + 3.21283e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 3)+0.0f;
const float dx23 =  + -25.259 *dx*dy + -0.181349 *y*dx + -0.210159 *x*dy + -0.0016196 *x*y + -0.000632288 *y*lens_ipow(dx, 3)+0.0f;
const float dx24 =  + 0.00233581 *x*lens_ipow(lambda, 2) + -0.0411936 *x*lens_ipow(lambda, 9)+0.0f;
const float dx30 =  + -2.11973e-06 *dy + 1.20882e-06 *lens_ipow(dy, 2) + 0.223632 *dx*dy + 0.00106874 *y*dx + 0.00138193 *x*dy + 4.95404e-06 *x*y + -0.00870921 *dx*dy*lambda + -0.000127605 *y*dx*lambda + 0.0171457 *dx*lens_ipow(dy, 3) + 2.16915e-09 *lens_ipow(y, 3)*dx + -0.000134594 *x*dy*lens_ipow(lambda, 4) + -2.82099e-06 *x*y*lens_ipow(lambda, 6)+0.0f;
const float dx31 =  + -0.0220656  + 2.79523e-06 *dx + 0.00984536 *lens_ipow(dy, 2) + 0.0845495 *lens_ipow(dx, 2) + -0.000606523 *y*dy + -6.21915e-06 *lens_ipow(y, 2) + 0.00106874 *x*dx + 2.47702e-06 *lens_ipow(x, 2) + 1.19736e-06 *y*lens_ipow(dx, 2) + -0.000127605 *x*dx*lambda + 0.00111463 *lens_ipow(lambda, 4) + 6.50746e-09 *x*lens_ipow(y, 2)*dx + -0.0128798 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 0.0016008 *lens_ipow(dx, 6) + -1.4105e-06 *lens_ipow(x, 2)*lens_ipow(lambda, 6) + -0.00501469 *lens_ipow(lambda, 10) + 0.000813925 *lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(lambda, 4)+0.0f;
const float dx32 =  + -5.30828e-06  + 2.79523e-06 *y + 32.722 *dx*dy + 0.169099 *y*dx + 0.223632 *x*dy + 0.00106874 *x*y + 1.19736e-06 *lens_ipow(y, 2)*dx + -0.00870921 *x*dy*lambda + -0.000127605 *x*y*lambda + 0.0171457 *x*lens_ipow(dy, 3) + 2.16915e-09 *x*lens_ipow(y, 3) + -1.68115 *dx*dy*lens_ipow(lambda, 3) + 15.2592 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + -0.0257595 *y*dx*lens_ipow(lambda, 4) + 0.00960479 *y*lens_ipow(dx, 5) + 41.0958 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + 50.8207 *lens_ipow(dx, 3)*dy*lens_ipow(lambda, 5) + 0.00108523 *lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(lambda, 4)+0.0f;
const float dx33 =  + -3.02497  + 0.000565253 *dy + -2.11973e-06 *x + 5.69712 *lens_ipow(dy, 2) + 16.361 *lens_ipow(dx, 2) + 0.0196907 *y*dy + -0.000303261 *lens_ipow(y, 2) + 2.41763e-06 *x*dy + 0.223632 *x*dx + 0.000690967 *lens_ipow(x, 2) + -0.00870921 *x*dx*lambda + 0.051437 *x*dx*lens_ipow(dy, 2) + -0.840573 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 11.4444 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -6.72972e-05 *lens_ipow(x, 2)*lens_ipow(lambda, 4) + -11.6968 *lens_ipow(dy, 4)*lens_ipow(lambda, 4) + 61.6436 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.00165138 *lens_ipow(lambda, 9) + 12.7052 *lens_ipow(dx, 4)*lens_ipow(lambda, 5)+0.0f;
const float dx34 =  + -0.00870921 *x*dx*dy + -0.000127605 *x*y*dx + 0.00445853 *y*lens_ipow(lambda, 3) + -2.52172 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -0.0515191 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.000269189 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 3) + -9.35744 *lens_ipow(dy, 5)*lens_ipow(lambda, 3) + 82.1915 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -8.46298e-06 *lens_ipow(x, 2)*y*lens_ipow(lambda, 5) + -0.0148624 *dy*lens_ipow(lambda, 8) + 63.5258 *lens_ipow(dx, 4)*dy*lens_ipow(lambda, 4) + -0.0501469 *y*lens_ipow(lambda, 9) + 0.00108523 *lens_ipow(y, 3)*lens_ipow(dx, 4)*lens_ipow(lambda, 3)+0.0f;
const float dx40 =  + -4.35994e-07  + -0.00243245 *dx + -2.33319e-05 *x + -8.56051e-09 *x*y + 0.000739319 *lens_ipow(dx, 2)*dy + 0.0388081 *lens_ipow(dx, 3) + -5.01914e-06 *lens_ipow(y, 2)*dx + 0.000625882 *x*lens_ipow(dy, 2) + -5.89505e-08 *x*lens_ipow(y, 2) + -1.18844e-05 *lens_ipow(x, 2)*dx + 0.105056 *dx*lens_ipow(dy, 2)*lambda + -2.83067e-10 *lens_ipow(x, 5) + -1.609e-05 *x*y*dy*lens_ipow(lambda, 5) + -0.00141542 *x*lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -0.000512054 *lens_ipow(x, 3)*lens_ipow(dy, 6) + -1.78094e-13 *lens_ipow(x, 7)*y*dy+0.0f;
const float dx41 =  + 2.92475e-07  + -0.00255901 *dy + -7.55823e-06 *dx + -2.27481e-05 *y + 6.74301e-05 *lens_ipow(dx, 2) + -4.28026e-09 *lens_ipow(x, 2) + 0.0666357 *lens_ipow(dy, 3) + -0.000358893 *y*lens_ipow(dx, 2) + -1.44376e-05 *lens_ipow(y, 2)*dy + -1.00383e-05 *x*y*dx + -5.89505e-08 *lens_ipow(x, 2)*y + -4.04499e-10 *lens_ipow(y, 5) + -8.04499e-06 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 5) + 514.727 *lens_ipow(dy, 9) + -3.22585e-13 *lens_ipow(y, 8)*dy + -0.00141542 *lens_ipow(x, 2)*y*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -2.22617e-14 *lens_ipow(x, 8)*dy+0.0f;
const float dx42 =  + -9.02847e-05  + -0.268985 *dx + -7.55823e-06 *y + -0.00243245 *x + 0.0136245 *lens_ipow(dx, 2) + 0.00013486 *y*dx + 1.61605 *dx*lens_ipow(dy, 2) + -0.000358893 *lens_ipow(y, 2)*dx + 0.00147864 *x*dx*dy + 0.116424 *x*lens_ipow(dx, 2) + -5.01914e-06 *x*lens_ipow(y, 2) + -3.96148e-06 *lens_ipow(x, 3) + 0.105056 *x*lens_ipow(dy, 2)*lambda + 228.468 *lens_ipow(dx, 5) + -0.00283084 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 62638.2 *lens_ipow(dx, 3)*lens_ipow(dy, 4)*lens_ipow(lambda, 3)+0.0f;
const float dx43 =  + 1.25411e-05  + -0.286905 *dy + -0.00255901 *y + 1.61605 *lens_ipow(dx, 2)*dy + 0.199907 *y*lens_ipow(dy, 2) + -4.81253e-06 *lens_ipow(y, 3) + 0.000739319 *x*lens_ipow(dx, 2) + 0.000625882 *lens_ipow(x, 2)*dy + 0.210111 *x*dx*dy*lambda + 806.27 *lens_ipow(dy, 5) + -8.04499e-06 *lens_ipow(x, 2)*y*lens_ipow(lambda, 5) + 4632.55 *y*lens_ipow(dy, 8) + -3.58428e-14 *lens_ipow(y, 9) + -0.00141542 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 4)*dy + -0.00076808 *lens_ipow(x, 4)*lens_ipow(dy, 5) + -2.22617e-14 *lens_ipow(x, 8)*y + 62638.2 *lens_ipow(dx, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 3)+0.0f;
const float dx44 =  + 0.271139  + -0.677557 *lens_ipow(lambda, 2) + 0.105056 *x*dx*lens_ipow(dy, 2) + -4.02249e-05 *lens_ipow(x, 2)*y*dy*lens_ipow(lambda, 4) + 4.45447 *lens_ipow(lambda, 10) + 46978.7 *lens_ipow(dx, 4)*lens_ipow(dy, 4)*lens_ipow(lambda, 2)+0.0f;
