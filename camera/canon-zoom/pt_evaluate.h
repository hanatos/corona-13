const float out_x =  + 0.000254069  + 70.2621 *dx + -2.46007e-05 *y + -0.653785 *x + -0.0235688 *dx*dy + -0.000406482 *y*dx + -4.64527e-06 *x*y + -19.2785 *dx*lens_ipow(dy, 2) + -19.8202 *lens_ipow(dx, 3) + 0.271372 *y*dx*dy + 0.00259451 *lens_ipow(y, 2)*dx + 0.241786 *x*lens_ipow(dy, 2) + 0.483651 *x*lens_ipow(dx, 2) + 0.00548664 *x*y*dy + -0.000142526 *x*lens_ipow(y, 2) + 0.00788821 *lens_ipow(x, 2)*dx + -0.000143924 *lens_ipow(x, 3) + 0.000122817 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.0935941 *x*lens_ipow(lambda, 3) + -3.0171e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 4.14781e-06 *lens_ipow(y, 4)*dx + -0.0798335 *x*y*lens_ipow(dx, 2)*dy + 0.000656544 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.7139e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 0.000298764 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 0.000338906 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -5.89805e-05 *lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + -0.0934717 *x*y*lens_ipow(dy, 5) + 0.773903 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4) + -0.00625468 *x*y*dy*lens_ipow(lambda, 5) + -2.47424 *dx*lens_ipow(lambda, 8) + 6776.95 *lens_ipow(dx, 5)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 3.73333 *lens_ipow(y, 2)*lens_ipow(dx, 7) + 7.79127e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*dy + -6.40074e-09 *lens_ipow(x, 6)*y*dx*dy + 4.56499e-11 *lens_ipow(x, 8)*dx + -0.27136 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -5.13597e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 5) + 0.440288 *x*lens_ipow(lambda, 10) + 1.02652 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 6);
const float out_y =  + 0.000211885  + 70.217 *dy + -0.00130993 *dx + -0.654816 *y + 0.0249546 *dx*dy + -4.52927e-06 *lens_ipow(y, 2) + -2.06797e-06 *x*y + -15.9776 *lens_ipow(dy, 3) + -18.8596 *lens_ipow(dx, 2)*dy + 0.661458 *y*lens_ipow(dy, 2) + 0.288332 *y*lens_ipow(dx, 2) + 0.0101164 *lens_ipow(y, 2)*dy + -0.000131313 *lens_ipow(y, 3) + 0.3147 *x*dx*dy + 0.00536003 *x*y*dx + -2.17119e-07 *x*lens_ipow(y, 2) + 0.00272707 *lens_ipow(x, 2)*dy + -0.0001419 *lens_ipow(x, 2)*y + -0.0993731 *y*lens_ipow(lambda, 3) + 0.000963957 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 1.87393e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 3.89315e-06 *lens_ipow(x, 4)*dy + -0.0193599 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 4) + -5.31401e-05 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -1.35538e-07 *lens_ipow(y, 5)*lens_ipow(lambda, 3) + -0.0055037 *x*y*dx*lens_ipow(lambda, 5) + -2.27588 *dy*lens_ipow(lambda, 8) + 407.071 *lens_ipow(dx, 4)*dy*lens_ipow(lambda, 4) + 2.25484e-11 *lens_ipow(y, 8)*dy + -1.96566e-05 *x*lens_ipow(y, 4)*lens_ipow(dx, 3)*dy + 6.16017 *lens_ipow(x, 2)*lens_ipow(dy, 7) + 1.45081e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 4) + -0.00206149 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 4) + 5.79454e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx + 3.49016e-11 *lens_ipow(x, 7)*y*dx + -13.0414 *x*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -2.49575e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 5) + -1071.41 *lens_ipow(dy, 5)*lens_ipow(lambda, 6) + 0.561412 *y*lens_ipow(lambda, 10) + -6.76347 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 8);
const float out_dx =  + -0.257776 *dx + -0.0118238 *x + 0.21722 *dx*lens_ipow(dy, 2) + 0.222862 *lens_ipow(dx, 3) + 0.00220759 *y*dx*dy + 2.75933e-05 *lens_ipow(y, 2)*dx + 0.00054091 *x*lens_ipow(dy, 2) + 0.00289383 *x*lens_ipow(dx, 2) + 8.75148e-06 *x*y*dy + 8.65239e-07 *x*lens_ipow(y, 2) + 3.32157e-05 *lens_ipow(x, 2)*dx + 9.092e-07 *lens_ipow(x, 3) + -0.00679466 *dx*lens_ipow(lambda, 3) + 0.00030849 *x*lens_ipow(lambda, 3) + -1.68694e-06 *lens_ipow(x, 2)*y*dx*dy + 5.74153e-15 *lens_ipow(x, 5)*lens_ipow(y, 4) + -0.00187362 *x*lens_ipow(lambda, 10);
const float out_dy =  + -0.257627 *dy + -0.0118217 *y + 0.220846 *lens_ipow(dy, 3) + 0.215936 *lens_ipow(dx, 2)*dy + 0.00282102 *y*lens_ipow(dy, 2) + 0.00020588 *y*lens_ipow(dx, 2) + 3.24937e-05 *lens_ipow(y, 2)*dy + 9.08127e-07 *lens_ipow(y, 3) + 0.0023944 *x*dx*dy + 2.02132e-05 *lens_ipow(x, 2)*dy + 9.04483e-07 *lens_ipow(x, 2)*y + -0.00690557 *dy*lens_ipow(lambda, 3) + 0.000306695 *y*lens_ipow(lambda, 3) + -1.85119e-06 *x*lens_ipow(y, 2)*dx*dy + 6.21095e-15 *lens_ipow(x, 4)*lens_ipow(y, 5) + -0.00185606 *y*lens_ipow(lambda, 10);
const float out_transmittance =  + 0.0478789  + 0.200766 *lambda + -3.1003e-06 *dx + 1.67699e-07 *y + -1.46095e-07 *x + -0.0293785 *lens_ipow(dy, 2) + -0.0292605 *lens_ipow(dx, 2) + -0.000296007 *y*dy + -2.94687e-06 *lens_ipow(y, 2) + -0.000278624 *x*dx + -3.10664e-06 *lens_ipow(x, 2) + -0.161495 *lens_ipow(lambda, 3) + -1.43251e-05 *x*dx*dy + 0.349992 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0187968 *y*lens_ipow(dy, 3) + -0.000397756 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -3.08e-06 *lens_ipow(y, 3)*dy + -0.00989689 *x*dx*lens_ipow(dy, 2) + -0.0179809 *x*lens_ipow(dx, 3) + -0.000393196 *x*y*dx*dy + -2.14122e-06 *x*lens_ipow(y, 2)*dx + -0.000390689 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -2.26345e-06 *lens_ipow(x, 2)*y*dy + -2.02248e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -2.98377e-06 *lens_ipow(x, 3)*dx + -3.59085 *lens_ipow(dy, 6) + -2.37733 *lens_ipow(dx, 6) + -0.216175 *y*lens_ipow(dx, 4)*dy + -2.18891e-07 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -2.09708e-11 *lens_ipow(y, 6) + 3.83117e-12 *lens_ipow(x, 2)*lens_ipow(y, 4) + -3.09072e-07 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -3.60435e-11 *lens_ipow(x, 6)*lambda + -226.248 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + -7.43462e-10 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dy, 2) + -5.39322e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -2.2056e-11 *lens_ipow(y, 6)*lens_ipow(lambda, 3) + -4722.67 *lens_ipow(dx, 4)*lens_ipow(dy, 6) + -0.16562 *lens_ipow(y, 2)*lens_ipow(dx, 8) + 0.278312 *lens_ipow(lambda, 11);
