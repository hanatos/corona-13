const float out_x =  + 0.000135438  + 102.533 *dx + -6.98227e-06 *y + 0.852921 *x + -0.000167245 *y*dx + 0.000124562 *x*dx + -2.71144e-06 *x*y + 93.3833 *dx*lens_ipow(dy, 2) + 93.9526 *lens_ipow(dx, 3) + 2.77587 *y*dx*dy + 0.0140524 *lens_ipow(y, 2)*dx + 1.30551 *x*lens_ipow(dy, 2) + 4.19041 *x*lens_ipow(dx, 2) + 0.0274398 *x*y*dy + 3.07261e-05 *x*lens_ipow(y, 2) + 0.0423831 *lens_ipow(x, 2)*dx + 3.40673e-05 *lens_ipow(x, 3) + -0.0148532 *x*lens_ipow(lambda, 3) + -0.637815 *dx*lens_ipow(lambda, 4) + 0.000421555 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.000503239 *lens_ipow(x, 2)*y*dx*dy + 0.000148145 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 2.4049e-06 *lens_ipow(x, 3)*y*dy + -5.91966 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -0.00269212 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 3) + -3385 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 0.634199 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -14.2498 *x*lens_ipow(dy, 6) + -9.02729 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 2) + 5.06598e-09 *x*lens_ipow(y, 5)*dy + 7.75447e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -40421.2 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + 0.760604 *x*y*lens_ipow(dx, 4)*dy*lens_ipow(lambda, 2) + 1.50012e-09 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -6.29746e-13 *lens_ipow(x, 5)*lens_ipow(y, 4) + -1.51618e-13 *lens_ipow(x, 9) + -9863.75 *lens_ipow(dx, 7)*lens_ipow(lambda, 4) + -7.32514e-14 *lens_ipow(x, 2)*lens_ipow(y, 8)*dx + 7.85729e-05 *lens_ipow(x, 3)*lens_ipow(lambda, 8) + 1.99145e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 6);
const float out_y =  + 5.51359e-06  + 102.517 *dy + 0.853298 *y + -0.000190306 *y*dy + -2.89701e-06 *lens_ipow(y, 2) + 94.8048 *lens_ipow(dy, 3) + 95.0504 *lens_ipow(dx, 2)*dy + 4.14295 *y*lens_ipow(dy, 2) + 1.32585 *y*lens_ipow(dx, 2) + 0.0420256 *lens_ipow(y, 2)*dy + 3.41119e-05 *lens_ipow(y, 3) + 2.799 *x*dx*dy + 0.0277656 *x*y*dx + 0.014278 *lens_ipow(x, 2)*dy + 3.06988e-05 *lens_ipow(x, 2)*y + -0.0174171 *y*lens_ipow(lambda, 3) + -0.786584 *dy*lens_ipow(lambda, 4) + 0.000499816 *x*lens_ipow(y, 2)*dx*dy + 0.000103369 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -1290.57 *lens_ipow(dx, 6)*dy + 0.386262 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 1.11921e-06 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -0.00518935 *lens_ipow(x, 3)*lens_ipow(dx, 3)*dy + 1.88569e-06 *lens_ipow(x, 4)*y*lens_ipow(dx, 2) + -6.00433 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 3) + -138.657 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -178.463 *y*lens_ipow(dx, 8) + -0.0702456 *lens_ipow(y, 3)*lens_ipow(dy, 6) + -1.49787e-13 *lens_ipow(y, 9) + 2.60456 *x*y*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -1.38786e-07 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 2) + 5.40927e-05 *lens_ipow(x, 2)*y*lens_ipow(lambda, 6) + -3.44904e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dx, 2)*dy + -6.85293e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + 4.39955e-11 *lens_ipow(x, 7)*y*dx + -9.55545e-12 *lens_ipow(x, 8)*dy + -16582.9 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 3) + -48491.8 *lens_ipow(dy, 9)*lens_ipow(lambda, 2) + 0.000152731 *lens_ipow(y, 3)*lens_ipow(lambda, 8) + -7.96795e-11 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy*lens_ipow(lambda, 2);
const float out_dx =  + 8.37546e-06  + 0.709292 *dx + -8.29314e-07 *y + -0.00384714 *x + -0.000739759 *dx*dy + -0.00051741 *lens_ipow(dx, 2) + -1.72194e-05 *y*dx + -2.01832e-07 *x*y + 1.76725 *dx*lens_ipow(dy, 2) + 1.75987 *lens_ipow(dx, 3) + 0.0595432 *y*dx*dy + 0.000393617 *lens_ipow(y, 2)*dx + 0.0291522 *x*lens_ipow(dy, 2) + 0.0885704 *x*lens_ipow(dx, 2) + 0.000799801 *x*y*dy + -6.90395e-07 *x*y*dx + 3.95807e-06 *x*lens_ipow(y, 2) + 0.00119166 *lens_ipow(x, 2)*dx + 3.90355e-06 *lens_ipow(x, 3) + 0.000860767 *y*lens_ipow(dx, 2)*dy + 1.53095e-05 *x*y*dx*dy + -5.68729e-10 *lens_ipow(x, 2)*lens_ipow(y, 2) + -5.7437e-08 *lens_ipow(x, 3)*dy + -0.448288 *dx*lens_ipow(lambda, 4) + -0.00405009 *x*lens_ipow(lambda, 4) + 0.000233735 *x*y*lens_ipow(dx, 2)*dy + 3.07864e-06 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.47689e-09 *lens_ipow(x, 3)*lens_ipow(y, 2) + 0.00805095 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -1.2899e-12 *x*lens_ipow(y, 6) + 2.44197e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.29914e-07 *lens_ipow(y, 4)*dx*lens_ipow(lambda, 3) + -3.25765e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lambda + -2.44653e-07 *lens_ipow(x, 3)*y*dy*lens_ipow(lambda, 4) + -3.69354e-07 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 4) + -3.69527e-15 *lens_ipow(x, 9) + -0.245492 *y*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -0.190531 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 2.1333 *dx*lens_ipow(lambda, 10) + 0.0191836 *x*lens_ipow(lambda, 10);
const float out_dy =  + 2.39458e-06  + 0.717854 *dy + -0.0038435 *y + 5.61488e-07 *x + -2.69182e-06 *y*dx + -4.87347e-06 *x*dy + -4.26529e-06 *x*dx + 1.78744 *lens_ipow(dy, 3) + 1.76155 *lens_ipow(dx, 2)*dy + 0.0890975 *y*lens_ipow(dy, 2) + 0.0291269 *y*lens_ipow(dx, 2) + 0.00119911 *lens_ipow(y, 2)*dy + 3.93176e-06 *lens_ipow(y, 3) + 0.0593271 *x*dx*dy + 0.000802083 *x*y*dx + -8.07258e-09 *x*lens_ipow(y, 2) + 0.000391147 *lens_ipow(x, 2)*dy + 3.97282e-06 *lens_ipow(x, 2)*y + -0.295031 *dy*lens_ipow(lambda, 3) + 0.000328188 *y*lens_ipow(dx, 2)*dy + -8.40634e-08 *lens_ipow(x, 2)*y*dy + -9.91749e-10 *lens_ipow(x, 2)*lens_ipow(y, 2) + -3.98688e-10 *lens_ipow(x, 3)*y + -0.00415324 *y*lens_ipow(lambda, 4) + -1.66153e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + -7.25946e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -1.33174e-06 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + -2.3613e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + 2.24581e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2) + 1.03767e-08 *lens_ipow(x, 4)*y*lens_ipow(dy, 2) + -1.58796e-12 *lens_ipow(x, 6)*y + -0.000107298 *x*y*dx*lens_ipow(lambda, 5) + -0.163559 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -4.49793e-07 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 4) + -227.105 *lens_ipow(dy, 9)*lambda + -6.63545e-15 *lens_ipow(y, 9)*lambda + -0.176692 *x*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 5) + 1.56342 *dy*lens_ipow(lambda, 10) + 0.0198088 *y*lens_ipow(lambda, 10) + 0.0881479 *x*y*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 4);
const float out_transmittance =  + 0.493389  + 0.241961 *lambda + -8.96954e-06 *dx + 2.28423e-07 *y + -2.06006e-07 *x + -0.0575143 *lens_ipow(dy, 2) + -0.0777672 *lens_ipow(dx, 2) + -0.00033558 *y*dy + -8.12412e-06 *lens_ipow(y, 2) + -0.000450659 *x*dx + -5.57668e-06 *lens_ipow(x, 2) + -0.201903 *lens_ipow(lambda, 3) + -2.36354 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0811808 *y*lens_ipow(dy, 3) + -0.0737222 *y*lens_ipow(dx, 2)*dy + -0.00165935 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.40408e-05 *lens_ipow(y, 3)*dy + -0.0822767 *x*dx*lens_ipow(dy, 2) + -0.0785552 *x*lens_ipow(dx, 3) + -0.00214266 *x*y*dx*dy + -1.13314e-05 *x*lens_ipow(y, 2)*dx + -0.000569439 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.00168911 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -1.39427e-05 *lens_ipow(x, 2)*y*dy + -8.11332e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.44278e-05 *lens_ipow(x, 3)*dx + -14.5747 *lens_ipow(dy, 6) + -9.46367 *lens_ipow(dx, 6) + -0.0574311 *y*lens_ipow(dx, 4)*dy + -1.78903e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -6.82342e-11 *lens_ipow(y, 6) + -4.2929e-06 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + -1.01051e-10 *lens_ipow(x, 6) + -106.866 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + 0.00681265 *x*y*dx*lens_ipow(dy, 5) + 6.49458e-08 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*dy + -9.36112e-11 *lens_ipow(x, 6)*lens_ipow(dy, 2) + -0.811677 *lens_ipow(y, 2)*lens_ipow(dx, 8) + -9.93962e-10 *x*lens_ipow(y, 6)*lens_ipow(dx, 3) + 0.363877 *lens_ipow(lambda, 11);
