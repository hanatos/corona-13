const float dx00 =  + 0.852921  + 0.000124562 *dx + -2.71144e-06 *y + 1.30551 *lens_ipow(dy, 2) + 4.19041 *lens_ipow(dx, 2) + 0.0274398 *y*dy + 3.07261e-05 *lens_ipow(y, 2) + 0.0847661 *x*dx + 0.000102202 *lens_ipow(x, 2) + -0.0148532 *lens_ipow(lambda, 3) + 0.000421555 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.00100648 *x*y*dx*dy + 0.000444435 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 7.2147e-06 *lens_ipow(x, 2)*y*dy + -5.91966 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -0.00538425 *x*dx*lens_ipow(lambda, 3) + -14.2498 *lens_ipow(dy, 6) + -9.02729 *lens_ipow(dx, 4)*lens_ipow(lambda, 2) + 5.06598e-09 *lens_ipow(y, 5)*dy + 3.87723e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + 0.760604 *y*lens_ipow(dx, 4)*dy*lens_ipow(lambda, 2) + 7.50058e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -3.14873e-12 *lens_ipow(x, 4)*lens_ipow(y, 4) + -1.36456e-12 *lens_ipow(x, 8) + -1.46503e-13 *x*lens_ipow(y, 8)*dx + 0.000235719 *lens_ipow(x, 2)*lens_ipow(lambda, 8) + 5.97436e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx01 =  + -6.98227e-06  + -0.000167245 *dx + -2.71144e-06 *x + 2.77587 *dx*dy + 0.0281048 *y*dx + 0.0274398 *x*dy + 6.14521e-05 *x*y + 0.000843109 *x*y*lens_ipow(dy, 2) + 0.000503239 *lens_ipow(x, 2)*dx*dy + 2.4049e-06 *lens_ipow(x, 3)*dy + 1.2684 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 2.53299e-08 *x*lens_ipow(y, 4)*dy + 0.760604 *x*lens_ipow(dx, 4)*dy*lens_ipow(lambda, 2) + 3.00023e-09 *lens_ipow(x, 5)*y*lens_ipow(dx, 2) + -2.51898e-12 *lens_ipow(x, 5)*lens_ipow(y, 3) + -5.86011e-13 *lens_ipow(x, 2)*lens_ipow(y, 7)*dx + 3.98291e-07 *lens_ipow(x, 3)*y*lens_ipow(lambda, 6)+0.0f;
const float dx02 =  + 102.533  + -0.000167245 *y + 0.000124562 *x + 93.3833 *lens_ipow(dy, 2) + 281.858 *lens_ipow(dx, 2) + 2.77587 *y*dy + 0.0140524 *lens_ipow(y, 2) + 8.38082 *x*dx + 0.0423831 *lens_ipow(x, 2) + -0.637815 *lens_ipow(lambda, 4) + 0.000503239 *lens_ipow(x, 2)*y*dy + -11.8393 *x*dx*lens_ipow(dy, 2)*lambda + -0.00269212 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + -16925 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + 1.9026 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -36.1092 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + 1.55089e-06 *lens_ipow(x, 5)*dx + -121264 *lens_ipow(dx, 2)*lens_ipow(dy, 6) + 3.04241 *x*y*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2) + 3.00023e-09 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx + -69046.2 *lens_ipow(dx, 6)*lens_ipow(lambda, 4) + -7.32514e-14 *lens_ipow(x, 2)*lens_ipow(y, 8)+0.0f;
const float dx03 =  + 186.767 *dx*dy + 2.77587 *y*dx + 2.61103 *x*dy + 0.0274398 *x*y + 0.000843109 *x*lens_ipow(y, 2)*dy + 0.000503239 *lens_ipow(x, 2)*y*dx + 0.00029629 *lens_ipow(x, 3)*dy + 2.4049e-06 *lens_ipow(x, 3)*y + -11.8393 *x*lens_ipow(dx, 2)*dy*lambda + -6770.01 *lens_ipow(dx, 5)*dy + 1.2684 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -85.4989 *x*lens_ipow(dy, 5) + 5.06598e-09 *x*lens_ipow(y, 5) + -242527 *lens_ipow(dx, 3)*lens_ipow(dy, 5) + 0.760604 *x*y*lens_ipow(dx, 4)*lens_ipow(lambda, 2)+0.0f;
const float dx04 =  + -0.0445596 *x*lens_ipow(lambda, 2) + -2.55126 *dx*lens_ipow(lambda, 3) + -5.91966 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.00807637 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2) + -18.0546 *x*lens_ipow(dx, 4)*lambda + 1.52121 *x*y*lens_ipow(dx, 4)*dy*lambda + -39455 *lens_ipow(dx, 7)*lens_ipow(lambda, 3) + 0.000628583 *lens_ipow(x, 3)*lens_ipow(lambda, 7) + 1.19487e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx10 =  + 2.799 *dx*dy + 0.0277656 *y*dx + 0.028556 *x*dy + 6.13975e-05 *x*y + 0.000499816 *lens_ipow(y, 2)*dx*dy + 0.000206738 *x*y*lens_ipow(dy, 2) + -0.015568 *lens_ipow(x, 2)*lens_ipow(dx, 3)*dy + 7.54274e-06 *lens_ipow(x, 3)*y*lens_ipow(dx, 2) + 2.60456 *y*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -1.38786e-07 *lens_ipow(y, 5)*dx*lens_ipow(dy, 2) + 0.000108185 *x*y*lens_ipow(lambda, 6) + -6.89809e-09 *x*lens_ipow(y, 4)*lens_ipow(dx, 2)*dy + -2.74117e-12 *lens_ipow(x, 3)*lens_ipow(y, 5) + 3.07968e-10 *lens_ipow(x, 6)*y*dx + -7.64436e-11 *lens_ipow(x, 7)*dy + -3.18718e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*dy*lens_ipow(lambda, 2)+0.0f;
const float dx11 =  + 0.853298  + -0.000190306 *dy + -5.79402e-06 *y + 4.14295 *lens_ipow(dy, 2) + 1.32585 *lens_ipow(dx, 2) + 0.0840512 *y*dy + 0.000102336 *lens_ipow(y, 2) + 0.0277656 *x*dx + 3.06988e-05 *lens_ipow(x, 2) + -0.0174171 *lens_ipow(lambda, 3) + 0.000999631 *x*y*dx*dy + 0.000103369 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.772525 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 5.59606e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + 1.88569e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -6.00433 *lens_ipow(dy, 4)*lens_ipow(lambda, 3) + -138.657 *lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -178.463 *lens_ipow(dx, 8) + -0.210737 *lens_ipow(y, 2)*lens_ipow(dy, 6) + -1.34808e-12 *lens_ipow(y, 8) + 2.60456 *x*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -6.9393e-07 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + 5.40927e-05 *lens_ipow(x, 2)*lens_ipow(lambda, 6) + -1.37962e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -3.42647e-12 *lens_ipow(x, 4)*lens_ipow(y, 4) + 4.39955e-11 *lens_ipow(x, 7)*dx + 0.000458192 *lens_ipow(y, 2)*lens_ipow(lambda, 8) + -3.18718e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy*lens_ipow(lambda, 2)+0.0f;
const float dx12 =  + 190.101 *dx*dy + 2.65171 *y*dx + 2.799 *x*dy + 0.0277656 *x*y + 0.000499816 *x*lens_ipow(y, 2)*dy + -7743.45 *lens_ipow(dx, 5)*dy + 0.772525 *lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + -0.015568 *lens_ipow(x, 3)*lens_ipow(dx, 2)*dy + 3.77137e-06 *lens_ipow(x, 4)*y*dx + -554.63 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1427.71 *y*lens_ipow(dx, 7) + 2.60456 *x*y*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -1.38786e-07 *x*lens_ipow(y, 5)*lens_ipow(dy, 2) + -6.89809e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx*dy + 4.39955e-11 *lens_ipow(x, 7)*y + -33165.7 *dx*lens_ipow(dy, 5)*lens_ipow(lambda, 3)+0.0f;
const float dx13 =  + 102.517  + -0.000190306 *y + 284.414 *lens_ipow(dy, 2) + 95.0504 *lens_ipow(dx, 2) + 8.28589 *y*dy + 0.0420256 *lens_ipow(y, 2) + 2.799 *x*dx + 0.014278 *lens_ipow(x, 2) + -0.786584 *lens_ipow(lambda, 4) + 0.000499816 *x*lens_ipow(y, 2)*dx + 0.000206738 *lens_ipow(x, 2)*y*dy + -1290.57 *lens_ipow(dx, 6) + 1.15879 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 2.23843e-06 *lens_ipow(y, 5)*dy + -0.00518935 *lens_ipow(x, 3)*lens_ipow(dx, 3) + -24.0173 *y*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -277.315 *y*lens_ipow(dx, 4)*dy*lens_ipow(lambda, 2) + -0.421474 *lens_ipow(y, 3)*lens_ipow(dy, 5) + 10.4182 *x*y*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -2.77572e-07 *x*lens_ipow(y, 5)*dx*dy + -3.44904e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dx, 2) + -9.55545e-12 *lens_ipow(x, 8) + -82914.3 *lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 3) + -436427 *lens_ipow(dy, 8)*lens_ipow(lambda, 2) + -7.96795e-11 *lens_ipow(x, 4)*lens_ipow(y, 4)*lens_ipow(lambda, 2)+0.0f;
const float dx14 =  + -0.0522515 *y*lens_ipow(lambda, 2) + -3.14634 *dy*lens_ipow(lambda, 3) + -18.013 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -277.315 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2)*lambda + 5.20912 *x*y*dx*lens_ipow(dy, 4)*lambda + 0.000324556 *lens_ipow(x, 2)*y*lens_ipow(lambda, 5) + -49748.6 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 2) + -96983.7 *lens_ipow(dy, 9)*lambda + 0.00122184 *lens_ipow(y, 3)*lens_ipow(lambda, 7) + -1.59359e-10 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy*lambda+0.0f;
const float dx20 =  + -0.00384714  + -2.01832e-07 *y + 0.0291522 *lens_ipow(dy, 2) + 0.0885704 *lens_ipow(dx, 2) + 0.000799801 *y*dy + -6.90395e-07 *y*dx + 3.95807e-06 *lens_ipow(y, 2) + 0.00238333 *x*dx + 1.17107e-05 *lens_ipow(x, 2) + 1.53095e-05 *y*dx*dy + -1.13746e-09 *x*lens_ipow(y, 2) + -1.72311e-07 *lens_ipow(x, 2)*dy + -0.00405009 *lens_ipow(lambda, 4) + 0.000233735 *y*lens_ipow(dx, 2)*dy + 3.07864e-06 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -4.43067e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.2899e-12 *lens_ipow(y, 6) + 7.3259e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -6.51531e-06 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lambda + -7.3396e-07 *lens_ipow(x, 2)*y*dy*lens_ipow(lambda, 4) + -1.47742e-06 *lens_ipow(x, 3)*dx*lens_ipow(lambda, 4) + -3.32574e-14 *lens_ipow(x, 8) + -0.190531 *lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 0.0191836 *lens_ipow(lambda, 10)+0.0f;
const float dx21 =  + -8.29314e-07  + -1.72194e-05 *dx + -2.01832e-07 *x + 0.0595432 *dx*dy + 0.000787235 *y*dx + 0.000799801 *x*dy + -6.90395e-07 *x*dx + 7.91613e-06 *x*y + 0.000860767 *lens_ipow(dx, 2)*dy + 1.53095e-05 *x*dx*dy + -1.13746e-09 *lens_ipow(x, 2)*y + 0.000233735 *x*lens_ipow(dx, 2)*dy + 6.15727e-06 *x*y*lens_ipow(dy, 2) + -2.95378e-09 *lens_ipow(x, 3)*y + 0.0161019 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -7.73941e-12 *x*lens_ipow(y, 5) + 4.88394e-08 *lens_ipow(x, 3)*y*lens_ipow(dx, 2) + -5.19655e-07 *lens_ipow(y, 3)*dx*lens_ipow(lambda, 3) + -6.51531e-06 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 2)*lambda + -2.44653e-07 *lens_ipow(x, 3)*dy*lens_ipow(lambda, 4) + -0.245492 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 5)+0.0f;
const float dx22 =  + 0.709292  + -0.000739759 *dy + -0.00103482 *dx + -1.72194e-05 *y + 1.76725 *lens_ipow(dy, 2) + 5.27961 *lens_ipow(dx, 2) + 0.0595432 *y*dy + 0.000393617 *lens_ipow(y, 2) + 0.177141 *x*dx + -6.90395e-07 *x*y + 0.00119166 *lens_ipow(x, 2) + 0.00172153 *y*dx*dy + 1.53095e-05 *x*y*dy + -0.448288 *lens_ipow(lambda, 4) + 0.00046747 *x*y*dx*dy + 0.0241529 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.88394e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx + -1.29914e-07 *lens_ipow(y, 4)*lens_ipow(lambda, 3) + -3.25765e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda + -3.69354e-07 *lens_ipow(x, 4)*lens_ipow(lambda, 4) + -0.245492 *y*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -0.762125 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 5) + 2.1333 *lens_ipow(lambda, 10)+0.0f;
const float dx23 =  + -0.000739759 *dx + 3.53449 *dx*dy + 0.0595432 *y*dx + 0.0583044 *x*dy + 0.000799801 *x*y + 0.000860767 *y*lens_ipow(dx, 2) + 1.53095e-05 *x*y*dx + -5.7437e-08 *lens_ipow(x, 3) + 0.000233735 *x*y*lens_ipow(dx, 2) + 6.15727e-06 *x*lens_ipow(y, 2)*dy + 0.0161019 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -6.51531e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy*lambda + -2.44653e-07 *lens_ipow(x, 3)*y*lens_ipow(lambda, 4) + -0.736477 *y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx24 =  + -1.79315 *dx*lens_ipow(lambda, 3) + -0.0162004 *x*lens_ipow(lambda, 3) + -3.89741e-07 *lens_ipow(y, 4)*dx*lens_ipow(lambda, 2) + -3.25765e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -9.78614e-07 *lens_ipow(x, 3)*y*dy*lens_ipow(lambda, 3) + -1.47742e-06 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 3) + -1.22746 *y*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + -0.952656 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 4) + 21.333 *dx*lens_ipow(lambda, 9) + 0.191836 *x*lens_ipow(lambda, 9)+0.0f;
const float dx30 =  + 5.61488e-07  + -4.87347e-06 *dy + -4.26529e-06 *dx + 0.0593271 *dx*dy + 0.000802083 *y*dx + -8.07258e-09 *lens_ipow(y, 2) + 0.000782294 *x*dy + 7.94564e-06 *x*y + -1.68127e-07 *x*y*dy + -1.9835e-09 *x*lens_ipow(y, 2) + -1.19606e-09 *lens_ipow(x, 2)*y + -3.32306e-09 *x*lens_ipow(y, 3) + -7.25946e-05 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -1.33174e-06 *lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + -4.72261e-07 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + 4.49161e-08 *x*lens_ipow(y, 3)*lens_ipow(dx, 2) + 4.15068e-08 *lens_ipow(x, 3)*y*lens_ipow(dy, 2) + -9.52776e-12 *lens_ipow(x, 5)*y + -0.000107298 *y*dx*lens_ipow(lambda, 5) + -0.176692 *lens_ipow(dx, 3)*dy*lens_ipow(lambda, 5) + 0.0881479 *y*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 4)+0.0f;
const float dx31 =  + -0.0038435  + -2.69182e-06 *dx + 0.0890975 *lens_ipow(dy, 2) + 0.0291269 *lens_ipow(dx, 2) + 0.00239822 *y*dy + 1.17953e-05 *lens_ipow(y, 2) + 0.000802083 *x*dx + -1.61452e-08 *x*y + 3.97282e-06 *lens_ipow(x, 2) + 0.000328188 *lens_ipow(dx, 2)*dy + -8.40634e-08 *lens_ipow(x, 2)*dy + -1.9835e-09 *lens_ipow(x, 2)*y + -3.98688e-10 *lens_ipow(x, 3) + -0.00415324 *lens_ipow(lambda, 4) + -4.98459e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.000145189 *x*y*lens_ipow(dx, 3)*dy + -3.99523e-06 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -4.72261e-07 *lens_ipow(x, 2)*y*dy*lens_ipow(lambda, 2) + 6.73742e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.03767e-08 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -1.58796e-12 *lens_ipow(x, 6) + -0.000107298 *x*dx*lens_ipow(lambda, 5) + -0.163559 *lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -1.79917e-06 *lens_ipow(y, 3)*dy*lens_ipow(lambda, 4) + -5.97191e-14 *lens_ipow(y, 8)*lambda + 0.0198088 *lens_ipow(lambda, 10) + 0.0881479 *x*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 4)+0.0f;
const float dx32 =  + -2.69182e-06 *y + -4.26529e-06 *x + 3.5231 *dx*dy + 0.0582539 *y*dx + 0.0593271 *x*dy + 0.000802083 *x*y + 0.000656375 *y*dx*dy + -0.000217784 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -1.33174e-06 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + 4.49161e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx + -0.000107298 *x*y*lens_ipow(lambda, 5) + -0.530075 *x*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 5) + 0.0881479 *x*y*lens_ipow(dy, 4)*lens_ipow(lambda, 4)+0.0f;
const float dx33 =  + 0.717854  + -4.87347e-06 *x + 5.36231 *lens_ipow(dy, 2) + 1.76155 *lens_ipow(dx, 2) + 0.178195 *y*dy + 0.00119911 *lens_ipow(y, 2) + 0.0593271 *x*dx + 0.000391147 *lens_ipow(x, 2) + -0.295031 *lens_ipow(lambda, 3) + 0.000328188 *y*lens_ipow(dx, 2) + -8.40634e-08 *lens_ipow(x, 2)*y + -7.25946e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + -2.66348e-06 *x*lens_ipow(y, 3)*dx*dy + -2.3613e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 2.07534e-08 *lens_ipow(x, 4)*y*dy + -0.654236 *y*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + -4.49793e-07 *lens_ipow(y, 4)*lens_ipow(lambda, 4) + -2043.95 *lens_ipow(dy, 8)*lambda + -0.176692 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 5) + 1.56342 *lens_ipow(lambda, 10) + 0.352591 *x*y*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 4)+0.0f;
const float dx34 =  + -0.885093 *dy*lens_ipow(lambda, 2) + -0.016613 *y*lens_ipow(lambda, 3) + -4.72261e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lambda + -0.00053649 *x*y*dx*lens_ipow(lambda, 4) + -0.654236 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 3) + -1.79917e-06 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 3) + -227.105 *lens_ipow(dy, 9) + -6.63545e-15 *lens_ipow(y, 9) + -0.883458 *x*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 4) + 15.6342 *dy*lens_ipow(lambda, 9) + 0.198088 *y*lens_ipow(lambda, 9) + 0.352591 *x*y*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 3)+0.0f;
const float dx40 =  + -2.06006e-07  + -0.000450659 *dx + -1.11534e-05 *x + -0.0822767 *dx*lens_ipow(dy, 2) + -0.0785552 *lens_ipow(dx, 3) + -0.00214266 *y*dx*dy + -1.13314e-05 *lens_ipow(y, 2)*dx + -0.00113888 *x*lens_ipow(dy, 2) + -0.00337822 *x*lens_ipow(dx, 2) + -2.78853e-05 *x*y*dy + -1.62266e-07 *x*lens_ipow(y, 2) + -4.32834e-05 *lens_ipow(x, 2)*dx + -1.28787e-05 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -6.06305e-10 *lens_ipow(x, 5) + 0.00681265 *y*dx*lens_ipow(dy, 5) + 2.59783e-07 *lens_ipow(x, 3)*y*lens_ipow(dx, 2)*dy + -5.61667e-10 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -9.93962e-10 *lens_ipow(y, 6)*lens_ipow(dx, 3)+0.0f;
const float dx41 =  + 2.28423e-07  + -0.00033558 *dy + -1.62482e-05 *y + -0.0811808 *lens_ipow(dy, 3) + -0.0737222 *lens_ipow(dx, 2)*dy + -0.00331871 *y*lens_ipow(dy, 2) + -4.21223e-05 *lens_ipow(y, 2)*dy + -0.00214266 *x*dx*dy + -2.26627e-05 *x*y*dx + -1.39427e-05 *lens_ipow(x, 2)*dy + -1.62266e-07 *lens_ipow(x, 2)*y + -0.0574311 *lens_ipow(dx, 4)*dy + -7.15612e-06 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -4.09405e-10 *lens_ipow(y, 5) + 0.00681265 *x*dx*lens_ipow(dy, 5) + 6.49458e-08 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -1.62335 *y*lens_ipow(dx, 8) + -5.96377e-09 *x*lens_ipow(y, 5)*lens_ipow(dx, 3)+0.0f;
const float dx42 =  + -8.96954e-06  + -0.155534 *dx + -0.000450659 *x + -4.72709 *dx*lens_ipow(dy, 2) + -0.147444 *y*dx*dy + -0.0822767 *x*lens_ipow(dy, 2) + -0.235666 *x*lens_ipow(dx, 2) + -0.00214266 *x*y*dy + -1.13314e-05 *x*lens_ipow(y, 2) + -0.00337822 *lens_ipow(x, 2)*dx + -1.44278e-05 *lens_ipow(x, 3) + -56.782 *lens_ipow(dx, 5) + -0.229724 *y*lens_ipow(dx, 3)*dy + -3.57806e-06 *lens_ipow(y, 4)*dx + -4.2929e-06 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -641.197 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 0.00681265 *x*y*lens_ipow(dy, 5) + 1.29892e-07 *lens_ipow(x, 4)*y*dx*dy + -6.49342 *lens_ipow(y, 2)*lens_ipow(dx, 7) + -2.98189e-09 *x*lens_ipow(y, 6)*lens_ipow(dx, 2)+0.0f;
const float dx43 =  + -0.115029 *dy + -0.00033558 *y + -4.72709 *lens_ipow(dx, 2)*dy + -0.243542 *y*lens_ipow(dy, 2) + -0.0737222 *y*lens_ipow(dx, 2) + -0.00331871 *lens_ipow(y, 2)*dy + -1.40408e-05 *lens_ipow(y, 3) + -0.164553 *x*dx*dy + -0.00214266 *x*y*dx + -0.00113888 *lens_ipow(x, 2)*dy + -1.39427e-05 *lens_ipow(x, 2)*y + -87.4484 *lens_ipow(dy, 5) + -0.0574311 *y*lens_ipow(dx, 4) + -8.58581e-06 *lens_ipow(x, 3)*dx*dy + -213.732 *lens_ipow(dx, 6)*dy + 0.0340632 *x*y*dx*lens_ipow(dy, 4) + 6.49458e-08 *lens_ipow(x, 4)*y*lens_ipow(dx, 2) + -1.87222e-10 *lens_ipow(x, 6)*dy+0.0f;
const float dx44 =  + 0.241961  + -0.605708 *lens_ipow(lambda, 2) + 4.00265 *lens_ipow(lambda, 10)+0.0f;
