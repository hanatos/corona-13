const float out_x =  + 0.000155008  + 44.0953 *dx + 6.81398e-06 *y + 0.656767 *x + -0.00611466 *lens_ipow(dy, 2) + -3.59568e-06 *x*y + 18.506 *dx*lens_ipow(dy, 2) + 18.7993 *lens_ipow(dx, 3) + 1.45232 *y*dx*dy + 0.0173492 *lens_ipow(y, 2)*dx + 0.274624 *x*lens_ipow(dy, 2) + 1.71924 *x*lens_ipow(dx, 2) + 0.0214982 *x*y*dy + 0.000216627 *x*lens_ipow(y, 2) + 0.0384358 *lens_ipow(x, 2)*dx + 0.000207915 *lens_ipow(x, 3) + -3.78161 *dx*lens_ipow(lambda, 3) + 4.90937 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.157309 *x*lens_ipow(lambda, 4) + 8.60202e-06 *x*lens_ipow(y, 3)*lens_ipow(dy, 3) + -3.30109e-06 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + 0.0155756 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + 2472.91 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + -0.00688976 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.00124823 *lens_ipow(x, 4)*lens_ipow(dx, 5) + -4.61264e-08 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 7.16037e-11 *lens_ipow(x, 5)*lens_ipow(y, 4) + -6.70113e-08 *lens_ipow(x, 6)*y*dx*dy + 1.43112e-09 *lens_ipow(x, 4)*lens_ipow(y, 4)*lens_ipow(dy, 2) + 20.6195 *dx*lens_ipow(lambda, 10) + 26507.4 *lens_ipow(dx, 7)*lens_ipow(dy, 4) + 12409.3 *lens_ipow(dx, 9)*lens_ipow(dy, 2) + 1837.33 *lens_ipow(dx, 11) + 0.770513 *x*lens_ipow(lambda, 10) + -0.0523361 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(dy, 2) + -0.0148458 *lens_ipow(x, 4)*lens_ipow(dx, 5)*lens_ipow(dy, 2) + -3.1209e-09 *lens_ipow(x, 4)*lens_ipow(y, 5)*dx*dy + 0.000196274 *lens_ipow(x, 5)*lens_ipow(dy, 6) + -2.18867e-10 *lens_ipow(x, 9)*lens_ipow(dx, 2) + 6.17016e-14 *lens_ipow(x, 11);
const float out_y =  + -1.81429e-06  + 44.0985 *dy + 0.656259 *y + -0.00037931 *x*dy + 4.1033e-06 *x*y + 18.9055 *lens_ipow(dy, 3) + 0.0455439 *dx*lens_ipow(dy, 2) + 18.414 *lens_ipow(dx, 2)*dy + 1.73807 *y*lens_ipow(dy, 2) + 0.262874 *y*lens_ipow(dx, 2) + 0.0390663 *lens_ipow(y, 2)*dy + -3.20286e-05 *lens_ipow(y, 2)*dx + 0.000229581 *lens_ipow(y, 3) + 1.44886 *x*dx*dy + 0.0211923 *x*y*dx + 0.0173283 *lens_ipow(x, 2)*dy + 0.000224903 *lens_ipow(x, 2)*y + -3.8073 *dy*lens_ipow(lambda, 3) + 0.00848631 *x*lens_ipow(dy, 3) + -0.160619 *y*lens_ipow(lambda, 4) + 0.00237679 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.00652786 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 0.000642894 *lens_ipow(x, 2)*y*lens_ipow(dx, 4) + 4.72613e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + 2572.86 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + 0.0124217 *lens_ipow(y, 3)*lens_ipow(dx, 6) + 2.60945e-05 *lens_ipow(y, 5)*lens_ipow(dy, 4) + 4.43839e-10 *lens_ipow(y, 8)*dy + -0.0045496 *lens_ipow(x, 3)*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.88779e-09 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx + 7.33568e-10 *lens_ipow(x, 6)*lens_ipow(y, 2)*dy + 20.9501 *dy*lens_ipow(lambda, 10) + 1167.6 *lens_ipow(dy, 11) + 16011.4 *lens_ipow(dx, 2)*lens_ipow(dy, 9) + 0.789592 *y*lens_ipow(lambda, 10) + 2.20174 *y*lens_ipow(dy, 6)*lens_ipow(lambda, 4) + 1.2535e-10 *lens_ipow(y, 9)*lens_ipow(dx, 2) + 1.04095 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 7) + 2.56328e-08 *x*lens_ipow(y, 7)*dx*lens_ipow(dy, 2) + 6.16022 *lens_ipow(x, 2)*lens_ipow(dy, 9);
const float out_dx =  + -5.38199e-06  + 0.0547469 *dx + -0.0220138 *x + 0.000302318 *lens_ipow(dx, 2) + 2.97585e-05 *y*dx + -3.48758e-07 *x*y + 1.69644 *dx*lens_ipow(dy, 2) + 1.6834 *lens_ipow(dx, 3) + 0.0909783 *y*dx*dy + 0.000810681 *lens_ipow(y, 2)*dx + 0.0460194 *x*lens_ipow(dy, 2) + 0.136832 *x*lens_ipow(dx, 2) + 0.00211819 *x*y*dy + 1.57983e-05 *x*lens_ipow(y, 2) + 0.00294841 *lens_ipow(x, 2)*dx + 1.58523e-05 *lens_ipow(x, 3) + -0.260206 *dx*lens_ipow(lambda, 3) + 0.34215 *dx*lens_ipow(dy, 4) + 1.2156 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.400805 *lens_ipow(dx, 5) + 0.000670459 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -1.50629e-07 *lens_ipow(y, 4)*dx + -0.00913681 *x*lens_ipow(lambda, 4) + -0.0136069 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.00163636 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + 8.86087e-09 *lens_ipow(x, 5)*y*dy + 1.27346e-05 *x*lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -5.77914e-13 *x*lens_ipow(y, 8) + -9.83637e-05 *lens_ipow(x, 4)*lens_ipow(dx, 5) + 1.43868 *dx*lens_ipow(lambda, 10) + 1662.33 *lens_ipow(dx, 5)*lens_ipow(dy, 6) + 570.521 *lens_ipow(dx, 9)*lens_ipow(dy, 2) + 132.969 *lens_ipow(dx, 11) + 0.0450834 *x*lens_ipow(lambda, 10) + -1.31685e-10 *lens_ipow(x, 4)*lens_ipow(y, 5)*dx*dy + 1.36862e-05 *lens_ipow(x, 5)*lens_ipow(dy, 6) + -1.69581e-09 *lens_ipow(x, 7)*lens_ipow(dx, 3)*dy + 1.38263e-09 *lens_ipow(x, 7)*y*lens_ipow(dx, 2)*dy + 1.12276e-11 *lens_ipow(x, 9)*lens_ipow(dy, 2) + -1.13654e-11 *lens_ipow(x, 9)*lens_ipow(dx, 2);
const float out_dy =  + 5.13233e-06  + 0.0556752 *dy + -9.12943e-06 *dx + -0.0219592 *y + 8.0622e-07 *x*y + 1.70502 *lens_ipow(dy, 3) + 1.72927 *lens_ipow(dx, 2)*dy + 0.136777 *y*lens_ipow(dy, 2) + 0.0453447 *y*lens_ipow(dx, 2) + 0.00291988 *lens_ipow(y, 2)*dy + 1.54337e-05 *lens_ipow(y, 3) + 0.0917248 *x*dx*dy + 0.00209898 *x*y*dx + 0.000794969 *lens_ipow(x, 2)*dy + 1.49161e-05 *lens_ipow(x, 2)*y + -0.265342 *dy*lens_ipow(lambda, 3) + 0.000421919 *x*lens_ipow(dy, 3) + 0.333965 *lens_ipow(dy, 5) + 0.0407783 *dx*lens_ipow(dy, 4) + 0.793703 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.0373036 *lens_ipow(dx, 4)*dy + -0.00947545 *y*lens_ipow(lambda, 4) + 0.000363611 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 8.39396e-08 *lens_ipow(x, 4)*dy + 0.000160114 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.0013312 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + -9.58619e-05 *lens_ipow(y, 4)*lens_ipow(dy, 5) + -8.39532e-09 *x*lens_ipow(y, 6)*dx*dy + 1.1055e-05 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.46349 *dy*lens_ipow(lambda, 10) + 117.389 *lens_ipow(dy, 11) + 841.701 *lens_ipow(dx, 2)*lens_ipow(dy, 9) + 3122.88 *lens_ipow(dx, 6)*lens_ipow(dy, 5) + 0.0472013 *y*lens_ipow(lambda, 10) + 1.51103e-05 *lens_ipow(y, 5)*lens_ipow(dx, 6) + -1.21439e-11 *lens_ipow(y, 9)*lens_ipow(dy, 2) + 1.28916e-11 *lens_ipow(y, 9)*lens_ipow(dx, 2) + 0.137746 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 5) + 0.127837 *lens_ipow(x, 2)*lens_ipow(dy, 9) + -1.75791e-10 *lens_ipow(x, 5)*lens_ipow(y, 4)*dx*dy;
const float out_transmittance =  + 0.700707  + 0.180576 *lambda + -6.09378e-05 *dx + -6.74599e-07 *x + -0.115041 *lens_ipow(dy, 2) + -0.103455 *lens_ipow(dx, 2) + -0.00242783 *y*dy + -2.96874e-05 *lens_ipow(y, 2) + 3.99727e-06 *x*dy + -0.0036196 *x*dx + -2.82608e-05 *lens_ipow(x, 2) + -0.151592 *lens_ipow(lambda, 3) + -0.0445989 *y*lens_ipow(dy, 3) + -0.021547 *y*lens_ipow(dx, 2)*dy + -0.0267483 *x*dx*lens_ipow(dy, 2) + 1.40227e-05 *x*lens_ipow(y, 2)*dx + 4.11102e-06 *lens_ipow(x, 2)*y*dy + -0.000224583 *x*lens_ipow(dy, 4) + -5.92171 *lens_ipow(dy, 6) + -16.4531 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -13.5901 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -3.18121 *lens_ipow(dx, 6) + -4.52071e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + 1.51192e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2) + 4.67413e-10 *lens_ipow(y, 6) + -1.39284e-05 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -0.00288115 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -0.000473114 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + -0.000245936 *lens_ipow(x, 3)*lens_ipow(dx, 3) + 1.71371e-07 *lens_ipow(x, 5)*dx + 0.169892 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 7.57021e-10 *lens_ipow(x, 2)*lens_ipow(y, 5)*dy + -1.51436e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy + 4.57508e-11 *lens_ipow(x, 4)*lens_ipow(y, 4) + -8.13794e-08 *lens_ipow(x, 5)*y*dx*dy + 2.21128e-08 *lens_ipow(x, 6)*lens_ipow(dy, 2) + 6.7047e-12 *lens_ipow(x, 8) + 0.000141544 *lens_ipow(y, 4)*lens_ipow(dy, 6) + 0.490614 *x*y*dx*lens_ipow(dy, 7) + 0.272461 *lens_ipow(lambda, 11);
