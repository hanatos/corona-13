const float out_x =  + 0.0117585 *dy + -22.3495 *dx + -0.000884526 *y + -8.28978 *x + 0.045628 *y*dx + 0.00838426 *x*dy + 618.265 *dx*lens_ipow(dy, 2) + -9.43987 *lens_ipow(dx, 2)*dy + 605.402 *lens_ipow(dx, 3) + 25.2313 *y*dx*dy + 0.289827 *lens_ipow(y, 2)*dx + 11.3295 *x*lens_ipow(dy, 2) + 35.3999 *x*lens_ipow(dx, 2) + 0.349916 *x*y*dy + -0.00912985 *x*y*dx + -0.00508106 *x*lens_ipow(y, 2) + 0.634704 *lens_ipow(x, 2)*dx + -0.00406587 *lens_ipow(x, 3) + -20.2301 *dx*lens_ipow(lambda, 4) + -0.706737 *x*lens_ipow(lambda, 4) + -0.0191653 *x*lens_ipow(y, 2)*dx*dy + -0.0920881 *lens_ipow(x, 2)*y*dx*dy + 7.37571e-05 *lens_ipow(x, 3)*lens_ipow(y, 2) + 0.946716 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + 19928.5 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + 7274.59 *lens_ipow(dx, 7)*lambda + 1.87228 *x*y*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + 0.00730453 *x*lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.23373e-09 *x*lens_ipow(y, 8) + 0.00129279 *lens_ipow(x, 5)*lens_ipow(dy, 4) + -9.81724e-07 *lens_ipow(x, 7)*lens_ipow(dx, 2) + 121314 *lens_ipow(dx, 6)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 1337.48 *x*lens_ipow(dy, 10) + 145.999 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*lens_ipow(dy, 5) + 8.48491 *lens_ipow(x, 3)*lens_ipow(dx, 8) + -0.00352702 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.00226692 *lens_ipow(x, 5)*y*lens_ipow(dx, 4)*dy + 3.22727e-08 *lens_ipow(x, 6)*lens_ipow(y, 3)*dx*dy + 1.70541e-07 *lens_ipow(x, 7)*y*lens_ipow(dx, 3) + 8.17591e-12 *lens_ipow(x, 11);
const float out_y =  + 0.00657084  + -20.7283 *dy + -0.25503 *dx + -8.30838 *y + -0.00406695 *x + 0.000416426 *x*y + 464.174 *lens_ipow(dy, 3) + 13.1527 *dx*lens_ipow(dy, 2) + 601.657 *lens_ipow(dx, 2)*dy + 36.5211 *y*lens_ipow(dy, 2) + 12.2377 *y*lens_ipow(dx, 2) + 0.71662 *lens_ipow(y, 2)*dy + -0.0023371 *lens_ipow(y, 3) + 0.265505 *x*lens_ipow(dy, 2) + 24.1507 *x*dx*dy + 0.417748 *x*y*dx + 0.290074 *lens_ipow(x, 2)*dy + -0.00255856 *lens_ipow(x, 2)*y + -0.63527 *y*lens_ipow(lambda, 3) + 0.445646 *y*lens_ipow(dx, 2)*dy + 1594.89 *lens_ipow(dy, 5) + 1836.8 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -34.3903 *dy*lens_ipow(lambda, 5) + 202.597 *dx*lens_ipow(dy, 5) + 1948.2 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 4.10871e-09 *lens_ipow(x, 2)*lens_ipow(y, 7) + -5497.66 *lens_ipow(dy, 10) + 68158.4 *lens_ipow(dx, 2)*lens_ipow(dy, 8) + 643.123 *x*lens_ipow(dy, 9) + -2.82531 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 11382.4 *lens_ipow(dy, 7)*lens_ipow(lambda, 4) + -187226 *lens_ipow(dy, 11) + -1.71104e-07 *lens_ipow(y, 8)*lens_ipow(dy, 3) + 3.38221e-12 *lens_ipow(y, 11) + -4354.38 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 6) + 52.1274 *x*lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 4) + -0.0017902 *x*lens_ipow(y, 4)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -1.70887e-06 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*lens_ipow(dy, 2) + 8.26979e-05 *lens_ipow(x, 6)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 5.3851e-11 *lens_ipow(x, 8)*lens_ipow(y, 3);
const float out_dx =  + 4.39181e-05  + -0.000691406 *dy + -0.371834 *dx + -0.103921 *x + -0.00535352 *dx*dy + 0.000331089 *y*dx + 6.79024 *dx*lens_ipow(dy, 2) + 6.62924 *lens_ipow(dx, 3) + 0.260144 *y*dx*dy + 0.0029392 *lens_ipow(y, 2)*dx + 0.127067 *x*lens_ipow(dy, 2) + 0.373901 *x*lens_ipow(dx, 2) + 0.0035462 *x*y*dy + -4.39946e-05 *x*y*dx + 5.73413e-05 *x*lens_ipow(y, 2) + 0.00806487 *lens_ipow(x, 2)*dx + 0.000233977 *lens_ipow(x, 3) + -0.133176 *dx*lens_ipow(lambda, 3) + -0.175902 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.08306 *lens_ipow(dx, 4)*dy + -0.436332 *y*lens_ipow(dx, 3)*dy + 0.00903928 *x*y*lens_ipow(dy, 3) + 1.02796e-05 *lens_ipow(x, 3)*y*dy + 0.00781677 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + -1.81248e-05 *lens_ipow(y, 4)*lens_ipow(dx, 3) + -2.84329e-07 *lens_ipow(y, 5)*dx*dy + -4.79735e-09 *x*lens_ipow(y, 6) + -3.27104e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -4.62993e-12 *lens_ipow(x, 9) + -0.00665127 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -17.4935 *y*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + 0.680912 *x*lens_ipow(y, 2)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -0.019553 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 5) + 1.19094e-07 *x*lens_ipow(y, 6)*lens_ipow(dy, 4) + -0.594577 *lens_ipow(x, 2)*lens_ipow(dx, 9) + 0.000630127 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 5.5158e-07 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000392073 *lens_ipow(x, 5)*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -6.36822e-06 *lens_ipow(x, 5)*y*lens_ipow(dx, 4)*dy + -4.79451e-11 *lens_ipow(x, 8)*y*lens_ipow(dx, 2);
const float out_dy =  + 4.60351e-05  + -0.343971 *dy + 0.00051455 *dx + -0.103301 *y + 0.00401013 *lens_ipow(dy, 2) + 3.5394e-06 *x*y + 6.08659 *lens_ipow(dy, 3) + -0.0396805 *dx*lens_ipow(dy, 2) + 6.10086 *lens_ipow(dx, 2)*dy + 0.32933 *y*lens_ipow(dy, 2) + 0.069954 *y*lens_ipow(dx, 2) + 0.00677717 *lens_ipow(y, 2)*dy + 0.000216533 *lens_ipow(y, 3) + 0.222213 *x*dx*dy + 0.00408993 *x*y*dx + 0.00265126 *lens_ipow(x, 2)*dy + 0.000383617 *lens_ipow(x, 2)*y + -0.132187 *dy*lens_ipow(lambda, 3) + 0.00195387 *y*lens_ipow(lambda, 3) + 0.00898349 *y*lens_ipow(dx, 2)*dy + 0.425595 *y*lens_ipow(dx, 4) + 0.000199225 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.00390521 *x*y*dx*lens_ipow(dy, 2) + 8.9035e-06 *x*lens_ipow(y, 3)*dx + 7.47543e-07 *lens_ipow(x, 2)*lens_ipow(y, 3) + -4.01124e-06 *lens_ipow(x, 3)*dx*dy + 2.09168 *y*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -2.45899e-06 *lens_ipow(x, 4)*y*lens_ipow(dx, 2) + 1.33329e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy + -39.5143 *lens_ipow(dy, 10) + -16.2815 *y*lens_ipow(dx, 2)*lens_ipow(dy, 7) + -0.0809489 *x*y*lens_ipow(dy, 8) + 42.5304 *lens_ipow(dy, 7)*lens_ipow(lambda, 4) + 0.444424 *lens_ipow(y, 2)*dx*lens_ipow(dy, 8) + 0.0584587 *lens_ipow(y, 3)*lens_ipow(dy, 8) + -2.24918e-08 *lens_ipow(y, 7)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 7.60653e-12 *lens_ipow(x, 2)*lens_ipow(y, 8)*dy + 0.0294376 *lens_ipow(x, 3)*lens_ipow(dx, 7)*dy + 1.15702e-05 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dx, 5) + -0.0123719 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 5);
const float out_transmittance =  + 0.303237  + 0.000143379 *dy + -5.76695e-06 *x + -0.137045 *lens_ipow(dy, 2) + 0.00338181 *dx*dy + -0.140292 *lens_ipow(dx, 2) + 0.000849689 *y*dy + -0.00011498 *lens_ipow(y, 2) + -0.00163802 *x*dx + -7.60768e-05 *lens_ipow(x, 2) + 0.151728 *lens_ipow(lambda, 3) + -0.0904399 *y*lens_ipow(dy, 3) + 0.000738925 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.000108424 *x*y*lens_ipow(dy, 2) + -0.000900217 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 25.5912 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 8.73982 *lens_ipow(dx, 6) + -3.51514e-08 *lens_ipow(x, 2)*lens_ipow(y, 4) + 9.5092e-06 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -3.10165e-08 *lens_ipow(x, 4)*lens_ipow(y, 2) + -1.12902e-08 *lens_ipow(x, 6) + -117.273 *lens_ipow(dy, 8) + -5.8025e-11 *lens_ipow(y, 8) + -0.000563117 *lens_ipow(x, 3)*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + 0.000474406 *lens_ipow(x, 3)*y*lens_ipow(dx, 3)*dy + 0.0974581 *x*y*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -0.00884298 *x*lens_ipow(y, 2)*lens_ipow(dx, 5)*dy + -4270.57 *lens_ipow(dx, 2)*lens_ipow(dy, 8) + -10938.7 *lens_ipow(dx, 6)*lens_ipow(dy, 4) + -2230.37 *lens_ipow(dx, 8)*lens_ipow(dy, 2) + -0.723428 *lens_ipow(y, 2)*lens_ipow(dx, 8) + -0.00250662 *lens_ipow(y, 4)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -5.86835e-07 *lens_ipow(y, 6)*lens_ipow(dy, 4) + 30.6209 *x*lens_ipow(dx, 9) + 2.3652e-11 *lens_ipow(x, 2)*lens_ipow(y, 7)*dy + 0.117718 *lens_ipow(x, 3)*dx*lens_ipow(dy, 6) + 4.85596e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -2.45864e-09 *lens_ipow(x, 7)*y*dx*dy + -1.14705 *lens_ipow(lambda, 11) + 25.4491 *lens_ipow(dy, 6)*lens_ipow(lambda, 5);
