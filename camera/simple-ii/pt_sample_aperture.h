float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + 1.47104e-05  + 25.2552 *begin_dx + 1.64108e-06 *begin_y + 0.88529 *begin_x + 5.31843e-07 *begin_x*begin_y + -1.83617 *begin_dx*lens_ipow(begin_dy, 2) + -1.52153 *lens_ipow(begin_dx, 3) + 0.147112 *begin_y*begin_dx*begin_dy + 0.00609101 *lens_ipow(begin_y, 2)*begin_dx + -0.0554282 *begin_x*lens_ipow(begin_dy, 2) + 0.137339 *begin_x*lens_ipow(begin_dx, 2) + 7.14484e-05 *begin_x*lens_ipow(begin_y, 2) + 0.0100807 *lens_ipow(begin_x, 2)*begin_dx + 0.000107588 *lens_ipow(begin_x, 3) + 0.874804 *begin_dx*lens_ipow(begin_lambda, 3) + 0.00494302 *begin_x*begin_y*begin_dy*begin_lambda + 0.29696 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 0.0355258 *begin_x*lens_ipow(begin_lambda, 4) + -3.69121e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 1.24453e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dy + 0.0354535 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + 0.000170763 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 3) + 0.000683737 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5) + -2.09067e-05 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 3) + 0.0926377 *begin_x*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + 0.0256521 *begin_x*lens_ipow(begin_dy, 6) + 1.45029e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 3) + 0.44816 *begin_dx*lens_ipow(begin_dy, 8) + 0.0372671 *lens_ipow(begin_dx, 9) + 0.00160921 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 4) + 6.7244e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + 3.01533e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 4) + -1.33148e-12 *lens_ipow(begin_x, 8)*begin_dx + -4.65791 *begin_dx*lens_ipow(begin_lambda, 10) + 3.50038 *begin_dx*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 6) + -0.189056 *begin_x*lens_ipow(begin_lambda, 10) + -0.00423704 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 2) + -0.000459711 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 8) + 0.000101431 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 7)*begin_dy + 6.8061e-13 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6)*lens_ipow(begin_lambda, 2);
  pred_y =  + -1.66982e-05  + 25.2549 *begin_dy + 0.884941 *begin_y + 2.46235e-06 *begin_x + -0.000487611 *begin_dx*begin_dy + -1.46287 *lens_ipow(begin_dy, 3) + -1.45263 *lens_ipow(begin_dx, 2)*begin_dy + 0.144255 *begin_y*lens_ipow(begin_dy, 2) + -0.0348381 *begin_y*lens_ipow(begin_dx, 2) + 0.010328 *lens_ipow(begin_y, 2)*begin_dy + 0.000109554 *lens_ipow(begin_y, 3) + 0.180011 *begin_x*begin_dx*begin_dy + 0.00367345 *begin_x*begin_y*begin_dx + 0.00654957 *lens_ipow(begin_x, 2)*begin_dy + 0.000108976 *lens_ipow(begin_x, 2)*begin_y + 0.797561 *begin_dy*lens_ipow(begin_lambda, 3) + -6.53929e-05 *begin_x*lens_ipow(begin_dy, 3) + 0.0362703 *begin_y*lens_ipow(begin_lambda, 4) + -0.0176623 *begin_x*begin_dx*lens_ipow(begin_dy, 3) + 9.38447e-07 *begin_x*lens_ipow(begin_y, 3)*begin_dx + -1.53514e-05 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2) + 0.0188592 *begin_y*lens_ipow(begin_dx, 6) + 1.55345e-06 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 3) + 0.000537731 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5) + -5.72727e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3)*begin_dy + 0.0886898 *lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 3) + 0.0879175 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5)*begin_lambda + 0.016735 *lens_ipow(begin_dy, 9) + 0.183099 *lens_ipow(begin_dx, 8)*begin_dy + 2.19235e-08 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 4) + -1.50573e-12 *lens_ipow(begin_y, 8)*begin_dy + -0.0117741 *begin_x*lens_ipow(begin_dx, 3)*begin_dy*lens_ipow(begin_lambda, 4) + 8.16325e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 4) + 4.36515e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + -3.22089e-12 *lens_ipow(begin_x, 8)*begin_dy + -4.37325 *begin_dy*lens_ipow(begin_lambda, 10) + -0.662976 *lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 5) + -0.183804 *begin_y*lens_ipow(begin_lambda, 10) + 9.05996e-05 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 7) + -1.27567e-14 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 2);
  pred_dx =  + 9.83814e-06  + 0.697653 *begin_dx + 6.74336e-07 *begin_y + -0.0151942 *begin_x + 1.29215e-06 *begin_x*begin_dy + -0.739846 *begin_dx*lens_ipow(begin_dy, 2) + -0.695315 *lens_ipow(begin_dx, 3) + -0.0298412 *begin_y*begin_dx*begin_dy + -0.000313322 *lens_ipow(begin_y, 2)*begin_dx + -0.0161896 *begin_x*lens_ipow(begin_dy, 2) + -0.0435965 *begin_x*lens_ipow(begin_dx, 2) + -0.000377757 *begin_x*begin_y*begin_dy + -8.28865e-06 *begin_x*lens_ipow(begin_y, 2) + -0.000610939 *lens_ipow(begin_x, 2)*begin_dx + -7.12902e-06 *lens_ipow(begin_x, 3) + 0.00244608 *begin_x*lens_ipow(begin_lambda, 3) + 0.0636618 *begin_dx*lens_ipow(begin_lambda, 4) + -0.137652 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -0.0608135 *lens_ipow(begin_dx, 5) + -0.00012391 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -5.91603e-06 *lens_ipow(begin_y, 3)*begin_dx*begin_dy + 0.000598336 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -8.09698e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 2.45748e-07 *lens_ipow(begin_x, 3)*begin_y*begin_dy + 0.0293939 *begin_dx*lens_ipow(begin_dy, 6) + -0.00058324 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 4) + 1.04311e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 2) + -8.03838e-07 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_dy, 2) + 0.00765051 *begin_x*lens_ipow(begin_dy, 6)*begin_lambda + 7.13623e-09 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_lambda, 4) + 1.07101e-09 *begin_x*lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 3) + -0.000135127 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + -0.000396794 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 6) + -6.65004e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2) + 0.112456 *lens_ipow(begin_dx, 9)*lens_ipow(begin_dy, 2) + -7.86205e-07 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 7) + 8.15702e-14 *lens_ipow(begin_y, 9)*begin_dx*begin_dy + 0.000866781 *begin_x*begin_y*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 6) + 4.46354e-12 *lens_ipow(begin_x, 7)*begin_y*lens_ipow(begin_dy, 3) + 3.44895e-15 *lens_ipow(begin_x, 9)*lens_ipow(begin_lambda, 2);
  pred_dy =  + 7.00856e-06  + 0.697549 *begin_dy + -0.0151386 *begin_y + -0.697465 *lens_ipow(begin_dy, 3) + -0.726557 *lens_ipow(begin_dx, 2)*begin_dy + -0.0440123 *begin_y*lens_ipow(begin_dy, 2) + -0.0160967 *begin_y*lens_ipow(begin_dx, 2) + -0.000634947 *lens_ipow(begin_y, 2)*begin_dy + -7.62496e-06 *lens_ipow(begin_y, 3) + -0.0293766 *begin_x*begin_dx*begin_dy + -0.000344246 *begin_x*begin_y*begin_dx + -0.000272994 *lens_ipow(begin_x, 2)*begin_dy + -6.82806e-06 *lens_ipow(begin_x, 2)*begin_y + 0.00201202 *begin_y*lens_ipow(begin_lambda, 3) + 0.0560699 *begin_dy*lens_ipow(begin_lambda, 4) + -0.0611097 *lens_ipow(begin_dy, 5) + -0.157042 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -8.49451e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -0.000140643 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 2) + 0.00079135 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -0.000180509 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + -9.48528e-06 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2) + -3.77564e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 0.00552454 *begin_y*lens_ipow(begin_dx, 6) + -0.000387735 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -0.000524004 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4)*begin_dy + 1.04233e-09 *lens_ipow(begin_x, 5)*begin_dx*begin_dy + 0.0224615 *lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 3) + 8.00709e-09 *lens_ipow(begin_y, 5)*lens_ipow(begin_lambda, 3) + 0.034938 *lens_ipow(begin_dx, 8)*begin_dy + -0.00369451 *begin_x*lens_ipow(begin_dx, 3)*begin_dy*lens_ipow(begin_lambda, 4) + -0.00848157 *begin_x*lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 3) + 1.13243e-12 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 4)*begin_dy*begin_lambda + 0.182019 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 9) + -0.00975626 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 8) + -9.8409e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 8) + 1.92311e-12 *lens_ipow(begin_y, 8)*lens_ipow(begin_dx, 2)*begin_dy + -1.09179e-16 *lens_ipow(begin_y, 10)*begin_dy + -0.000153094 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 9) + 2.1074e-12 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 3);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 25.2552  + -1.83617 *lens_ipow(begin_dy, 2) + -4.56459 *lens_ipow(begin_dx, 2) + 0.147112 *begin_y*begin_dy + 0.00609101 *lens_ipow(begin_y, 2) + 0.274678 *begin_x*begin_dx + 0.0100807 *lens_ipow(begin_x, 2) + 0.874804 *lens_ipow(begin_lambda, 3) + 0.89088 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 0.0354535 *begin_y*begin_dy*lens_ipow(begin_lambda, 3) + 0.00341868 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4) + -2.09067e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 3) + 4.35087e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2) + 0.44816 *lens_ipow(begin_dy, 8) + 0.335404 *lens_ipow(begin_dx, 8) + 0.00482762 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 4) + 1.34488e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + -1.33148e-12 *lens_ipow(begin_x, 8) + -4.65791 *lens_ipow(begin_lambda, 10) + 3.50038 *lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 6) + -0.00847409 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 2) + 0.000710015 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 6)*begin_dy+0.0f;
  dx1_domega0[0][1] =  + -3.67234 *begin_dx*begin_dy + 0.147112 *begin_y*begin_dx + -0.110856 *begin_x*begin_dy + 0.00494302 *begin_x*begin_y*begin_lambda + 0.59392 *lens_ipow(begin_dx, 3)*begin_dy + -7.38242e-05 *begin_x*lens_ipow(begin_y, 2)*begin_dy + 1.24453e-06 *lens_ipow(begin_x, 3)*begin_y + 0.0354535 *begin_y*begin_dx*lens_ipow(begin_lambda, 3) + -6.272e-05 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + 0.185275 *begin_x*begin_dy*lens_ipow(begin_lambda, 4) + 0.153912 *begin_x*lens_ipow(begin_dy, 5) + 3.58528 *begin_dx*lens_ipow(begin_dy, 7) + 6.7244e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + 1.20613e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 3) + 14.0015 *begin_dx*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 6) + -0.0211852 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2) + 0.000101431 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 7)+0.0f;
  dx1_domega0[1][0] =  + -0.000487611 *begin_dy + -2.90525 *begin_dx*begin_dy + -0.0696762 *begin_y*begin_dx + 0.180011 *begin_x*begin_dy + 0.00367345 *begin_x*begin_y + -0.0176623 *begin_x*lens_ipow(begin_dy, 3) + 9.38447e-07 *begin_x*lens_ipow(begin_y, 3) + -3.07028e-05 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 0.113155 *begin_y*lens_ipow(begin_dx, 5) + -0.000171818 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_dy + 0.175835 *begin_dx*lens_ipow(begin_dy, 5)*begin_lambda + 1.4648 *lens_ipow(begin_dx, 7)*begin_dy + 8.76939e-08 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 3) + -0.0353224 *begin_x*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 4) + 4.36515e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -3.97786 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 5) + 9.05996e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 7)+0.0f;
  dx1_domega0[1][1] =  + 25.2549  + -0.000487611 *begin_dx + -4.3886 *lens_ipow(begin_dy, 2) + -1.45263 *lens_ipow(begin_dx, 2) + 0.288511 *begin_y*begin_dy + 0.010328 *lens_ipow(begin_y, 2) + 0.180011 *begin_x*begin_dx + 0.00654957 *lens_ipow(begin_x, 2) + 0.797561 *lens_ipow(begin_lambda, 3) + -0.000196179 *begin_x*lens_ipow(begin_dy, 2) + -0.0529869 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + 4.66035e-06 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2) + 0.00268865 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4) + -5.72727e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3) + 0.443449 *lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 3) + 0.439588 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4)*begin_lambda + 0.150615 *lens_ipow(begin_dy, 8) + 0.183099 *lens_ipow(begin_dx, 8) + -1.50573e-12 *lens_ipow(begin_y, 8) + -0.0117741 *begin_x*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 4) + 8.7303e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + -3.22089e-12 *lens_ipow(begin_x, 8) + -4.37325 *lens_ipow(begin_lambda, 10) + -3.31488 *lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 4) + 0.000634197 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 6)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
