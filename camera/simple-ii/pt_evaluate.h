const float out_x =  + 2.01925e-05  + 30.421 *dx + 4.18341e-05 *y + 0.494773 *x + 2.1368e-06 *x*y + 0.0035086 *lens_ipow(dy, 3) + -12.3511 *dx*lens_ipow(dy, 2) + -13.7462 *lens_ipow(dx, 3) + 0.00431615 *lens_ipow(y, 2)*dx + 0.00761577 *x*y*dy + 5.13835e-05 *x*lens_ipow(y, 2) + 0.0144417 *lens_ipow(x, 2)*dx + 6.9513e-05 *lens_ipow(x, 3) + 3.27288 *dx*lens_ipow(lambda, 4) + 17.3946 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 6.06409 *lens_ipow(dx, 5) + 0.204007 *y*lens_ipow(dx, 3)*dy + -0.00331509 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -0.0338336 *x*lens_ipow(dy, 4) + 0.268621 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000394869 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 0.0964549 *x*lens_ipow(lambda, 5) + 5.74207 *dx*lens_ipow(dy, 6) + 7.95751e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -5.18691 *lens_ipow(dx, 5)*lens_ipow(dy, 2)*lambda + -1.58279 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + -0.749862 *lens_ipow(dx, 9) + 2.75395e-07 *x*lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.31971e-11 *lens_ipow(x, 6)*lens_ipow(y, 2)*dx + 5.3637e-11 *lens_ipow(x, 8)*dx + -10.377 *dx*lens_ipow(lambda, 10) + 1.88946e-08 *lens_ipow(y, 6)*lens_ipow(dx, 5) + -0.0927918 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -0.00679733 *x*y*lens_ipow(dy, 9) + 0.0102953 *x*y*lens_ipow(dx, 4)*dy*lens_ipow(lambda, 4) + 3.69317e-08 *x*lens_ipow(y, 4)*lens_ipow(lambda, 6) + -0.000436406 *lens_ipow(x, 3)*lens_ipow(lambda, 8) + -1.2961e-05 *lens_ipow(x, 3)*y*lens_ipow(dx, 6)*dy + 3.44419e-11 *lens_ipow(x, 8)*dx*lens_ipow(dy, 2) + 1.7835e-12 *lens_ipow(x, 9)*lens_ipow(lambda, 2);
const float out_y =  + 0.000134552  + 30.4512 *dy + 0.495423 *y + -13.4389 *lens_ipow(dy, 3) + -11.7804 *lens_ipow(dx, 2)*dy + 0.0139055 *lens_ipow(y, 2)*dy + 7.20459e-05 *lens_ipow(y, 3) + 0.00775022 *x*y*dx + 0.00390391 *lens_ipow(x, 2)*dy + 3.99703e-05 *lens_ipow(x, 2)*y + 2.65911 *dy*lens_ipow(lambda, 4) + 5.25799 *lens_ipow(dy, 5) + -0.0243531 *y*lens_ipow(dx, 4) + 0.000282917 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.00974809 *x*y*dx*lens_ipow(dy, 2) + 16.5918 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + 0.0793546 *y*lens_ipow(lambda, 5) + -2.89862e-07 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -3.76053 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + 5.27996 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 4.60202 *lens_ipow(dx, 6)*dy + 0.000135874 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.000683088 *lens_ipow(x, 2)*lens_ipow(dy, 5) + -1.38802e-05 *lens_ipow(x, 3)*y*dx*lens_ipow(lambda, 2) + -9.81338e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -0.280351 *lens_ipow(dy, 9) + 10.9156 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + -7.2789e-13 *lens_ipow(y, 9) + -3.99257e-13 *lens_ipow(x, 2)*lens_ipow(y, 7) + -5.60589e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(dx, 2) + -6.16018e-13 *lens_ipow(x, 8)*y + -5.10244 *dy*lens_ipow(lambda, 10) + -34.5504 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 4) + 0.367653 *y*lens_ipow(dx, 8)*lens_ipow(dy, 2) + 0.0245688 *x*y*dx*lens_ipow(lambda, 8) + -0.035008 *x*y*lens_ipow(dx, 5)*lens_ipow(dy, 4) + -0.00375033 *x*y*lens_ipow(dx, 9) + 0.000523625 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 7) + -2.70559e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*lens_ipow(dy, 3) + -8.67083e-07 *lens_ipow(x, 5)*dx*dy*lens_ipow(lambda, 4);
const float out_dx =  + -8.5188e-07  + 2.87302e-05 *dy + -1.02651 *dx + 1.19235e-06 *y + -0.0492502 *x + -0.902276 *dx*lens_ipow(dy, 2) + -0.553257 *lens_ipow(dx, 3) + -0.0468609 *y*dx*dy + -0.000567729 *lens_ipow(y, 2)*dx + -0.0215981 *x*lens_ipow(dy, 2) + -0.0411757 *x*lens_ipow(dx, 2) + -0.00103873 *x*y*dy + -4.47595e-06 *x*lens_ipow(y, 2) + -0.00101613 *lens_ipow(x, 2)*dx + -5.62063e-07 *lens_ipow(x, 3) + 0.113201 *dx*lens_ipow(lambda, 3) + 3.9992e-07 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.000290235 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 0.0061882 *x*lens_ipow(lambda, 4) + 0.000480974 *x*y*lens_ipow(dx, 2)*dy + -0.000268528 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 0.0630923 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 2.66538e-07 *x*lens_ipow(y, 3)*lens_ipow(dy, 3) + 1.23711e-05 *lens_ipow(x, 2)*lens_ipow(dx, 5) + 9.80647e-09 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy + -9.6384e-09 *lens_ipow(x, 5)*lens_ipow(dy, 2) + 5.66917e-11 *lens_ipow(y, 7)*dx*dy + -2.99423e-14 *lens_ipow(x, 3)*lens_ipow(y, 6) + -3.5794e-07 *lens_ipow(x, 4)*dx*lens_ipow(dy, 4) + -2.94361e-11 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.7055e-05 *lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 5) + -0.573908 *dx*lens_ipow(lambda, 10) + 0.0828084 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -0.0209417 *lens_ipow(dx, 3)*lens_ipow(lambda, 8) + -0.004286 *y*dx*lens_ipow(dy, 9) + 3.14721e-12 *lens_ipow(y, 8)*dx*lens_ipow(lambda, 2) + -0.0286649 *x*lens_ipow(lambda, 10) + 0.00390668 *x*lens_ipow(dy, 10) + -1.36586e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 6) + -2.56995e-09 *lens_ipow(x, 5)*y*lens_ipow(dx, 4)*dy;
const float out_dy =  + -9.46651e-06  + -1.02313 *dy + -0.0492014 *y + -0.570195 *lens_ipow(dy, 3) + -0.203656 *lens_ipow(dx, 2)*dy + -0.0421999 *y*lens_ipow(dy, 2) + -3.10808e-06 *y*dx*dy + -0.00967712 *y*lens_ipow(dx, 2) + -0.0010564 *lens_ipow(y, 2)*dy + -1.05146e-06 *lens_ipow(y, 3) + -0.000276425 *x*y*dx + -2.29079e-05 *lens_ipow(x, 2)*dy + 4.5662e-06 *lens_ipow(x, 2)*y + 0.115364 *dy*lens_ipow(lambda, 3) + -1.00689e-08 *lens_ipow(y, 3)*dy + 0.00626454 *y*lens_ipow(lambda, 4) + -0.0150238 *x*dx*lens_ipow(dy, 3) + -0.000318517 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.000162642 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 1.35945e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -0.155475 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 0.00695589 *y*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -6.36973e-07 *lens_ipow(y, 3)*lens_ipow(dy, 4) + -0.00327368 *x*lens_ipow(dx, 5)*dy + -2.20063e-07 *lens_ipow(x, 4)*lens_ipow(dy, 3) + -5.75323e-11 *lens_ipow(x, 6)*dy + 0.0138669 *lens_ipow(dy, 9) + 0.00323231 *y*lens_ipow(dx, 8) + -1.4082e-10 *lens_ipow(y, 6)*lens_ipow(dx, 2)*dy + -9.43962e-05 *lens_ipow(x, 2)*lens_ipow(dy, 7) + 2.46735e-12 *lens_ipow(x, 2)*lens_ipow(y, 5)*lens_ipow(dx, 2) + -0.594001 *dy*lens_ipow(lambda, 10) + -0.0881703 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 6) + -0.0293551 *y*lens_ipow(lambda, 10) + -0.00010206 *lens_ipow(y, 2)*lens_ipow(dx, 8)*dy + -1.36781e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 6) + -8.83314e-06 *lens_ipow(x, 3)*dx*lens_ipow(dy, 7) + -2.99129e-14 *lens_ipow(x, 4)*lens_ipow(y, 5)*lens_ipow(dy, 2) + -4.44069e-11 *lens_ipow(x, 6)*y*lens_ipow(dx, 4) + -2.94901e-12 *lens_ipow(x, 8)*lens_ipow(dx, 2)*dy;
const float out_transmittance =  + 0.810678  + 0.0952603 *lambda + -9.98441e-06 *dy + -4.54686e-07 *x + -0.0368051 *lens_ipow(dy, 2) + -0.0368304 *lens_ipow(dx, 2) + -0.00152821 *y*dy + 1.15717e-06 *y*dx + -2.61916e-05 *lens_ipow(y, 2) + -9.82938e-07 *x*dy + -0.00153956 *x*dx + -2.85621e-05 *lens_ipow(x, 2) + -0.0798538 *lens_ipow(lambda, 3) + -0.101475 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.87742e-05 *x*y*dx*dy + 1.32615e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 2.43746e-05 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda + 2.63961e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -1.5318e-06 *lens_ipow(x, 3)*dx*lambda + -0.0967881 *lens_ipow(dy, 6) + -0.0761375 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -0.0444828 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -0.0924571 *lens_ipow(dx, 6) + -1.82861e-10 *lens_ipow(x, 4)*lens_ipow(y, 2) + -0.00957324 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -0.0133643 *lens_ipow(dx, 2)*lens_ipow(lambda, 5) + -1.31181e-07 *lens_ipow(y, 4)*lens_ipow(dx, 4) + -5.52301e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 5) + -0.00319302 *y*lens_ipow(dy, 9) + -0.00631391 *y*lens_ipow(dx, 2)*lens_ipow(dy, 7) + -0.00179212 *y*lens_ipow(dx, 8)*dy + -5.04147e-16 *lens_ipow(y, 10) + -0.00306392 *x*lens_ipow(dx, 5)*lens_ipow(dy, 4) + 0.000165949 *lens_ipow(x, 2)*lens_ipow(dx, 8) + 1.36554e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 5) + 1.63207e-16 *lens_ipow(x, 2)*lens_ipow(y, 8) + 3.41374e-11 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + 2.90361e-12 *lens_ipow(x, 6)*lens_ipow(dy, 4) + -7.11866e-13 *lens_ipow(x, 8)*lens_ipow(dx, 2) + 0.159353 *lens_ipow(lambda, 11);
