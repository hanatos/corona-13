const float out_x =  + -3.44136e-06  + -0.000225677 *dy + 43.0804 *dx + 0.790034 *x + -0.00255173 *dx*dy + -0.00350182 *lens_ipow(dx, 2) + -3.14678e-05 *x*dy + -6.54549e-05 *x*dx + -3.98629 *dx*lens_ipow(dy, 2) + -3.61141 *lens_ipow(dx, 3) + 0.0963336 *y*dx*dy + 0.000418481 *lens_ipow(y, 2)*dx + -0.304969 *x*lens_ipow(dy, 2) + -0.0264966 *x*lens_ipow(dx, 2) + -0.00942134 *x*y*dy + -0.000135801 *x*lens_ipow(y, 2) + -0.00346055 *lens_ipow(x, 2)*dx + -0.000122032 *lens_ipow(x, 3) + 1.26908 *dx*lens_ipow(lambda, 3) + 0.0110795 *x*lens_ipow(lambda, 3) + -6.06289e-09 *lens_ipow(x, 3)*y + -0.00609 *x*y*lens_ipow(dx, 2)*dy + -6.6452e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.000158005 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -0.0624715 *lens_ipow(y, 2)*lens_ipow(dx, 5) + -0.125383 *x*y*lens_ipow(dy, 5) + 1.72986e-05 *x*lens_ipow(y, 2)*lens_ipow(lambda, 4) + -3.53209e-11 *x*lens_ipow(y, 6) + -0.429206 *lens_ipow(x, 2)*lens_ipow(dx, 5) + -8.62198e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 2.20033e-06 *lens_ipow(x, 4)*y*dx*dy + 1.88496e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + -7.77368e-07 *lens_ipow(x, 5)*lens_ipow(dy, 2) + 0.00178277 *x*y*dy*lens_ipow(lambda, 6) + -1.05692e-12 *lens_ipow(x, 5)*lens_ipow(y, 4) + -5.88897e-13 *lens_ipow(x, 9) + -1.96868 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 3.91758e-08 *lens_ipow(x, 5)*lens_ipow(lambda, 5) + -6.7011 *dx*lens_ipow(lambda, 10) + -0.0646457 *x*lens_ipow(lambda, 10);
const float out_y =  + 5.15165e-06  + 46.704 *dy + 0.90776 *y + 5.66776e-07 *x + -0.00683992 *dx*dy + -4.22064e-05 *y*dx + 3.70906e-05 *x*dy + -2.96909e-07 *lens_ipow(x, 2) + 0.742631 *lens_ipow(dy, 3) + -0.363209 *lens_ipow(dx, 2)*dy + 0.0154544 *y*lens_ipow(dy, 2) + -0.144491 *y*lens_ipow(dx, 2) + -0.00564172 *lens_ipow(y, 2)*dy + -0.000106534 *lens_ipow(y, 3) + -0.00092955 *x*lens_ipow(dy, 2) + 0.242385 *x*dx*dy + -1.478e-05 *x*y*dy + -0.00636909 *x*y*dx + 0.00356562 *lens_ipow(x, 2)*dy + -0.000105678 *lens_ipow(x, 2)*y + 0.0175459 *y*lens_ipow(lambda, 3) + 2.37133 *dy*lens_ipow(lambda, 4) + -0.0116404 *x*y*dx*lens_ipow(dy, 2) + -0.00376833 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -0.0900307 *lens_ipow(y, 2)*lens_ipow(dy, 5) + 3.28891e-05 *x*lens_ipow(y, 3)*lens_ipow(dx, 3) + 7.85147e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy + 1.59512e-05 *lens_ipow(x, 4)*lens_ipow(dy, 3) + -1.78105e-10 *lens_ipow(x, 4)*lens_ipow(y, 3) + -1.43124e-11 *lens_ipow(x, 6)*y + -0.0773146 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 0.00131756 *x*y*dx*lens_ipow(lambda, 5) + 2.4764e-08 *lens_ipow(y, 5)*lens_ipow(lambda, 4) + -7.76224e-14 *lens_ipow(y, 9) + -3.62324e-13 *lens_ipow(x, 2)*lens_ipow(y, 7) + 1.02381e-11 *lens_ipow(x, 8)*dy + 1.43774e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 5) + 2.49957e-06 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -11.4874 *dy*lens_ipow(lambda, 10) + -0.0958202 *y*lens_ipow(lambda, 10);
const float out_dx =  + 3.42879e-08  + -9.73018e-06 *dy + 0.0820856 *dx + -0.0217531 *x + -0.000760571 *dx*dy + -0.000563343 *lens_ipow(dx, 2) + -6.38104e-06 *x*dy + -1.1525e-05 *x*dx + -0.288547 *dx*lens_ipow(dy, 2) + -0.328124 *lens_ipow(dx, 3) + 0.01282 *y*dx*dy + 6.49129e-05 *lens_ipow(y, 2)*dx + 0.00316486 *x*lens_ipow(dy, 2) + 0.00996627 *x*lens_ipow(dx, 2) + 0.000370356 *x*y*dy + -2.57057e-06 *x*lens_ipow(y, 2) + 0.000246851 *lens_ipow(x, 2)*dx + -5.29607e-06 *lens_ipow(x, 3) + 0.00309456 *x*lens_ipow(lambda, 3) + -1.20209e-09 *lens_ipow(x, 3)*y + 0.210206 *dx*lens_ipow(lambda, 4) + 1.09497e-06 *x*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 1.17936e-05 *lens_ipow(x, 2)*y*dx*dy + 1.15206e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + 8.28538e-06 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -4.98327e-06 *x*y*dy*lens_ipow(lambda, 3) + -0.0109514 *x*y*lens_ipow(dy, 5) + 0.000276551 *x*lens_ipow(y, 2)*lens_ipow(dx, 4) + -1.43042e-11 *lens_ipow(x, 3)*lens_ipow(y, 4) + -2.87827e-06 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2) + -1.46751e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy + 1.1459e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + -5.29478e-12 *lens_ipow(x, 7) + -2.47003e-07 *lens_ipow(x, 4)*y*dx*lens_ipow(dy, 2) + 1.17968e-12 *x*lens_ipow(y, 7)*dy + 7.41204e-12 *lens_ipow(x, 5)*lens_ipow(y, 3)*dy + 3.42937e-12 *lens_ipow(x, 7)*y*dy + 1.7579e-12 *lens_ipow(x, 8)*dx + -1.01807 *dx*lens_ipow(lambda, 10) + -0.017547 *x*lens_ipow(lambda, 10);
const float out_dy =  + 3.20886e-06  + 0.222157 *dy + -0.0171876 *y + -4.5178e-07 *x + -0.000631418 *dx*dy + 7.16646e-06 *y*dy + -5.52e-06 *y*dx + 5.97241e-06 *x*dy + -4.4707e-08 *lens_ipow(x, 2) + -0.199668 *lens_ipow(dy, 3) + -0.20003 *lens_ipow(dx, 2)*dy + 0.0190858 *y*lens_ipow(dy, 2) + -6.46025e-05 *y*dx*dy + 0.0053591 *y*lens_ipow(dx, 2) + 0.000476776 *lens_ipow(y, 2)*dy + -1.39398e-06 *lens_ipow(y, 3) + 0.00893331 *x*dx*dy + 0.00027695 *x*y*dx + 2.69198e-09 *x*lens_ipow(y, 2) + -4.55926e-06 *lens_ipow(x, 2)*y + 0.00369838 *y*lens_ipow(lambda, 3) + -0.000686672 *y*lens_ipow(dx, 2)*dy + -1.22166e-05 *x*y*lens_ipow(dx, 2) + 8.1788e-10 *lens_ipow(x, 3)*y + 0.237473 *dy*lens_ipow(lambda, 4) + -0.00019531 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -0.000321049 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -5.25444e-08 *lens_ipow(x, 4)*dy + -0.000820706 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lambda + -0.000977944 *x*y*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -1.42901e-08 *x*lens_ipow(y, 4)*dx*dy + -1.73111e-11 *lens_ipow(x, 2)*lens_ipow(y, 5) + 6.14492e-10 *lens_ipow(x, 5)*y*dx + 1.98679e-09 *lens_ipow(y, 5)*lens_ipow(lambda, 3) + -9.62433e-15 *lens_ipow(y, 9) + 1.14817e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 4) + -1.044e-13 *lens_ipow(x, 6)*lens_ipow(y, 3) + -1.15222 *dy*lens_ipow(lambda, 10) + -0.0202784 *y*lens_ipow(lambda, 10) + 2.29323e-12 *lens_ipow(x, 5)*lens_ipow(y, 4)*lens_ipow(dx, 2);
const float out_transmittance =  + 0.37354  + 0.22595 *lambda + -2.92239e-06 *dx + 3.10285e-07 *y + 2.64794e-07 *x + -0.0069147 *lens_ipow(dy, 2) + -0.000462265 *dx*dy + -0.00477441 *lens_ipow(dx, 2) + -7.3934e-05 *y*dy + -3.9311e-06 *y*dx + -8.73325e-07 *lens_ipow(y, 2) + -2.02633e-06 *x*dy + 2.49571e-05 *x*dx + -4.57013e-06 *lens_ipow(x, 2) + -0.188012 *lens_ipow(lambda, 3) + -0.00289934 *dx*lens_ipow(dy, 2) + -3.54719e-05 *x*dx*dy + -2.0298e-05 *x*lens_ipow(dx, 2) + 2.60761e-07 *lens_ipow(x, 2)*dy + -0.00111656 *y*lens_ipow(dx, 2)*dy + -8.26538e-05 *x*lens_ipow(dy, 2)*lambda + -2.69576e-05 *x*y*dx*dy + -1.51889e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -2.05705e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 3.51882e-07 *lens_ipow(x, 2)*y*dy + -3.71282e-06 *lens_ipow(x, 3)*dx + -9.72347e-05 *x*y*lens_ipow(dx, 2)*dy + 1.29604e-09 *lens_ipow(y, 5)*dy + -0.229735 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.115159 *x*lens_ipow(dx, 5) + 5.29114e-05 *lens_ipow(x, 3)*lens_ipow(dx, 3) + -6.31459e-07 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -4.54765e-11 *lens_ipow(x, 4)*lens_ipow(y, 2) + -4.68395e-10 *lens_ipow(x, 6) + 3.36044e-06 *lens_ipow(x, 2)*lens_ipow(lambda, 5) + -4.54437e-05 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -3.61872e-07 *lens_ipow(x, 5)*dx*lens_ipow(dy, 2) + -1.27998e-15 *lens_ipow(x, 4)*lens_ipow(y, 6) + -1.91581e-13 *lens_ipow(x, 9)*dx + 0.337351 *lens_ipow(lambda, 11);
