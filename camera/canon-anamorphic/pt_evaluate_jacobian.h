const float dx00 =  + -0.77313  + -0.000445248 *dy + -1.33371 *lens_ipow(dy, 2) + -1.82635 *lens_ipow(dx, 2) + 0.002417 *y*dy + -0.000192708 *lens_ipow(y, 2) + 0.0344897 *x*dx + -0.000789639 *lens_ipow(x, 2) + -0.145518 *lens_ipow(dx, 3) + 0.125654 *lens_ipow(lambda, 4) + -19.7548 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.343184 *y*lens_ipow(dx, 2)*dy*lambda + -241.703 *lens_ipow(dx, 6) + -0.0340574 *lens_ipow(y, 2)*lens_ipow(dx, 4) + -2.31564e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + 1.6245e-07 *x*lens_ipow(y, 4)*dx + 4.03443e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -4.02309e-05 *lens_ipow(x, 3)*y*dx*dy + 7.85875e-07 *lens_ipow(x, 5)*dx + -2.07806e-07 *lens_ipow(x, 6)*lens_ipow(dy, 2) + -0.613647 *lens_ipow(lambda, 10) + 5.27386e-07 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dx, 3)+0.0f;
const float dx01 =  + 0.503941 *dx*dy + 0.00138648 *y*dx + 0.002417 *x*dy + -0.000385417 *x*y + -0.343184 *x*lens_ipow(dx, 2)*dy*lambda + 465.556 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + -0.0681148 *x*y*lens_ipow(dx, 4) + -9.26255e-06 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + 3.24901e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx + 4.03443e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy + -1.00577e-05 *lens_ipow(x, 4)*dx*dy + 3.56501 *dx*dy*lens_ipow(lambda, 5) + 2.9869e-07 *lens_ipow(y, 5)*dx*lens_ipow(lambda, 2) + 1.75795e-07 *lens_ipow(x, 6)*y*lens_ipow(dx, 3)+0.0f;
const float dx02 =  + 64.1735  + -0.0565598 *dy + -0.410306 *dx + 72.7431 *lens_ipow(dy, 2) + 92.35 *lens_ipow(dx, 2) + 0.503941 *y*dy + 0.000693242 *lens_ipow(y, 2) + -3.6527 *x*dx + 0.0172448 *lens_ipow(x, 2) + 38.5907 *lens_ipow(lambda, 3) + -0.436554 *x*lens_ipow(dx, 2) + -39.5096 *x*dx*lens_ipow(dy, 2) + -0.686368 *x*y*dx*dy*lambda + 3338.13 *lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 4.00619 *dx*lens_ipow(lambda, 5) + 16032.3 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 1396.67 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -1450.22 *x*lens_ipow(dx, 5) + -0.13623 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + 8.12252e-08 *lens_ipow(x, 2)*lens_ipow(y, 4) + -1.00577e-05 *lens_ipow(x, 4)*y*dy + 1.30979e-07 *lens_ipow(x, 6) + 12506.2 *lens_ipow(dx, 4)*lens_ipow(lambda, 3) + 3.56501 *y*dy*lens_ipow(lambda, 5) + 4.97816e-08 *lens_ipow(y, 6)*lens_ipow(lambda, 2) + -207.461 *lens_ipow(lambda, 10) + 2.63693e-07 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(dx, 2)+0.0f;
const float dx03 =  + -0.00269054  + -0.0565598 *dx + -0.000445248 *x + 145.486 *dx*dy + 0.503941 *y*dx + -2.66743 *x*dy + 0.002417 *x*y + -39.5096 *x*lens_ipow(dx, 2)*dy + -0.343184 *x*y*lens_ipow(dx, 2)*lambda + 13352.5 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 10688.2 *lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2) + 1396.67 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -4.63128e-06 *x*lens_ipow(y, 4)*dy + 1.34481e-07 *lens_ipow(x, 3)*lens_ipow(y, 3) + -1.00577e-05 *lens_ipow(x, 4)*y*dx + 3.56501 *y*dx*lens_ipow(lambda, 5) + -5.93731e-08 *lens_ipow(x, 7)*dy+0.0f;
const float dx04 =  + 115.772 *dx*lens_ipow(lambda, 2) + 0.502614 *x*lens_ipow(lambda, 3) + -0.343184 *x*y*lens_ipow(dx, 2)*dy + 6676.26 *dx*lens_ipow(dy, 4)*lambda + 10.0155 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 10688.2 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + 7503.73 *lens_ipow(dx, 5)*lens_ipow(lambda, 2) + 17.8251 *y*dx*dy*lens_ipow(lambda, 4) + 9.95632e-08 *lens_ipow(y, 6)*dx*lambda + -2074.61 *dx*lens_ipow(lambda, 9) + -6.13647 *x*lens_ipow(lambda, 9)+0.0f;
const float dx10 =  + 1.76304e-05  + 0.00065769 *dy + -0.0196473 *lens_ipow(dy, 2) + -1.29881 *dx*dy + -0.000258926 *y*dy + 0.00207194 *y*dx + 0.00825962 *x*dy + -0.000504425 *x*y + -0.111497 *dx*lens_ipow(dy, 2) + 0.204216 *x*lens_ipow(dy, 3) + 0.750642 *dx*dy*lens_ipow(lambda, 4) + -6.14108e-06 *lens_ipow(y, 4)*dx*dy + -1.25145e-05 *x*lens_ipow(y, 3)*lens_ipow(dx, 2) + 1.97307e-07 *x*lens_ipow(y, 4)*dy + -2.48172e-05 *lens_ipow(x, 4)*dx*dy + 3.39076e-07 *lens_ipow(x, 4)*y*dx + -28069.5 *lens_ipow(dx, 5)*lens_ipow(dy, 3) + -0.0215742 *x*dy*lens_ipow(lambda, 6) + 3.24804e-09 *lens_ipow(x, 5)*lens_ipow(y, 2)*dy+0.0f;
const float dx11 =  + -0.223757  + -0.000847909 *dx + 0.671081 *lens_ipow(dy, 2) + -0.0323779 *lens_ipow(dx, 2) + 0.016385 *y*dy + -0.000441553 *lens_ipow(y, 2) + -0.000258926 *x*dy + 0.00207194 *x*dx + -0.000252213 *lens_ipow(x, 2) + 0.503787 *lens_ipow(lambda, 4) + 0.842141 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 3.16618 *lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -2.45643e-05 *x*lens_ipow(y, 3)*dx*dy + -1.87717e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 3.94614e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + 6.78151e-08 *lens_ipow(x, 5)*dx + -5.25715e-08 *lens_ipow(y, 6)*lens_ipow(dy, 2) + 1.08268e-09 *lens_ipow(x, 6)*y*dy + -2.49029 *lens_ipow(lambda, 10) + 0.000353843 *lens_ipow(y, 3)*dy*lens_ipow(lambda, 6)+0.0f;
const float dx12 =  + -0.183412 *dy + -0.000847909 *y + 130.231 *dx*dy + -0.0647558 *y*dx + -1.29881 *x*dy + 0.00207194 *x*y + -0.111497 *x*lens_ipow(dy, 2) + 1.68428 *y*dx*lens_ipow(lambda, 3) + 7153.03 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 0.750642 *x*dy*lens_ipow(lambda, 4) + -6.14108e-06 *x*lens_ipow(y, 4)*dy + -1.25145e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx + -4.96344e-06 *lens_ipow(x, 5)*dy + 6.78151e-08 *lens_ipow(x, 5)*y + 10855.1 *lens_ipow(dx, 3)*dy*lens_ipow(lambda, 3) + -140347 *x*lens_ipow(dx, 4)*lens_ipow(dy, 3)+0.0f;
const float dx13 =  + 80.5245  + -0.183412 *dx + 0.00065769 *x + 370.998 *lens_ipow(dy, 2) + 65.1156 *lens_ipow(dx, 2) + 1.34216 *y*dy + 0.00819248 *lens_ipow(y, 2) + -0.0392946 *x*dy + -1.29881 *x*dx + -0.000258926 *x*y + 0.00412981 *lens_ipow(x, 2) + 47.4524 *lens_ipow(lambda, 3) + -0.222995 *x*dx*dy + 0.306323 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 12119.5 *lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 10729.5 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 6.33236 *y*dy*lens_ipow(lambda, 4) + 0.750642 *x*dx*lens_ipow(lambda, 4) + -6.14108e-06 *x*lens_ipow(y, 4)*dx + 9.86536e-08 *lens_ipow(x, 2)*lens_ipow(y, 4) + -4.96344e-06 *lens_ipow(x, 5)*dx + 2713.77 *lens_ipow(dx, 4)*lens_ipow(lambda, 3) + -1.50204e-08 *lens_ipow(y, 7)*dy + -84208.5 *x*lens_ipow(dx, 5)*lens_ipow(dy, 2) + -0.0107871 *lens_ipow(x, 2)*lens_ipow(lambda, 6) + 5.4134e-10 *lens_ipow(x, 6)*lens_ipow(y, 2) + -248.74 *lens_ipow(lambda, 10) + 8.84606e-05 *lens_ipow(y, 4)*lens_ipow(lambda, 6)+0.0f;
const float dx14 =  + 142.357 *dy*lens_ipow(lambda, 2) + 2.01515 *y*lens_ipow(lambda, 3) + 2.52642 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 4847.79 *lens_ipow(dy, 5)*lambda + 7153.03 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + 12.6647 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 3.00257 *x*dx*dy*lens_ipow(lambda, 3) + 8141.32 *lens_ipow(dx, 4)*dy*lens_ipow(lambda, 2) + -0.0647226 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 5) + -2487.4 *dy*lens_ipow(lambda, 9) + -24.9029 *y*lens_ipow(lambda, 9) + 0.000530764 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 5)+0.0f;
const float dx20 =  + -0.0124777  + 7.3116e-08 *y + -0.00867881 *lens_ipow(dy, 2) + -0.0236576 *lens_ipow(dx, 2) + -0.000146358 *y*dy + 1.30571e-06 *y*dx + 9.05968e-07 *lens_ipow(y, 2) + -0.000249998 *x*dx + 6.6141e-06 *lens_ipow(x, 2) + -0.00154828 *lens_ipow(dx, 3) + 0.00111915 *lens_ipow(lambda, 4) + -4.59088e-05 *x*y*dx*dy + -7.69646e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 0.0316159 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -2.69981e-05 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.107372 *x*lens_ipow(dx, 5) + 0.435418 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.0237313 *lens_ipow(y, 2)*lens_ipow(dx, 6) + -0.000520973 *x*dx*lens_ipow(lambda, 6) + 0.850931 *lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -0.00626974 *lens_ipow(lambda, 10) + -0.000322547 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx21 =  + 6.51006e-06 *dy + 7.3116e-08 *x + 0.0214165 *dx*dy + -2.03581e-05 *y*dx + -0.000146358 *x*dy + 1.30571e-06 *x*dx + 1.81194e-06 *x*y + 0.0757805 *lens_ipow(dx, 3)*dy + -2.29544e-05 *lens_ipow(x, 2)*dx*dy + 1.67867e-05 *lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + -5.39961e-05 *x*y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.0396166 *dx*dy*lens_ipow(lambda, 5) + 9.91837e-07 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.0474627 *x*y*lens_ipow(dx, 6) + -0.000645093 *x*y*lens_ipow(dx, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx22 =  + -0.250874  + -0.000844746 *dy + -0.00361244 *dx + 2.93183 *lens_ipow(dy, 2) + 5.50945 *lens_ipow(dx, 2) + 0.0214165 *y*dy + -1.01791e-05 *lens_ipow(y, 2) + -0.0473152 *x*dx + 1.30571e-06 *x*y + -0.000124999 *lens_ipow(x, 2) + 0.508911 *lens_ipow(lambda, 3) + -0.00464485 *x*lens_ipow(dx, 2) + 0.227342 *y*lens_ipow(dx, 2)*dy + -2.29544e-05 *lens_ipow(x, 2)*y*dy + -5.13097e-05 *lens_ipow(x, 3)*dx + 0.0632319 *x*dx*lens_ipow(lambda, 3) + 122.425 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 85.9772 *lens_ipow(dx, 4)*lens_ipow(lambda, 2) + 4.19667e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.268429 *lens_ipow(x, 2)*lens_ipow(dx, 4) + 0.0396166 *y*dy*lens_ipow(lambda, 5) + 4.95918e-07 *lens_ipow(y, 4)*dx*lens_ipow(lambda, 2) + 0.870837 *x*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.142388 *x*lens_ipow(y, 2)*lens_ipow(dx, 5) + -0.000260487 *lens_ipow(x, 2)*lens_ipow(lambda, 6) + -2.70524 *lens_ipow(lambda, 10) + -0.000645093 *x*lens_ipow(y, 2)*dx*lens_ipow(lambda, 6)+0.0f;
const float dx23 =  + -3.97472e-05  + -0.000844746 *dx + 6.51006e-06 *y + 5.86365 *dx*dy + 0.0214165 *y*dx + -0.0173576 *x*dy + -0.000146358 *x*y + 0.0757805 *y*lens_ipow(dx, 3) + -2.29544e-05 *lens_ipow(x, 2)*y*dx + 81.6166 *lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2) + 8.39333e-06 *lens_ipow(y, 4)*dx*dy + -5.39961e-05 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + 0.0396166 *y*dx*lens_ipow(lambda, 5) + 0.870837 *x*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + 3.40372 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 5)+0.0f;
const float dx24 =  + 1.52673 *dx*lens_ipow(lambda, 2) + 0.00447662 *x*lens_ipow(lambda, 3) + 0.0948478 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 81.6166 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + 34.3909 *lens_ipow(dx, 5)*lambda + -5.39961e-05 *x*lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda + 0.198083 *y*dx*dy*lens_ipow(lambda, 4) + 4.95918e-07 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lambda + 1.30625 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.00156292 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 5) + 4.25466 *x*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -27.0524 *dx*lens_ipow(lambda, 9) + -0.0626974 *x*lens_ipow(lambda, 9) + -0.00193528 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx30 =  + 2.00034e-07  + 1.3016e-05 *dy + 2.22304e-07 *y + -0.000260123 *lens_ipow(dy, 2) + -0.0177934 *dx*dy + -2.73159e-06 *y*dy + -0.000124414 *y*dx + -0.000227312 *x*dy + 2.64835e-06 *x*y + -0.0013763 *dx*lens_ipow(dy, 2) + -2.19979e-05 *y*lens_ipow(dx, 2) + 1.21493e-07 *lens_ipow(y, 3)*dx + -3.04968e-05 *x*y*lens_ipow(dy, 2) + 0.0269228 *dx*dy*lens_ipow(lambda, 4) + 0.00863308 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 1.53521e-11 *x*lens_ipow(y, 5) + -6.04989e-07 *lens_ipow(x, 4)*dx*dy + 1.59444e-11 *lens_ipow(x, 5)*y + -6.75481e-06 *x*y*lens_ipow(lambda, 5) + -0.000890698 *x*dy*lens_ipow(lambda, 6)+0.0f;
const float dx31 =  + -0.0116081  + -1.09544e-05 *dx + 2.22304e-07 *x + 0.0410277 *lens_ipow(dy, 2) + 0.00816191 *lens_ipow(dx, 2) + 1.25836e-05 *y*dy + 1.62296e-06 *lens_ipow(y, 2) + -2.73159e-06 *x*dy + -0.000124414 *x*dx + 1.32418e-06 *lens_ipow(x, 2) + -2.19979e-05 *x*lens_ipow(dx, 2) + 0.00612239 *lens_ipow(lambda, 4) + 3.64478e-07 *x*lens_ipow(y, 2)*dx + -1.52484e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.0165547 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -0.000607689 *lens_ipow(y, 2)*lens_ipow(dy, 4) + 3.83803e-11 *lens_ipow(x, 2)*lens_ipow(y, 4) + 2.6574e-12 *lens_ipow(x, 6) + 0.0689428 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -3.37741e-06 *lens_ipow(x, 2)*lens_ipow(lambda, 5) + 6.70996e-14 *lens_ipow(y, 8) + 7.62575e-06 *lens_ipow(y, 3)*dy*lens_ipow(lambda, 5) + -0.0301143 *lens_ipow(lambda, 10)+0.0f;
const float dx32 =  + -0.002396 *dy + -1.09544e-05 *y + 4.53503 *dx*dy + 0.0163238 *y*dx + -0.0177934 *x*dy + -0.000124414 *x*y + -0.0013763 *x*lens_ipow(dy, 2) + -4.39958e-05 *x*y*dx + 1.66066 *dx*dy*lens_ipow(lambda, 2) + 1.21493e-07 *x*lens_ipow(y, 3) + 0.0331094 *y*dx*lens_ipow(lambda, 4) + 0.0269228 *x*dy*lens_ipow(lambda, 4) + -1.20998e-07 *lens_ipow(x, 5)*dy+0.0f;
const float dx33 =  + -0.228998  + -0.002396 *dx + 1.3016e-05 *x + 11.2574 *lens_ipow(dy, 2) + 2.26751 *lens_ipow(dx, 2) + 0.0820555 *y*dy + 6.29182e-06 *lens_ipow(y, 2) + -0.000520246 *x*dy + -0.0177934 *x*dx + -2.73159e-06 *x*y + -0.000113656 *lens_ipow(x, 2) + 0.610365 *lens_ipow(lambda, 3) + -0.0027526 *x*dx*dy + 0.830329 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -3.04968e-05 *lens_ipow(x, 2)*y*dy + -0.000810252 *lens_ipow(y, 3)*lens_ipow(dy, 3) + 0.0269228 *x*dx*lens_ipow(lambda, 4) + 0.0129496 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.20998e-07 *lens_ipow(x, 5)*dx + 0.137886 *y*dy*lens_ipow(lambda, 5) + -0.000445349 *lens_ipow(x, 2)*lens_ipow(lambda, 6) + 1.90644e-06 *lens_ipow(y, 4)*lens_ipow(lambda, 5) + -3.16057 *lens_ipow(lambda, 10)+0.0f;
const float dx34 =  + 1.83109 *dy*lens_ipow(lambda, 2) + 1.66066 *lens_ipow(dx, 2)*dy*lambda + 0.0244896 *y*lens_ipow(lambda, 3) + 0.0662188 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 0.107691 *x*dx*dy*lens_ipow(lambda, 3) + 0.00863308 *lens_ipow(x, 2)*lens_ipow(dy, 3)*lambda + 0.344714 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -1.6887e-05 *lens_ipow(x, 2)*y*lens_ipow(lambda, 4) + -0.0026721 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 5) + 9.53219e-06 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 4) + -31.6057 *dy*lens_ipow(lambda, 9) + -0.301143 *y*lens_ipow(lambda, 9)+0.0f;
const float dx40 =  + -2.01219e-06 *dy + -1.54203e-05 *dx + -3.82913e-06 *x + -4.26785e-05 *dx*dy + 1.04773e-05 *lens_ipow(dx, 2) + 3.83429e-07 *x*dy + -0.0021188 *dx*lens_ipow(dy, 2) + -3.78524e-05 *y*dx*dy + 9.45992e-07 *x*y*dy + -3.24258e-06 *lens_ipow(x, 2)*dx + -1.70946e-06 *x*y*dx*dy + -0.00401379 *x*lens_ipow(dx, 4) + -2.59373e-11 *x*lens_ipow(y, 4) + 8.21051e-09 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -1.06278e-09 *lens_ipow(x, 5) + -6.93818e-05 *lens_ipow(x, 3)*lens_ipow(dy, 4) + -6.34346e-13 *lens_ipow(x, 8)*dx+0.0f;
const float dx41 =  + 2.71748e-07  + -3.9058e-06 *dy + -3.90868e-06 *dx + -8.86669e-07 *y + -0.0369953 *lens_ipow(dy, 3) + -0.0286968 *lens_ipow(dx, 2)*dy + -0.000639222 *y*lens_ipow(dy, 2) + -0.000159907 *y*lens_ipow(dx, 2) + -2.02865e-06 *lens_ipow(y, 2)*dy + -3.78524e-05 *x*dx*dy + 4.72996e-07 *lens_ipow(x, 2)*dy + -8.54732e-07 *lens_ipow(x, 2)*dx*dy + -5.18746e-11 *lens_ipow(x, 2)*lens_ipow(y, 3) + 5.47367e-09 *lens_ipow(x, 3)*y*dx + -163.444 *lens_ipow(dy, 9)+0.0f;
const float dx42 =  + 2.76322e-06  + -0.000513865 *dy + -0.0133349 *dx + -3.90868e-06 *y + -1.54203e-05 *x + -0.00515078 *lens_ipow(dy, 2) + -4.26785e-05 *x*dy + 2.09546e-05 *x*dx + -4.33846 *dx*lens_ipow(dy, 2) + -0.0573936 *y*dx*dy + -0.000159907 *lens_ipow(y, 2)*dx + -0.0021188 *x*lens_ipow(dy, 2) + -3.78524e-05 *x*y*dy + -1.08086e-06 *lens_ipow(x, 3) + -8.54732e-07 *lens_ipow(x, 2)*y*dy + -112.682 *lens_ipow(dx, 5) + -0.00802759 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 2.73684e-09 *lens_ipow(x, 3)*lens_ipow(y, 2) + -5216.3 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + -7.04828e-14 *lens_ipow(x, 9)+0.0f;
const float dx43 =  + -0.0237636 *dy + -0.000513865 *dx + -3.9058e-06 *y + -2.01219e-06 *x + -0.0103016 *dx*dy + -4.26785e-05 *x*dx + 1.91714e-07 *lens_ipow(x, 2) + -4.33846 *lens_ipow(dx, 2)*dy + -0.110986 *y*lens_ipow(dy, 2) + -0.0286968 *y*lens_ipow(dx, 2) + -0.000639222 *lens_ipow(y, 2)*dy + -6.76217e-07 *lens_ipow(y, 3) + -0.00423759 *x*dx*dy + -3.78524e-05 *x*y*dx + 4.72996e-07 *lens_ipow(x, 2)*y + -8.54732e-07 *lens_ipow(x, 2)*y*dx + -304.082 *lens_ipow(dy, 5) + -5216.3 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + -6.93818e-05 *lens_ipow(x, 4)*lens_ipow(dy, 3) + -1471 *y*lens_ipow(dy, 8)+0.0f;
const float dx44 =  + 0.225284  + -0.548644 *lens_ipow(lambda, 2) + 3.50377 *lens_ipow(lambda, 10)+0.0f;
