const float dx00 =  + 0.790034  + -3.14678e-05 *dy + -6.54549e-05 *dx + -0.304969 *lens_ipow(dy, 2) + -0.0264966 *lens_ipow(dx, 2) + -0.00942134 *y*dy + -0.000135801 *lens_ipow(y, 2) + -0.0069211 *x*dx + -0.000366096 *lens_ipow(x, 2) + 0.0110795 *lens_ipow(lambda, 3) + -1.81887e-08 *lens_ipow(x, 2)*y + -0.00609 *y*lens_ipow(dx, 2)*dy + -6.6452e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.000474015 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.125383 *y*lens_ipow(dy, 5) + 1.72986e-05 *lens_ipow(y, 2)*lens_ipow(lambda, 4) + -3.53209e-11 *lens_ipow(y, 6) + -0.858412 *x*lens_ipow(dx, 5) + -0.00017244 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 8.80134e-06 *lens_ipow(x, 3)*y*dx*dy + 7.53984e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx + -3.88684e-06 *lens_ipow(x, 4)*lens_ipow(dy, 2) + 0.00178277 *y*dy*lens_ipow(lambda, 6) + -5.28462e-12 *lens_ipow(x, 4)*lens_ipow(y, 4) + -5.30007e-12 *lens_ipow(x, 8) + -1.96868 *lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 1.95879e-07 *lens_ipow(x, 4)*lens_ipow(lambda, 5) + -0.0646457 *lens_ipow(lambda, 10)+0.0f;
const float dx01 =  + 0.0963336 *dx*dy + 0.000836962 *y*dx + -0.00942134 *x*dy + -0.000271601 *x*y + -6.06289e-09 *lens_ipow(x, 3) + -0.00609 *x*lens_ipow(dx, 2)*dy + -0.000132904 *x*y*lens_ipow(dx, 2) + -0.124943 *y*lens_ipow(dx, 5) + -0.125383 *x*lens_ipow(dy, 5) + 3.45971e-05 *x*y*lens_ipow(lambda, 4) + -2.11925e-10 *x*lens_ipow(y, 5) + -0.00017244 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 2) + 2.20033e-06 *lens_ipow(x, 4)*dx*dy + 3.76992e-08 *lens_ipow(x, 4)*y*dx + 0.00178277 *x*dy*lens_ipow(lambda, 6) + -4.22769e-12 *lens_ipow(x, 5)*lens_ipow(y, 3)+0.0f;
const float dx02 =  + 43.0804  + -0.00255173 *dy + -0.00700365 *dx + -6.54549e-05 *x + -3.98629 *lens_ipow(dy, 2) + -10.8342 *lens_ipow(dx, 2) + 0.0963336 *y*dy + 0.000418481 *lens_ipow(y, 2) + -0.0529932 *x*dx + -0.00346055 *lens_ipow(x, 2) + 1.26908 *lens_ipow(lambda, 3) + -0.01218 *x*y*dx*dy + -0.000132904 *x*lens_ipow(y, 2)*dx + 0.00031601 *lens_ipow(x, 3)*dx + -0.312357 *lens_ipow(y, 2)*lens_ipow(dx, 4) + -2.14603 *lens_ipow(x, 2)*lens_ipow(dx, 4) + -8.62198e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 2.20033e-06 *lens_ipow(x, 4)*y*dy + 1.88496e-08 *lens_ipow(x, 4)*lens_ipow(y, 2) + -7.87471 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 5) + -6.7011 *lens_ipow(lambda, 10)+0.0f;
const float dx03 =  + -0.000225677  + -0.00255173 *dx + -3.14678e-05 *x + -7.97259 *dx*dy + 0.0963336 *y*dx + -0.609938 *x*dy + -0.00942134 *x*y + -0.00609 *x*y*lens_ipow(dx, 2) + -0.626917 *x*y*lens_ipow(dy, 4) + -0.00017244 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + 2.20033e-06 *lens_ipow(x, 4)*y*dx + -1.55474e-06 *lens_ipow(x, 5)*dy + 0.00178277 *x*y*lens_ipow(lambda, 6)+0.0f;
const float dx04 =  + 3.80724 *dx*lens_ipow(lambda, 2) + 0.0332384 *x*lens_ipow(lambda, 2) + 6.91942e-05 *x*lens_ipow(y, 2)*lens_ipow(lambda, 3) + 0.0106966 *x*y*dy*lens_ipow(lambda, 5) + -9.84339 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 4) + 1.95879e-07 *lens_ipow(x, 5)*lens_ipow(lambda, 4) + -67.011 *dx*lens_ipow(lambda, 9) + -0.646457 *x*lens_ipow(lambda, 9)+0.0f;
const float dx10 =  + 5.66776e-07  + 3.70906e-05 *dy + -5.93818e-07 *x + -0.00092955 *lens_ipow(dy, 2) + 0.242385 *dx*dy + -1.478e-05 *y*dy + -0.00636909 *y*dx + 0.00713124 *x*dy + -0.000211355 *x*y + -0.0116404 *y*dx*lens_ipow(dy, 2) + -0.00753667 *x*lens_ipow(dx, 2)*dy + 3.28891e-05 *lens_ipow(y, 3)*lens_ipow(dx, 3) + 2.35544e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + 6.38048e-05 *lens_ipow(x, 3)*lens_ipow(dy, 3) + -7.12422e-10 *lens_ipow(x, 3)*lens_ipow(y, 3) + -8.58747e-11 *lens_ipow(x, 5)*y + 0.00131756 *y*dx*lens_ipow(lambda, 5) + -7.24648e-13 *x*lens_ipow(y, 7) + 8.19048e-11 *lens_ipow(x, 7)*dy + 2.87549e-07 *x*lens_ipow(y, 3)*lens_ipow(lambda, 5) + 9.99826e-06 *lens_ipow(x, 3)*y*lens_ipow(dx, 2)*lens_ipow(lambda, 3)+0.0f;
const float dx11 =  + 0.90776  + -4.22064e-05 *dx + 0.0154544 *lens_ipow(dy, 2) + -0.144491 *lens_ipow(dx, 2) + -0.0112834 *y*dy + -0.000319603 *lens_ipow(y, 2) + -1.478e-05 *x*dy + -0.00636909 *x*dx + -0.000105678 *lens_ipow(x, 2) + 0.0175459 *lens_ipow(lambda, 3) + -0.0116404 *x*dx*lens_ipow(dy, 2) + -0.180061 *y*lens_ipow(dy, 5) + 9.86674e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + 1.57029e-06 *lens_ipow(x, 3)*y*dx*dy + -5.34316e-10 *lens_ipow(x, 4)*lens_ipow(y, 2) + -1.43124e-11 *lens_ipow(x, 6) + -0.0773146 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 0.00131756 *x*dx*lens_ipow(lambda, 5) + 1.2382e-07 *lens_ipow(y, 4)*lens_ipow(lambda, 4) + -6.98601e-13 *lens_ipow(y, 8) + -2.53627e-12 *lens_ipow(x, 2)*lens_ipow(y, 6) + 4.31323e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 5) + 2.49957e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.0958202 *lens_ipow(lambda, 10)+0.0f;
const float dx12 =  + -0.00683992 *dy + -4.22064e-05 *y + -0.726419 *dx*dy + -0.288983 *y*dx + 0.242385 *x*dy + -0.00636909 *x*y + -0.0116404 *x*y*lens_ipow(dy, 2) + -0.00753667 *lens_ipow(x, 2)*dx*dy + 9.86674e-05 *x*lens_ipow(y, 3)*lens_ipow(dx, 2) + 7.85147e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy + 0.00131756 *x*y*lens_ipow(lambda, 5) + 4.99913e-06 *lens_ipow(x, 4)*y*dx*lens_ipow(lambda, 3)+0.0f;
const float dx13 =  + 46.704  + -0.00683992 *dx + 3.70906e-05 *x + 2.22789 *lens_ipow(dy, 2) + -0.363209 *lens_ipow(dx, 2) + 0.0309089 *y*dy + -0.00564172 *lens_ipow(y, 2) + -0.0018591 *x*dy + 0.242385 *x*dx + -1.478e-05 *x*y + 0.00356562 *lens_ipow(x, 2) + 2.37133 *lens_ipow(lambda, 4) + -0.0232807 *x*y*dx*dy + -0.00376833 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.450153 *lens_ipow(y, 2)*lens_ipow(dy, 4) + 7.85147e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx + 4.78536e-05 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -0.154629 *y*dy*lens_ipow(lambda, 5) + 1.02381e-11 *lens_ipow(x, 8) + -11.4874 *lens_ipow(lambda, 10)+0.0f;
const float dx14 =  + 0.0526378 *y*lens_ipow(lambda, 2) + 9.48532 *dy*lens_ipow(lambda, 3) + -0.386573 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.0065878 *x*y*dx*lens_ipow(lambda, 4) + 9.90559e-08 *lens_ipow(y, 5)*lens_ipow(lambda, 3) + 7.18872e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 4) + 7.4987e-06 *lens_ipow(x, 4)*y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -114.874 *dy*lens_ipow(lambda, 9) + -0.958202 *y*lens_ipow(lambda, 9)+0.0f;
const float dx20 =  + -0.0217531  + -6.38104e-06 *dy + -1.1525e-05 *dx + 0.00316486 *lens_ipow(dy, 2) + 0.00996627 *lens_ipow(dx, 2) + 0.000370356 *y*dy + -2.57057e-06 *lens_ipow(y, 2) + 0.000493702 *x*dx + -1.58882e-05 *lens_ipow(x, 2) + 0.00309456 *lens_ipow(lambda, 3) + -3.60627e-09 *lens_ipow(x, 2)*y + 1.09497e-06 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + 2.35872e-05 *x*y*dx*dy + 3.45618e-06 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 2.48562e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -4.98327e-06 *y*dy*lens_ipow(lambda, 3) + -0.0109514 *y*lens_ipow(dy, 5) + 0.000276551 *lens_ipow(y, 2)*lens_ipow(dx, 4) + -4.29126e-11 *lens_ipow(x, 2)*lens_ipow(y, 4) + -1.15131e-05 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + -5.87006e-10 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy + 4.58361e-09 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx + -3.70635e-11 *lens_ipow(x, 6) + -9.88012e-07 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + 1.17968e-12 *lens_ipow(y, 7)*dy + 3.70602e-11 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy + 2.40056e-11 *lens_ipow(x, 6)*y*dy + 1.40632e-11 *lens_ipow(x, 7)*dx + -0.017547 *lens_ipow(lambda, 10)+0.0f;
const float dx21 =  + 0.01282 *dx*dy + 0.000129826 *y*dx + 0.000370356 *x*dy + -5.14115e-06 *x*y + -1.20209e-09 *lens_ipow(x, 3) + 2.18994e-06 *x*y*lens_ipow(lambda, 2) + 1.17936e-05 *lens_ipow(x, 2)*dx*dy + -4.98327e-06 *x*dy*lens_ipow(lambda, 3) + -0.0109514 *x*lens_ipow(dy, 5) + 0.000553102 *x*y*lens_ipow(dx, 4) + -5.72168e-11 *lens_ipow(x, 3)*lens_ipow(y, 3) + -2.93503e-10 *lens_ipow(x, 4)*y*dy + 2.2918e-09 *lens_ipow(x, 4)*y*dx + -2.47003e-07 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2) + 8.25773e-12 *x*lens_ipow(y, 6)*dy + 2.22361e-11 *lens_ipow(x, 5)*lens_ipow(y, 2)*dy + 3.42937e-12 *lens_ipow(x, 7)*dy+0.0f;
const float dx22 =  + 0.0820856  + -0.000760571 *dy + -0.00112669 *dx + -1.1525e-05 *x + -0.288547 *lens_ipow(dy, 2) + -0.984373 *lens_ipow(dx, 2) + 0.01282 *y*dy + 6.49129e-05 *lens_ipow(y, 2) + 0.0199325 *x*dx + 0.000246851 *lens_ipow(x, 2) + 0.210206 *lens_ipow(lambda, 4) + 1.17936e-05 *lens_ipow(x, 2)*y*dy + 1.65708e-05 *lens_ipow(x, 3)*dx + 0.0011062 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + -2.87827e-06 *lens_ipow(x, 4)*lens_ipow(dy, 2) + 1.1459e-09 *lens_ipow(x, 4)*lens_ipow(y, 2) + -2.47003e-07 *lens_ipow(x, 4)*y*lens_ipow(dy, 2) + 1.7579e-12 *lens_ipow(x, 8) + -1.01807 *lens_ipow(lambda, 10)+0.0f;
const float dx23 =  + -9.73018e-06  + -0.000760571 *dx + -6.38104e-06 *x + -0.577093 *dx*dy + 0.01282 *y*dx + 0.00632972 *x*dy + 0.000370356 *x*y + 1.17936e-05 *lens_ipow(x, 2)*y*dx + -4.98327e-06 *x*y*lens_ipow(lambda, 3) + -0.0547568 *x*y*lens_ipow(dy, 4) + -5.75655e-06 *lens_ipow(x, 4)*dx*dy + -1.46751e-10 *lens_ipow(x, 4)*lens_ipow(y, 2) + -4.94006e-07 *lens_ipow(x, 4)*y*dx*dy + 1.17968e-12 *x*lens_ipow(y, 7) + 7.41204e-12 *lens_ipow(x, 5)*lens_ipow(y, 3) + 3.42937e-12 *lens_ipow(x, 7)*y+0.0f;
const float dx24 =  + 0.00928368 *x*lens_ipow(lambda, 2) + 0.840822 *dx*lens_ipow(lambda, 3) + 2.18994e-06 *x*lens_ipow(y, 2)*lambda + 2.30412e-06 *lens_ipow(x, 3)*lambda + -1.49498e-05 *x*y*dy*lens_ipow(lambda, 2) + -10.1807 *dx*lens_ipow(lambda, 9) + -0.17547 *x*lens_ipow(lambda, 9)+0.0f;
const float dx30 =  + -4.5178e-07  + 5.97241e-06 *dy + -8.9414e-08 *x + 0.00893331 *dx*dy + 0.00027695 *y*dx + 2.69198e-09 *lens_ipow(y, 2) + -9.11851e-06 *x*y + -1.22166e-05 *y*lens_ipow(dx, 2) + 2.45364e-09 *lens_ipow(x, 2)*y + -0.00039062 *x*lens_ipow(dy, 3) + -0.000642099 *x*lens_ipow(dx, 2)*dy + -2.10178e-07 *lens_ipow(x, 3)*dy + -0.000977944 *y*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -1.42901e-08 *lens_ipow(y, 4)*dx*dy + -3.46222e-11 *x*lens_ipow(y, 5) + 3.07246e-09 *lens_ipow(x, 4)*y*dx + 2.29634e-08 *x*lens_ipow(y, 3)*lens_ipow(lambda, 4) + -6.264e-13 *lens_ipow(x, 5)*lens_ipow(y, 3) + 1.14662e-11 *lens_ipow(x, 4)*lens_ipow(y, 4)*lens_ipow(dx, 2)+0.0f;
const float dx31 =  + -0.0171876  + 7.16646e-06 *dy + -5.52e-06 *dx + 0.0190858 *lens_ipow(dy, 2) + -6.46025e-05 *dx*dy + 0.0053591 *lens_ipow(dx, 2) + 0.000953551 *y*dy + -4.18193e-06 *lens_ipow(y, 2) + 0.00027695 *x*dx + 5.38396e-09 *x*y + -4.55926e-06 *lens_ipow(x, 2) + 0.00369838 *lens_ipow(lambda, 3) + -0.000686672 *lens_ipow(dx, 2)*dy + -1.22166e-05 *x*lens_ipow(dx, 2) + 8.1788e-10 *lens_ipow(x, 3) + -0.00164141 *y*lens_ipow(dx, 2)*dy*lambda + -0.000977944 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -5.71603e-08 *x*lens_ipow(y, 3)*dx*dy + -8.65556e-11 *lens_ipow(x, 2)*lens_ipow(y, 4) + 6.14492e-10 *lens_ipow(x, 5)*dx + 9.93394e-09 *lens_ipow(y, 4)*lens_ipow(lambda, 3) + -8.6619e-14 *lens_ipow(y, 8) + 3.44451e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 4) + -3.132e-13 *lens_ipow(x, 6)*lens_ipow(y, 2) + -0.0202784 *lens_ipow(lambda, 10) + 9.17292e-12 *lens_ipow(x, 5)*lens_ipow(y, 3)*lens_ipow(dx, 2)+0.0f;
const float dx32 =  + -0.000631418 *dy + -5.52e-06 *y + -0.400061 *dx*dy + -6.46025e-05 *y*dy + 0.0107182 *y*dx + 0.00893331 *x*dy + 0.00027695 *x*y + -0.00137334 *y*dx*dy + -2.44331e-05 *x*y*dx + -0.000642099 *lens_ipow(x, 2)*dx*dy + -0.00164141 *lens_ipow(y, 2)*dx*dy*lambda + -0.00293383 *x*y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -1.42901e-08 *x*lens_ipow(y, 4)*dy + 6.14492e-10 *lens_ipow(x, 5)*y + 4.58646e-12 *lens_ipow(x, 5)*lens_ipow(y, 4)*dx+0.0f;
const float dx33 =  + 0.222157  + -0.000631418 *dx + 7.16646e-06 *y + 5.97241e-06 *x + -0.599005 *lens_ipow(dy, 2) + -0.20003 *lens_ipow(dx, 2) + 0.0381717 *y*dy + -6.46025e-05 *y*dx + 0.000476776 *lens_ipow(y, 2) + 0.00893331 *x*dx + -0.000686672 *y*lens_ipow(dx, 2) + 0.237473 *lens_ipow(lambda, 4) + -0.000585931 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.000321049 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -5.25444e-08 *lens_ipow(x, 4) + -0.000820706 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -1.42901e-08 *x*lens_ipow(y, 4)*dx + -1.15222 *lens_ipow(lambda, 10)+0.0f;
const float dx34 =  + 0.0110952 *y*lens_ipow(lambda, 2) + 0.94989 *dy*lens_ipow(lambda, 3) + -0.000820706 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.00195589 *x*y*lens_ipow(dx, 3)*lambda + 5.96036e-09 *lens_ipow(y, 5)*lens_ipow(lambda, 2) + 4.59268e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 3) + -11.5222 *dy*lens_ipow(lambda, 9) + -0.202784 *y*lens_ipow(lambda, 9)+0.0f;
const float dx40 =  + 2.64794e-07  + -2.02633e-06 *dy + 2.49571e-05 *dx + -9.14027e-06 *x + -3.54719e-05 *dx*dy + -2.0298e-05 *lens_ipow(dx, 2) + 5.21521e-07 *x*dy + -8.26538e-05 *lens_ipow(dy, 2)*lambda + -2.69576e-05 *y*dx*dy + -3.03779e-05 *x*lens_ipow(dy, 2) + -4.11411e-05 *x*lens_ipow(dx, 2) + 7.03764e-07 *x*y*dy + -1.11385e-05 *lens_ipow(x, 2)*dx + -9.72347e-05 *y*lens_ipow(dx, 2)*dy + -0.229735 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.115159 *lens_ipow(dx, 5) + 0.000158734 *lens_ipow(x, 2)*lens_ipow(dx, 3) + -2.52584e-06 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -1.81906e-10 *lens_ipow(x, 3)*lens_ipow(y, 2) + -2.81037e-09 *lens_ipow(x, 5) + 6.72088e-06 *x*lens_ipow(lambda, 5) + -0.000181775 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.80936e-06 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2) + -5.11993e-15 *lens_ipow(x, 3)*lens_ipow(y, 6) + -1.72423e-12 *lens_ipow(x, 8)*dx+0.0f;
const float dx41 =  + 3.10285e-07  + -7.3934e-05 *dy + -3.9311e-06 *dx + -1.74665e-06 *y + -0.00111656 *lens_ipow(dx, 2)*dy + -2.69576e-05 *x*dx*dy + 3.51882e-07 *lens_ipow(x, 2)*dy + -9.72347e-05 *x*lens_ipow(dx, 2)*dy + 6.48018e-09 *lens_ipow(y, 4)*dy + -9.09529e-11 *lens_ipow(x, 4)*y + -7.67989e-15 *lens_ipow(x, 4)*lens_ipow(y, 5)+0.0f;
const float dx42 =  + -2.92239e-06  + -0.000462265 *dy + -0.00954883 *dx + -3.9311e-06 *y + 2.49571e-05 *x + -0.00289934 *lens_ipow(dy, 2) + -3.54719e-05 *x*dy + -4.05961e-05 *x*dx + -0.00223312 *y*dx*dy + -2.69576e-05 *x*y*dy + -4.11411e-05 *lens_ipow(x, 2)*dx + -3.71282e-06 *lens_ipow(x, 3) + -0.000194469 *x*y*dx*dy + -0.689206 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.575794 *x*lens_ipow(dx, 4) + 0.000158734 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -9.08874e-05 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2) + -3.61872e-07 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -1.91581e-13 *lens_ipow(x, 9)+0.0f;
const float dx43 =  + -0.0138294 *dy + -0.000462265 *dx + -7.3934e-05 *y + -2.02633e-06 *x + -0.00579868 *dx*dy + -3.54719e-05 *x*dx + 2.60761e-07 *lens_ipow(x, 2) + -0.00111656 *y*lens_ipow(dx, 2) + -0.000165308 *x*dy*lambda + -2.69576e-05 *x*y*dx + -3.03779e-05 *lens_ipow(x, 2)*dy + 3.51882e-07 *lens_ipow(x, 2)*y + -9.72347e-05 *x*y*lens_ipow(dx, 2) + 1.29604e-09 *lens_ipow(y, 5) + -0.459471 *x*lens_ipow(dx, 3)*dy + -1.26292e-06 *lens_ipow(x, 4)*dy + -9.08874e-05 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -7.23743e-07 *lens_ipow(x, 5)*dx*dy+0.0f;
const float dx44 =  + 0.22595  + -0.564037 *lens_ipow(lambda, 2) + -8.26538e-05 *x*lens_ipow(dy, 2) + 1.68022e-05 *lens_ipow(x, 2)*lens_ipow(lambda, 4) + 3.71086 *lens_ipow(lambda, 10)+0.0f;
