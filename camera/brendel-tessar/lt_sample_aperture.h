//input: scene_[x,y,z] - point in scene, ap_[x,y] - point on aperture
//output: [x,y,dx,dy] point and direction on sensor
#ifndef DEBUG_LOG
#define DEBUG_LOG
#endif
float view[3] =
{
  scene_x,
  scene_y,
  scene_z + lens_outer_pupil_curvature_radius
};
normalise(view);
int error = 0;
if(1 || view[2] >= lens_field_of_view)
{
  const float eps = 1e-8;
  float sqr_err = 1e30, sqr_ap_err = 1e30;
  float prev_sqr_err = 1e32, prev_sqr_ap_err = 1e32;
  for(int k=0;k<100&&(sqr_err>eps||sqr_ap_err>eps)&&error==0;k++)
  {
    prev_sqr_err = sqr_err, prev_sqr_ap_err = sqr_ap_err;
    const float begin_x = x;
    const float begin_y = y;
    const float begin_dx = dx;
    const float begin_dy = dy;
    const float begin_lambda = lambda;
    const float pred_ap[2] = {
       + -6.79816e-05  + 0.000510075 *begin_dy + 81.145 *begin_dx + 0.746981 *begin_x + 0.00186088 *lens_ipow(begin_dy, 2) + 0.00204989 *lens_ipow(begin_dx, 2) + 5.13706e-05 *begin_x*begin_dy + 34.9894 *begin_dx*lens_ipow(begin_dy, 2) + 35.104 *lens_ipow(begin_dx, 3) + 1.34532 *begin_y*begin_dx*begin_dy + 0.00926679 *lens_ipow(begin_y, 2)*begin_dx + 0.936703 *begin_x*lens_ipow(begin_dy, 2) + 2.29645 *begin_x*lens_ipow(begin_dx, 2) + 0.0233816 *begin_x*begin_y*begin_dy + 0.000119137 *begin_x*lens_ipow(begin_y, 2) + 0.0330326 *lens_ipow(begin_x, 2)*begin_dx + 0.000122147 *lens_ipow(begin_x, 3) + 3.4215 *begin_dx*lens_ipow(begin_lambda, 3) + 0.068899 *begin_x*lens_ipow(begin_lambda, 4) + 0.0193758 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -3.41155e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -496.125 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4) + -0.0182526 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5) + 2.30938e-05 *lens_ipow(begin_y, 4)*begin_dx*lens_ipow(begin_dy, 2) + 0.987998 *begin_x*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 2.32491e-07 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2) + 0.111575 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 4) + -0.00192084 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 4) + 3.63561e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 2) + -0.880001 *begin_x*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 4) + -9.0951e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy*lens_ipow(begin_lambda, 2) + -1.81864e-13 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6) + -2.21108e-13 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2) + -2.38448e-11 *lens_ipow(begin_x, 8)*begin_dx + -1613.2 *begin_dx*lens_ipow(begin_dy, 8)*begin_lambda + -18.2434 *begin_dx*lens_ipow(begin_lambda, 10) + -12688.4 *lens_ipow(begin_dx, 11) + -1.38775e-11 *lens_ipow(begin_y, 8)*begin_dx*lens_ipow(begin_lambda, 2) + -0.333992 *begin_x*lens_ipow(begin_lambda, 10) + -4.60028e-16 *lens_ipow(begin_x, 11),
       + 0.00013126  + 81.1717 *begin_dy + 0.000677621 *begin_dx + 0.747254 *begin_y + 0.00634395 *begin_dx*begin_dy + 7.57954e-05 *begin_x*begin_dx + 34.4053 *lens_ipow(begin_dy, 3) + -0.0383035 *begin_dx*lens_ipow(begin_dy, 2) + 34.5105 *lens_ipow(begin_dx, 2)*begin_dy + 2.26661 *begin_y*lens_ipow(begin_dy, 2) + 0.930706 *begin_y*lens_ipow(begin_dx, 2) + 0.0325465 *lens_ipow(begin_y, 2)*begin_dy + 0.000119657 *lens_ipow(begin_y, 3) + 1.32601 *begin_x*begin_dx*begin_dy + 2.31934e-05 *begin_x*begin_y*begin_dy + 0.0232315 *begin_x*begin_y*begin_dx + 2.2844e-07 *begin_x*lens_ipow(begin_y, 2) + 0.00908557 *lens_ipow(begin_x, 2)*begin_dy + 0.000118991 *lens_ipow(begin_x, 2)*begin_y + 3.35285 *begin_dy*lens_ipow(begin_lambda, 3) + 6.49099e-07 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 0.0684295 *begin_y*lens_ipow(begin_lambda, 4) + -0.000211522 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 5.28169 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + -4.42287 *begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 0.0965407 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 5) + 2.22658e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 2) + -0.00904062 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5) + 2.67703e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -1.38759e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy + 8.10121e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2)*begin_dy + -3.82933e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_lambda, 3) + -1132.31 *lens_ipow(begin_dx, 8)*begin_dy + -7.82412e-12 *lens_ipow(begin_y, 8)*begin_dy + -4.34875e-13 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 7) + -6.27521 *begin_y*lens_ipow(begin_dx, 6)*lens_ipow(begin_lambda, 3) + 0.000724432 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + -17.916 *begin_dy*lens_ipow(begin_lambda, 10) + -15985.7 *lens_ipow(begin_dy, 11) + -0.335335 *begin_y*lens_ipow(begin_lambda, 10)
    };
    const float delta_ap[] = {ap_x - pred_ap[0], ap_y - pred_ap[1]};
    sqr_ap_err = delta_ap[0]*delta_ap[0]+delta_ap[1]*delta_ap[1];
    float dx1_domega0[2][2];
    dx1_domega0[0][0] =  + 81.145  + 0.00409977 *begin_dx + 34.9894 *lens_ipow(begin_dy, 2) + 105.312 *lens_ipow(begin_dx, 2) + 1.34532 *begin_y*begin_dy + 0.00926679 *lens_ipow(begin_y, 2) + 4.59291 *begin_x*begin_dx + 0.0330326 *lens_ipow(begin_x, 2) + 3.4215 *lens_ipow(begin_lambda, 3) + 0.0387516 *begin_x*begin_y*begin_dx*begin_dy + -3.41155e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + -1488.37 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + -0.0912632 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4) + 2.30938e-05 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2) + 3.95199 *begin_x*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 0.111575 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4) + -0.00768336 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3) + -2.38448e-11 *lens_ipow(begin_x, 8) + -1613.2 *lens_ipow(begin_dy, 8)*begin_lambda + -18.2434 *lens_ipow(begin_lambda, 10) + -139573 *lens_ipow(begin_dx, 10) + -1.38775e-11 *lens_ipow(begin_y, 8)*lens_ipow(begin_lambda, 2)+0.0f;
    dx1_domega0[0][1] =  + 0.000510075  + 0.00372177 *begin_dy + 5.13706e-05 *begin_x + 69.9789 *begin_dx*begin_dy + 1.34532 *begin_y*begin_dx + 1.87341 *begin_x*begin_dy + 0.0233816 *begin_x*begin_y + 0.0193758 *begin_x*begin_y*lens_ipow(begin_dx, 2) + -1984.5 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 4.61876e-05 *lens_ipow(begin_y, 4)*begin_dx*begin_dy + 1.976 *begin_x*lens_ipow(begin_dx, 4)*begin_dy + 4.64981e-07 *begin_x*lens_ipow(begin_y, 4)*begin_dy + 0.4463 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 3) + 7.27122e-07 *lens_ipow(begin_x, 5)*begin_dy + -3.52 *begin_x*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 4) + -9.0951e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 2) + -12905.6 *begin_dx*lens_ipow(begin_dy, 7)*begin_lambda+0.0f;
    dx1_domega0[1][0] =  + 0.000677621  + 0.00634395 *begin_dy + 7.57954e-05 *begin_x + -0.0383035 *lens_ipow(begin_dy, 2) + 69.0211 *begin_dx*begin_dy + 1.86141 *begin_y*begin_dx + 1.32601 *begin_x*begin_dy + 0.0232315 *begin_x*begin_y + 6.49099e-07 *lens_ipow(begin_x, 2)*begin_y + -0.000211522 *begin_x*lens_ipow(begin_y, 2)*begin_dy + 10.5634 *begin_y*begin_dx*lens_ipow(begin_dy, 4) + -17.6915 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 4.45315e-07 *lens_ipow(begin_y, 5)*begin_dx + 5.35405e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx + 1.62024e-05 *lens_ipow(begin_x, 4)*begin_dx*begin_dy + -3.82933e-06 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 3) + -9058.47 *lens_ipow(begin_dx, 7)*begin_dy + -37.6512 *begin_y*lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 3) + 0.000724432 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 4)*begin_lambda+0.0f;
    dx1_domega0[1][1] =  + 81.1717  + 0.00634395 *begin_dx + 103.216 *lens_ipow(begin_dy, 2) + -0.076607 *begin_dx*begin_dy + 34.5105 *lens_ipow(begin_dx, 2) + 4.53323 *begin_y*begin_dy + 0.0325465 *lens_ipow(begin_y, 2) + 1.32601 *begin_x*begin_dx + 2.31934e-05 *begin_x*begin_y + 0.00908557 *lens_ipow(begin_x, 2) + 3.35285 *lens_ipow(begin_lambda, 3) + -0.000211522 *begin_x*lens_ipow(begin_y, 2)*begin_dx + 21.1268 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -8.84573 *begin_y*lens_ipow(begin_dx, 4)*begin_dy + 0.482703 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 4) + -0.0452031 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4) + -1.38759e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4) + 8.10121e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2) + -1132.31 *lens_ipow(begin_dx, 8) + -7.82412e-12 *lens_ipow(begin_y, 8) + 0.00289773 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + -17.916 *lens_ipow(begin_lambda, 10) + -175842 *lens_ipow(begin_dy, 10)+0.0f;
    float invApJ[2][2];
    const float invdetap = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
    invApJ[0][0] =  dx1_domega0[1][1]*invdetap;
    invApJ[1][1] =  dx1_domega0[0][0]*invdetap;
    invApJ[0][1] = -dx1_domega0[0][1]*invdetap;
    invApJ[1][0] = -dx1_domega0[1][0]*invdetap;
    for(int i=0;i<2;i++)
    {
      dx += invApJ[0][i]*delta_ap[i];
      dy += invApJ[1][i]*delta_ap[i];
    }
    out[0] =  + -4.3734e-05  + 0.000913257 *begin_dy + 99.674 *begin_dx + 0.777701 *begin_x + 0.00142485 *lens_ipow(begin_dy, 2) + 0.00644577 *begin_dx*begin_dy + -1.58164e-06 *begin_x*begin_y + -38.4022 *begin_dx*lens_ipow(begin_dy, 2) + -0.0268357 *lens_ipow(begin_dx, 2)*begin_dy + -38.7379 *lens_ipow(begin_dx, 3) + 0.358522 *begin_y*begin_dx*begin_dy + 0.007379 *lens_ipow(begin_y, 2)*begin_dx + 1.24838 *begin_x*lens_ipow(begin_dy, 2) + 1.65238 *begin_x*lens_ipow(begin_dx, 2) + 0.0326702 *begin_x*begin_y*begin_dy + 0.000183725 *begin_x*lens_ipow(begin_y, 2) + 0.0404087 *lens_ipow(begin_x, 2)*begin_dx + 0.000185731 *lens_ipow(begin_x, 3) + 0.0212366 *begin_x*lens_ipow(begin_lambda, 3) + -0.844688 *begin_x*lens_ipow(begin_dx, 4) + -1.87668e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + 0.00016615 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + 2.04551 *begin_dx*lens_ipow(begin_lambda, 5) + 147.939 *begin_dx*lens_ipow(begin_dy, 6) + 963.714 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + -0.0590368 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5) + -2.08267 *begin_x*lens_ipow(begin_dy, 6) + -15.76 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + 4.70607e-07 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2) + 6.4371e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + 740.875 *lens_ipow(begin_dx, 9) + -3.07122e-06 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 3)*begin_dy + 1.63844e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -2.67744e-13 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6) + 4.32181e-08 *lens_ipow(begin_x, 6)*begin_dx*lens_ipow(begin_dy, 2) + -2.42609e-13 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2) + -8.38332 *begin_dx*lens_ipow(begin_lambda, 10) + -0.0012614 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 8) + -0.116906 *begin_x*lens_ipow(begin_lambda, 10) + -2.87467e-16 *lens_ipow(begin_x, 11);
    out[1] =  + 0.000247496  + 99.6816 *begin_dy + -0.000309823 *begin_dx + 0.777758 *begin_y + 2.57782e-05 *begin_y*begin_dx + -7.76354e-07 *lens_ipow(begin_y, 2) + -1.80741e-06 *lens_ipow(begin_x, 2) + -38.9979 *lens_ipow(begin_dy, 3) + -38.891 *lens_ipow(begin_dx, 2)*begin_dy + 1.6401 *begin_y*lens_ipow(begin_dy, 2) + 1.25641 *begin_y*lens_ipow(begin_dx, 2) + 0.0402298 *lens_ipow(begin_y, 2)*begin_dy + 0.000184741 *lens_ipow(begin_y, 3) + 0.353407 *begin_x*begin_dx*begin_dy + 4.92663e-06 *begin_x*begin_y*begin_dy + 0.0326194 *begin_x*begin_y*begin_dx + 0.00734699 *lens_ipow(begin_x, 2)*begin_dy + 0.000184034 *lens_ipow(begin_x, 2)*begin_y + 0.0212254 *begin_y*lens_ipow(begin_lambda, 3) + 4.84043e-05 *begin_x*begin_y*begin_dx*begin_dy + -0.853223 *begin_y*lens_ipow(begin_dy, 4) + -0.347 *begin_y*lens_ipow(begin_dx, 4) + 0.000162976 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -1.48278e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + 2.03923 *begin_dy*lens_ipow(begin_lambda, 5) + 828.53 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5) + 831.957 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 3) + 169.86 *lens_ipow(begin_dx, 6)*begin_dy + 2.40401e-05 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2)*begin_dy + 6.89224e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -0.043685 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5) + 4.94988e-07 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dx, 2) + 715.14 *lens_ipow(begin_dy, 9) + 1.17863e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -3.80411e-13 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 5) + -9.25163e-14 *lens_ipow(begin_x, 8)*begin_y + -2.00399e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + -8.48108 *begin_dy*lens_ipow(begin_lambda, 10) + -0.116818 *begin_y*lens_ipow(begin_lambda, 10) + -3.81547e-16 *lens_ipow(begin_y, 11);
    out[2] =  + 1.96839e-06  + -2.33035 *begin_dx + -8.75109e-08 *begin_y + -0.0282281 *begin_x + -0.000158287 *lens_ipow(begin_dx, 2) + 9.80636e-07 *begin_y*begin_dx + -5.21176 *begin_dx*lens_ipow(begin_dy, 2) + 1.33516 *lens_ipow(begin_dx, 3) + -0.108452 *begin_y*begin_dx*begin_dy + -0.000472038 *lens_ipow(begin_y, 2)*begin_dx + -0.0779454 *begin_x*lens_ipow(begin_dy, 2) + 1.61069e-05 *begin_x*begin_dx*begin_dy + 0.0032579 *begin_x*lens_ipow(begin_dx, 2) + -0.00152978 *begin_x*begin_y*begin_dy + -5.93393e-06 *begin_x*lens_ipow(begin_y, 2) + -0.000220932 *lens_ipow(begin_x, 2)*begin_dx + -4.90159e-07 *lens_ipow(begin_x, 3) + -0.000275923 *begin_x*lens_ipow(begin_lambda, 3) + -0.000379902 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 0.000239842 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -0.00101174 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -4.00675e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -0.0104882 *begin_dx*lens_ipow(begin_lambda, 5) + 1.73747e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*begin_lambda + 102.043 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4) + 0.102421 *begin_x*lens_ipow(begin_dy, 6) + 1.18302 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + 2.01361e-10 *begin_x*lens_ipow(begin_y, 5)*begin_dy + 2.23772e-12 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + 73.9146 *lens_ipow(begin_dx, 7)*lens_ipow(begin_dy, 2) + -15.2938 *lens_ipow(begin_dx, 9) + -3.32875e-05 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 2.57361e-13 *lens_ipow(begin_y, 8)*begin_dx + -1.5466e-10 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + 920.459 *begin_dx*lens_ipow(begin_dy, 10) + 0.00102416 *begin_x*lens_ipow(begin_lambda, 10) + 0.000121597 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 4) + 1.86025e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 6) + 3.45959e-17 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 8) + -3.47938e-08 *lens_ipow(begin_x, 6)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2);
    out[3] =  + 3.77579e-07  + -2.3321 *begin_dy + -6.09807e-05 *begin_dx + -0.0282547 *begin_y + 6.20986e-06 *begin_x*begin_dy + 1.43165 *lens_ipow(begin_dy, 3) + 0.00156151 *begin_dx*lens_ipow(begin_dy, 2) + 7.94185 *lens_ipow(begin_dx, 2)*begin_dy + 0.00744527 *begin_y*lens_ipow(begin_dy, 2) + 0.0296331 *begin_y*lens_ipow(begin_dx, 2) + -0.00017345 *lens_ipow(begin_y, 2)*begin_dy + -3.54905e-07 *lens_ipow(begin_y, 3) + 0.165549 *begin_x*begin_dx*begin_dy + -1.84392e-05 *begin_x*lens_ipow(begin_dx, 2) + 0.000700324 *begin_x*begin_y*begin_dx + 0.000876019 *lens_ipow(begin_x, 2)*begin_dy + 5.02525e-06 *lens_ipow(begin_x, 2)*begin_y + -0.00025461 *begin_y*lens_ipow(begin_lambda, 3) + 2.24032e-06 *begin_x*begin_y*lens_ipow(begin_dy, 2) + -0.759168 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -2.857 *lens_ipow(begin_dx, 4)*begin_dy + 0.000359646 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + 0.00192164 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + -7.85463e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + -0.0118652 *begin_dy*lens_ipow(begin_lambda, 6) + 5.52449e-07 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2)*begin_dy + -1.48333e-05 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -4.68177e-13 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + -1.50374e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx + 6.80119e-08 *lens_ipow(begin_x, 5)*begin_dx*begin_dy + -208.018 *lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 3) + -103.241 *lens_ipow(begin_dx, 8)*begin_dy + 2.6208 *begin_x*begin_dx*lens_ipow(begin_dy, 7) + -2.30275 *lens_ipow(begin_dx, 4)*begin_dy*lens_ipow(begin_lambda, 5) + 0.000285418 *lens_ipow(begin_x, 3)*begin_dx*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + 1.38755e-12 *lens_ipow(begin_x, 8)*begin_dy*begin_lambda + 0.00102108 *begin_y*lens_ipow(begin_lambda, 10) + -2.4488e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5)*begin_dy + 7.4208e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_dy, 7) + 4.30401e-08 *lens_ipow(begin_x, 6)*lens_ipow(begin_dx, 4)*begin_dy;
    float pred_out_cs[7] = {0.0f};
    lens_sphereToCs(out, out+2, pred_out_cs, pred_out_cs+3, - lens_outer_pupil_curvature_radius, lens_outer_pupil_curvature_radius);
    float view[3] =
    {
      scene_x - pred_out_cs[0],
      scene_y - pred_out_cs[1],
      scene_z - pred_out_cs[2]
    };
    normalise(view);
    float out_new[5];
    lens_csToSphere(pred_out_cs, view, out_new, out_new+2, - lens_outer_pupil_curvature_radius, lens_outer_pupil_curvature_radius);
    const float delta_out[] = {out_new[2] - out[2], out_new[3] - out[3]};
    sqr_err = delta_out[0]*delta_out[0]+delta_out[1]*delta_out[1];
    float domega2_dx0[2][2];
    domega2_dx0[0][0] =  + -0.0282281  + -0.0779454 *lens_ipow(begin_dy, 2) + 1.61069e-05 *begin_dx*begin_dy + 0.0032579 *lens_ipow(begin_dx, 2) + -0.00152978 *begin_y*begin_dy + -5.93393e-06 *lens_ipow(begin_y, 2) + -0.000441864 *begin_x*begin_dx + -1.47048e-06 *lens_ipow(begin_x, 2) + -0.000275923 *lens_ipow(begin_lambda, 3) + -0.00101174 *begin_y*lens_ipow(begin_dx, 2)*begin_dy + -1.20202e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + 3.47493e-07 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_lambda + 0.102421 *lens_ipow(begin_dy, 6) + 1.18302 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + 2.01361e-10 *lens_ipow(begin_y, 5)*begin_dy + 1.11886e-11 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2) + -6.1864e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + 0.00102416 *lens_ipow(begin_lambda, 10) + 0.000121597 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 4) + 5.58074e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 6) + 1.03788e-16 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 8) + -2.08763e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)+0.0f;
    domega2_dx0[0][1] =  + -8.75109e-08  + 9.80636e-07 *begin_dx + -0.108452 *begin_dx*begin_dy + -0.000944075 *begin_y*begin_dx + -0.00152978 *begin_x*begin_dy + -1.18679e-05 *begin_x*begin_y + -0.000759804 *begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.000479683 *begin_y*lens_ipow(begin_dx, 3) + -0.00101174 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + 3.47493e-07 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_lambda + 1.0068e-09 *begin_x*lens_ipow(begin_y, 4)*begin_dy + 4.47545e-12 *lens_ipow(begin_x, 5)*begin_y + -0.00013315 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 2.05889e-12 *lens_ipow(begin_y, 7)*begin_dx + -4.6398e-10 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 0.000243193 *begin_x*begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 4) + 3.72049e-09 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_lambda, 6) + 2.76767e-16 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 7)+0.0f;
    domega2_dx0[1][0] =  + 6.20986e-06 *begin_dy + 0.165549 *begin_dx*begin_dy + -1.84392e-05 *lens_ipow(begin_dx, 2) + 0.000700324 *begin_y*begin_dx + 0.00175204 *begin_x*begin_dy + 1.00505e-05 *begin_x*begin_y + 2.24032e-06 *begin_y*lens_ipow(begin_dy, 2) + 0.000719292 *begin_x*lens_ipow(begin_dy, 3) + 0.00384329 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + -1.57093e-07 *begin_x*lens_ipow(begin_y, 2)*begin_dy + -1.48333e-05 *lens_ipow(begin_y, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -9.36354e-13 *begin_x*lens_ipow(begin_y, 5) + -4.51121e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx + 3.40059e-07 *lens_ipow(begin_x, 4)*begin_dx*begin_dy + 2.6208 *begin_dx*lens_ipow(begin_dy, 7) + 0.000856255 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + 1.11004e-11 *lens_ipow(begin_x, 7)*begin_dy*begin_lambda + -7.34641e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5)*begin_dy + 0.000296832 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 7) + 2.58241e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 4)*begin_dy+0.0f;
    domega2_dx0[1][1] =  + -0.0282547  + 0.00744527 *lens_ipow(begin_dy, 2) + 0.0296331 *lens_ipow(begin_dx, 2) + -0.0003469 *begin_y*begin_dy + -1.06471e-06 *lens_ipow(begin_y, 2) + 0.000700324 *begin_x*begin_dx + 5.02525e-06 *lens_ipow(begin_x, 2) + -0.00025461 *lens_ipow(begin_lambda, 3) + 2.24032e-06 *begin_x*lens_ipow(begin_dy, 2) + -1.57093e-07 *lens_ipow(begin_x, 2)*begin_y*begin_dy + 2.2098e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + -2.96666e-05 *begin_x*begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -2.34088e-12 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4) + -4.51121e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx + 0.00102108 *lens_ipow(begin_lambda, 10) + -4.89761e-06 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dx, 5)*begin_dy+0.0f;
    float invJ[2][2];
    const float invdet = 1.0f/(domega2_dx0[0][0]*domega2_dx0[1][1] - domega2_dx0[0][1]*domega2_dx0[1][0]);
    invJ[0][0] =  domega2_dx0[1][1]*invdet;
    invJ[1][1] =  domega2_dx0[0][0]*invdet;
    invJ[0][1] = -domega2_dx0[0][1]*invdet;
    invJ[1][0] = -domega2_dx0[1][0]*invdet;
    for(int i=0;i<2;i++)
    {
      x += invJ[0][i]*delta_out[i];
      y += invJ[1][i]*delta_out[i];
    }
    if(sqr_err>prev_sqr_err) error |= 1;
    if(sqr_ap_err>prev_sqr_ap_err) error |= 2;
    if(out[0]!=out[0]) error |= 4;
    if(out[1]!=out[1]) error |= 8;
    DEBUG_LOG;
    // reset error code for first few iterations.
    if(k<10) error = 0;
  }
}
else
  error = 128;
if(out[0]*out[0]+out[1]*out[1] > lens_outer_pupil_radius*lens_outer_pupil_radius) error |= 16;
const float begin_x = x;
const float begin_y = y;
const float begin_dx = dx;
const float begin_dy = dy;
const float begin_lambda = lambda;
if(error==0)
  out[4] =  + 0.602896  + 0.202024 *begin_lambda + 1.55248e-07 *begin_y + -3.70904e-07 *begin_x + -0.116432 *lens_ipow(begin_dy, 2) + -0.11263 *lens_ipow(begin_dx, 2) + -0.00238893 *begin_y*begin_dy + 6.65819e-06 *begin_y*begin_dx + -1.40591e-05 *lens_ipow(begin_y, 2) + -0.00219436 *begin_x*begin_dx + 1.38397e-07 *begin_x*begin_y + -1.44828e-05 *lens_ipow(begin_x, 2) + -0.169325 *lens_ipow(begin_lambda, 3) + 0.000968332 *lens_ipow(begin_dy, 3) + -0.00152288 *lens_ipow(begin_dx, 2)*begin_dy + 4.61712e-09 *lens_ipow(begin_x, 2)*begin_y + -0.713474 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 7.69817e-05 *begin_x*lens_ipow(begin_dy, 3) + -1.64167e-06 *begin_x*lens_ipow(begin_y, 2)*begin_dx + -2.09592e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dy + -2.96927e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + -2.67743e-06 *lens_ipow(begin_x, 3)*begin_dx + 1.07539e-06 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_lambda + 1.67348e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -4.9641 *lens_ipow(begin_dy, 6) + -8.67766 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + -4.87213 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -5.70494 *lens_ipow(begin_dx, 6) + -1.38576e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + 2.97666e-07 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2) + -2.34521e-11 *lens_ipow(begin_y, 6) + -4.1157e-06 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -1.68051e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -2.27099e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2) + -3.96026e-11 *lens_ipow(begin_x, 6) + -1.23355e-06 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 4) + -0.00306952 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 6) + 2.71831e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 6) + 0.306803 *lens_ipow(begin_lambda, 11) + 0.117111 *begin_x*begin_y*lens_ipow(begin_dx, 7)*begin_dy*begin_lambda;
else
  out[4] = 0.0f;
