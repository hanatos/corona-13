const float out_x =  + -6.79816e-05  + 0.000510075 *dy + 81.145 *dx + 0.746981 *x + 0.00186088 *lens_ipow(dy, 2) + 0.00204989 *lens_ipow(dx, 2) + 5.13706e-05 *x*dy + 34.9894 *dx*lens_ipow(dy, 2) + 35.104 *lens_ipow(dx, 3) + 1.34532 *y*dx*dy + 0.00926679 *lens_ipow(y, 2)*dx + 0.936703 *x*lens_ipow(dy, 2) + 2.29645 *x*lens_ipow(dx, 2) + 0.0233816 *x*y*dy + 0.000119137 *x*lens_ipow(y, 2) + 0.0330326 *lens_ipow(x, 2)*dx + 0.000122147 *lens_ipow(x, 3) + 3.4215 *dx*lens_ipow(lambda, 3) + 0.068899 *x*lens_ipow(lambda, 4) + 0.0193758 *x*y*lens_ipow(dx, 2)*dy + -3.41155e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -496.125 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + -0.0182526 *lens_ipow(y, 2)*lens_ipow(dx, 5) + 2.30938e-05 *lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + 0.987998 *x*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 2.32491e-07 *x*lens_ipow(y, 4)*lens_ipow(dy, 2) + 0.111575 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4) + -0.00192084 *lens_ipow(x, 3)*lens_ipow(dx, 4) + 3.63561e-07 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -0.880001 *x*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -9.0951e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy*lens_ipow(lambda, 2) + -1.81864e-13 *lens_ipow(x, 3)*lens_ipow(y, 6) + -2.21108e-13 *lens_ipow(x, 7)*lens_ipow(y, 2) + -2.38448e-11 *lens_ipow(x, 8)*dx + -1613.2 *dx*lens_ipow(dy, 8)*lambda + -18.2434 *dx*lens_ipow(lambda, 10) + -12688.4 *lens_ipow(dx, 11) + -1.38775e-11 *lens_ipow(y, 8)*dx*lens_ipow(lambda, 2) + -0.333992 *x*lens_ipow(lambda, 10) + -4.60028e-16 *lens_ipow(x, 11);
const float out_y =  + 0.00013126  + 81.1717 *dy + 0.000677621 *dx + 0.747254 *y + 0.00634395 *dx*dy + 7.57954e-05 *x*dx + 34.4053 *lens_ipow(dy, 3) + -0.0383035 *dx*lens_ipow(dy, 2) + 34.5105 *lens_ipow(dx, 2)*dy + 2.26661 *y*lens_ipow(dy, 2) + 0.930706 *y*lens_ipow(dx, 2) + 0.0325465 *lens_ipow(y, 2)*dy + 0.000119657 *lens_ipow(y, 3) + 1.32601 *x*dx*dy + 2.31934e-05 *x*y*dy + 0.0232315 *x*y*dx + 2.2844e-07 *x*lens_ipow(y, 2) + 0.00908557 *lens_ipow(x, 2)*dy + 0.000118991 *lens_ipow(x, 2)*y + 3.35285 *dy*lens_ipow(lambda, 3) + 6.49099e-07 *lens_ipow(x, 2)*y*dx + 0.0684295 *y*lens_ipow(lambda, 4) + -0.000211522 *x*lens_ipow(y, 2)*dx*dy + 5.28169 *y*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -4.42287 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 0.0965407 *lens_ipow(y, 2)*lens_ipow(dy, 5) + 2.22658e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2) + -0.00904062 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 2.67703e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2) + -1.38759e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + 8.10121e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -3.82933e-06 *x*lens_ipow(y, 3)*dx*lens_ipow(lambda, 3) + -1132.31 *lens_ipow(dx, 8)*dy + -7.82412e-12 *lens_ipow(y, 8)*dy + -4.34875e-13 *lens_ipow(x, 2)*lens_ipow(y, 7) + -6.27521 *y*lens_ipow(dx, 6)*lens_ipow(lambda, 3) + 0.000724432 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 4)*lambda + -17.916 *dy*lens_ipow(lambda, 10) + -15985.7 *lens_ipow(dy, 11) + -0.335335 *y*lens_ipow(lambda, 10);
const float out_dx =  + 1.33587e-06  + -8.76478e-05 *dy + 1.60503 *dx + -7.19217e-07 *y + 0.00229045 *x + 0.00057633 *dx*dy + -0.000439207 *lens_ipow(dx, 2) + -8.35738e-08 *x*y + 5.19448 *dx*lens_ipow(dy, 2) + 5.09852 *lens_ipow(dx, 3) + 0.101514 *y*dx*dy + 0.000635498 *lens_ipow(y, 2)*dx + 0.0557732 *x*lens_ipow(dy, 2) + 0.156098 *x*lens_ipow(dx, 2) + 0.00129246 *x*y*dy + 7.95604e-06 *x*lens_ipow(y, 2) + 4.50793e-07 *lens_ipow(x, 2)*dy + 0.00192786 *lens_ipow(x, 2)*dx + 7.91628e-06 *lens_ipow(x, 3) + -0.361485 *dx*lens_ipow(lambda, 3) + 2.0686e-06 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 1.54844 *dx*lens_ipow(dy, 4) + 1.30339 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 2.1584 *lens_ipow(dx, 5) + 0.000704849 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 0.000746346 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -8.9303e-10 *lens_ipow(x, 3)*lens_ipow(y, 2) + -0.00659297 *x*lens_ipow(lambda, 5) + 2.17352e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.692048 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -5.02909e-07 *lens_ipow(x, 3)*y*lens_ipow(dy, 3) + 1.50547e-08 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -9.13733 *lens_ipow(dx, 5)*lens_ipow(lambda, 4) + 0.00015642 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 6) + -1.59905e-11 *lens_ipow(y, 7)*dx*dy + -0.0070876 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 5.26324e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 5)*dy + 1.9874 *dx*lens_ipow(lambda, 10) + 0.0277843 *x*lens_ipow(lambda, 10) + 0.00443299 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 6);
const float out_dy =  + -1.07302e-06  + 1.60214 *dy + -1.51258e-05 *dx + 0.00229435 *y + 4.41826e-08 *x + 7.0264e-05 *dx*dy + 0.000168584 *lens_ipow(dx, 2) + -3.90872e-08 *lens_ipow(y, 2) + 5.31043 *lens_ipow(dy, 3) + 5.27408 *lens_ipow(dx, 2)*dy + 0.157882 *y*lens_ipow(dy, 2) + 6.48594e-05 *y*dx*dy + 0.0553079 *y*lens_ipow(dx, 2) + 0.0019443 *lens_ipow(y, 2)*dy + 7.92134e-06 *lens_ipow(y, 3) + 0.101838 *x*dx*dy + 0.0012907 *x*y*dx + 0.000655216 *lens_ipow(x, 2)*dy + 7.98725e-06 *lens_ipow(x, 2)*y + -0.367257 *dy*lens_ipow(lambda, 3) + -0.000162918 *x*dx*lens_ipow(dy, 2) + 0.000657988 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 3.56575e-05 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.00672378 *y*lens_ipow(lambda, 5) + -0.575544 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + 1.92696e-08 *lens_ipow(y, 5)*lens_ipow(dx, 2) + -0.213293 *x*lens_ipow(dx, 5)*dy + -2.39252e-12 *lens_ipow(x, 2)*lens_ipow(y, 5) + -3.87738e-07 *lens_ipow(x, 3)*y*lens_ipow(dx, 3) + -1.3409e-12 *lens_ipow(x, 6)*y + 0.078373 *y*dx*lens_ipow(dy, 6) + -7.31936e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy*lambda + -4.45961 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + 259.795 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + -1.61861 *y*lens_ipow(dy, 8) + -0.125829 *x*dx*lens_ipow(dy, 7) + 2.07441 *dy*lens_ipow(lambda, 10) + 0.0279092 *y*lens_ipow(lambda, 10) + -5.80024e-05 *x*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 6) + 3.91961e-08 *lens_ipow(x, 6)*lens_ipow(dy, 5);
const float out_transmittance =  + 0.703996  + 0.165816 *lambda + 5.19598e-05 *dy + 5.1259e-07 *y + -3.5542e-07 *x + -0.108394 *lens_ipow(dy, 2) + 0.000647231 *dx*dy + -0.108322 *lens_ipow(dx, 2) + -0.00209618 *y*dy + 1.16301e-05 *y*dx + -1.32167e-05 *lens_ipow(y, 2) + -0.00203943 *x*dx + 1.55522e-07 *x*y + -1.29485e-05 *lens_ipow(x, 2) + -0.13946 *lens_ipow(lambda, 3) + -0.00223049 *lens_ipow(dx, 2)*dy + -0.742561 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.7108e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.22558e-06 *lens_ipow(y, 3)*dy + 0.000169822 *x*lens_ipow(dy, 3) + 0.000174417 *x*y*dx*dy + 5.53914e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -1.8186e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.45735e-06 *lens_ipow(x, 3)*dx + -5.21498 *lens_ipow(dy, 6) + -10.6426 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -8.69808 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -5.01984 *lens_ipow(dx, 6) + 0.000345479 *y*dy*lens_ipow(lambda, 4) + 2.0436e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 1.51447e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -3.82552e-11 *lens_ipow(x, 6) + 8.29319e-06 *lens_ipow(y, 2)*lens_ipow(lambda, 5) + 3.5481e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2)*lambda + -7.14987e-11 *lens_ipow(y, 6)*lambda + 0.190514 *x*y*dx*lens_ipow(dy, 7) + -0.00335199 *lens_ipow(x, 2)*y*lens_ipow(dx, 4)*lens_ipow(dy, 3) + -1.87993e-05 *lens_ipow(x, 4)*lens_ipow(dy, 6) + 0.252533 *lens_ipow(lambda, 11) + 0.0263989 *x*y*lens_ipow(dx, 5)*dy*lens_ipow(lambda, 3);
