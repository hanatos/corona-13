float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + -6.79816e-05  + 0.000510075 *begin_dy + 81.145 *begin_dx + 0.746981 *begin_x + 0.00186088 *lens_ipow(begin_dy, 2) + 0.00204989 *lens_ipow(begin_dx, 2) + 5.13706e-05 *begin_x*begin_dy + 34.9894 *begin_dx*lens_ipow(begin_dy, 2) + 35.104 *lens_ipow(begin_dx, 3) + 1.34532 *begin_y*begin_dx*begin_dy + 0.00926679 *lens_ipow(begin_y, 2)*begin_dx + 0.936703 *begin_x*lens_ipow(begin_dy, 2) + 2.29645 *begin_x*lens_ipow(begin_dx, 2) + 0.0233816 *begin_x*begin_y*begin_dy + 0.000119137 *begin_x*lens_ipow(begin_y, 2) + 0.0330326 *lens_ipow(begin_x, 2)*begin_dx + 0.000122147 *lens_ipow(begin_x, 3) + 3.4215 *begin_dx*lens_ipow(begin_lambda, 3) + 0.068899 *begin_x*lens_ipow(begin_lambda, 4) + 0.0193758 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -3.41155e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -496.125 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4) + -0.0182526 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5) + 2.30938e-05 *lens_ipow(begin_y, 4)*begin_dx*lens_ipow(begin_dy, 2) + 0.987998 *begin_x*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 2.32491e-07 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2) + 0.111575 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 4) + -0.00192084 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 4) + 3.63561e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 2) + -0.880001 *begin_x*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 4) + -9.0951e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy*lens_ipow(begin_lambda, 2) + -1.81864e-13 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6) + -2.21108e-13 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2) + -2.38448e-11 *lens_ipow(begin_x, 8)*begin_dx + -1613.2 *begin_dx*lens_ipow(begin_dy, 8)*begin_lambda + -18.2434 *begin_dx*lens_ipow(begin_lambda, 10) + -12688.4 *lens_ipow(begin_dx, 11) + -1.38775e-11 *lens_ipow(begin_y, 8)*begin_dx*lens_ipow(begin_lambda, 2) + -0.333992 *begin_x*lens_ipow(begin_lambda, 10) + -4.60028e-16 *lens_ipow(begin_x, 11);
  pred_y =  + 0.00013126  + 81.1717 *begin_dy + 0.000677621 *begin_dx + 0.747254 *begin_y + 0.00634395 *begin_dx*begin_dy + 7.57954e-05 *begin_x*begin_dx + 34.4053 *lens_ipow(begin_dy, 3) + -0.0383035 *begin_dx*lens_ipow(begin_dy, 2) + 34.5105 *lens_ipow(begin_dx, 2)*begin_dy + 2.26661 *begin_y*lens_ipow(begin_dy, 2) + 0.930706 *begin_y*lens_ipow(begin_dx, 2) + 0.0325465 *lens_ipow(begin_y, 2)*begin_dy + 0.000119657 *lens_ipow(begin_y, 3) + 1.32601 *begin_x*begin_dx*begin_dy + 2.31934e-05 *begin_x*begin_y*begin_dy + 0.0232315 *begin_x*begin_y*begin_dx + 2.2844e-07 *begin_x*lens_ipow(begin_y, 2) + 0.00908557 *lens_ipow(begin_x, 2)*begin_dy + 0.000118991 *lens_ipow(begin_x, 2)*begin_y + 3.35285 *begin_dy*lens_ipow(begin_lambda, 3) + 6.49099e-07 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 0.0684295 *begin_y*lens_ipow(begin_lambda, 4) + -0.000211522 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 5.28169 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + -4.42287 *begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 0.0965407 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 5) + 2.22658e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 2) + -0.00904062 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5) + 2.67703e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -1.38759e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy + 8.10121e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2)*begin_dy + -3.82933e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_lambda, 3) + -1132.31 *lens_ipow(begin_dx, 8)*begin_dy + -7.82412e-12 *lens_ipow(begin_y, 8)*begin_dy + -4.34875e-13 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 7) + -6.27521 *begin_y*lens_ipow(begin_dx, 6)*lens_ipow(begin_lambda, 3) + 0.000724432 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + -17.916 *begin_dy*lens_ipow(begin_lambda, 10) + -15985.7 *lens_ipow(begin_dy, 11) + -0.335335 *begin_y*lens_ipow(begin_lambda, 10);
  pred_dx =  + 1.33587e-06  + -8.76478e-05 *begin_dy + 1.60503 *begin_dx + -7.19217e-07 *begin_y + 0.00229045 *begin_x + 0.00057633 *begin_dx*begin_dy + -0.000439207 *lens_ipow(begin_dx, 2) + -8.35738e-08 *begin_x*begin_y + 5.19448 *begin_dx*lens_ipow(begin_dy, 2) + 5.09852 *lens_ipow(begin_dx, 3) + 0.101514 *begin_y*begin_dx*begin_dy + 0.000635498 *lens_ipow(begin_y, 2)*begin_dx + 0.0557732 *begin_x*lens_ipow(begin_dy, 2) + 0.156098 *begin_x*lens_ipow(begin_dx, 2) + 0.00129246 *begin_x*begin_y*begin_dy + 7.95604e-06 *begin_x*lens_ipow(begin_y, 2) + 4.50793e-07 *lens_ipow(begin_x, 2)*begin_dy + 0.00192786 *lens_ipow(begin_x, 2)*begin_dx + 7.91628e-06 *lens_ipow(begin_x, 3) + -0.361485 *begin_dx*lens_ipow(begin_lambda, 3) + 2.0686e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + 1.54844 *begin_dx*lens_ipow(begin_dy, 4) + 1.30339 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 2.1584 *lens_ipow(begin_dx, 5) + 0.000704849 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + 0.000746346 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + -8.9303e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + -0.00659297 *begin_x*lens_ipow(begin_lambda, 5) + 2.17352e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_lambda + -0.692048 *begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + -5.02909e-07 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dy, 3) + 1.50547e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 2) + -9.13733 *lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 4) + 0.00015642 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 6) + -1.59905e-11 *lens_ipow(begin_y, 7)*begin_dx*begin_dy + -0.0070876 *begin_x*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 6) + 5.26324e-05 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 5)*begin_dy + 1.9874 *begin_dx*lens_ipow(begin_lambda, 10) + 0.0277843 *begin_x*lens_ipow(begin_lambda, 10) + 0.00443299 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 6);
  pred_dy =  + -1.07302e-06  + 1.60214 *begin_dy + -1.51258e-05 *begin_dx + 0.00229435 *begin_y + 4.41826e-08 *begin_x + 7.0264e-05 *begin_dx*begin_dy + 0.000168584 *lens_ipow(begin_dx, 2) + -3.90872e-08 *lens_ipow(begin_y, 2) + 5.31043 *lens_ipow(begin_dy, 3) + 5.27408 *lens_ipow(begin_dx, 2)*begin_dy + 0.157882 *begin_y*lens_ipow(begin_dy, 2) + 6.48594e-05 *begin_y*begin_dx*begin_dy + 0.0553079 *begin_y*lens_ipow(begin_dx, 2) + 0.0019443 *lens_ipow(begin_y, 2)*begin_dy + 7.92134e-06 *lens_ipow(begin_y, 3) + 0.101838 *begin_x*begin_dx*begin_dy + 0.0012907 *begin_x*begin_y*begin_dx + 0.000655216 *lens_ipow(begin_x, 2)*begin_dy + 7.98725e-06 *lens_ipow(begin_x, 2)*begin_y + -0.367257 *begin_dy*lens_ipow(begin_lambda, 3) + -0.000162918 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + 0.000657988 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + 3.56575e-05 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + -0.00672378 *begin_y*lens_ipow(begin_lambda, 5) + -0.575544 *lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 4) + 1.92696e-08 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 2) + -0.213293 *begin_x*lens_ipow(begin_dx, 5)*begin_dy + -2.39252e-12 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + -3.87738e-07 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dx, 3) + -1.3409e-12 *lens_ipow(begin_x, 6)*begin_y + 0.078373 *begin_y*begin_dx*lens_ipow(begin_dy, 6) + -7.31936e-10 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dy*begin_lambda + -4.45961 *lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 4) + 259.795 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 5) + -1.61861 *begin_y*lens_ipow(begin_dy, 8) + -0.125829 *begin_x*begin_dx*lens_ipow(begin_dy, 7) + 2.07441 *begin_dy*lens_ipow(begin_lambda, 10) + 0.0279092 *begin_y*lens_ipow(begin_lambda, 10) + -5.80024e-05 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 6) + 3.91961e-08 *lens_ipow(begin_x, 6)*lens_ipow(begin_dy, 5);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 81.145  + 0.00409977 *begin_dx + 34.9894 *lens_ipow(begin_dy, 2) + 105.312 *lens_ipow(begin_dx, 2) + 1.34532 *begin_y*begin_dy + 0.00926679 *lens_ipow(begin_y, 2) + 4.59291 *begin_x*begin_dx + 0.0330326 *lens_ipow(begin_x, 2) + 3.4215 *lens_ipow(begin_lambda, 3) + 0.0387516 *begin_x*begin_y*begin_dx*begin_dy + -3.41155e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + -1488.37 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + -0.0912632 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4) + 2.30938e-05 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2) + 3.95199 *begin_x*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 0.111575 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4) + -0.00768336 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3) + -2.38448e-11 *lens_ipow(begin_x, 8) + -1613.2 *lens_ipow(begin_dy, 8)*begin_lambda + -18.2434 *lens_ipow(begin_lambda, 10) + -139573 *lens_ipow(begin_dx, 10) + -1.38775e-11 *lens_ipow(begin_y, 8)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0[0][1] =  + 0.000510075  + 0.00372177 *begin_dy + 5.13706e-05 *begin_x + 69.9789 *begin_dx*begin_dy + 1.34532 *begin_y*begin_dx + 1.87341 *begin_x*begin_dy + 0.0233816 *begin_x*begin_y + 0.0193758 *begin_x*begin_y*lens_ipow(begin_dx, 2) + -1984.5 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 4.61876e-05 *lens_ipow(begin_y, 4)*begin_dx*begin_dy + 1.976 *begin_x*lens_ipow(begin_dx, 4)*begin_dy + 4.64981e-07 *begin_x*lens_ipow(begin_y, 4)*begin_dy + 0.4463 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 3) + 7.27122e-07 *lens_ipow(begin_x, 5)*begin_dy + -3.52 *begin_x*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 4) + -9.0951e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 2) + -12905.6 *begin_dx*lens_ipow(begin_dy, 7)*begin_lambda+0.0f;
  dx1_domega0[1][0] =  + 0.000677621  + 0.00634395 *begin_dy + 7.57954e-05 *begin_x + -0.0383035 *lens_ipow(begin_dy, 2) + 69.0211 *begin_dx*begin_dy + 1.86141 *begin_y*begin_dx + 1.32601 *begin_x*begin_dy + 0.0232315 *begin_x*begin_y + 6.49099e-07 *lens_ipow(begin_x, 2)*begin_y + -0.000211522 *begin_x*lens_ipow(begin_y, 2)*begin_dy + 10.5634 *begin_y*begin_dx*lens_ipow(begin_dy, 4) + -17.6915 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 4.45315e-07 *lens_ipow(begin_y, 5)*begin_dx + 5.35405e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx + 1.62024e-05 *lens_ipow(begin_x, 4)*begin_dx*begin_dy + -3.82933e-06 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 3) + -9058.47 *lens_ipow(begin_dx, 7)*begin_dy + -37.6512 *begin_y*lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 3) + 0.000724432 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 4)*begin_lambda+0.0f;
  dx1_domega0[1][1] =  + 81.1717  + 0.00634395 *begin_dx + 103.216 *lens_ipow(begin_dy, 2) + -0.076607 *begin_dx*begin_dy + 34.5105 *lens_ipow(begin_dx, 2) + 4.53323 *begin_y*begin_dy + 0.0325465 *lens_ipow(begin_y, 2) + 1.32601 *begin_x*begin_dx + 2.31934e-05 *begin_x*begin_y + 0.00908557 *lens_ipow(begin_x, 2) + 3.35285 *lens_ipow(begin_lambda, 3) + -0.000211522 *begin_x*lens_ipow(begin_y, 2)*begin_dx + 21.1268 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -8.84573 *begin_y*lens_ipow(begin_dx, 4)*begin_dy + 0.482703 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 4) + -0.0452031 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4) + -1.38759e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4) + 8.10121e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2) + -1132.31 *lens_ipow(begin_dx, 8) + -7.82412e-12 *lens_ipow(begin_y, 8) + 0.00289773 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + -17.916 *lens_ipow(begin_lambda, 10) + -175842 *lens_ipow(begin_dy, 10)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
