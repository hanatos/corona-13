const float out_x =  + -4.3734e-05  + 0.000913257 *dy + 99.674 *dx + 0.777701 *x + 0.00142485 *lens_ipow(dy, 2) + 0.00644577 *dx*dy + -1.58164e-06 *x*y + -38.4022 *dx*lens_ipow(dy, 2) + -0.0268357 *lens_ipow(dx, 2)*dy + -38.7379 *lens_ipow(dx, 3) + 0.358522 *y*dx*dy + 0.007379 *lens_ipow(y, 2)*dx + 1.24838 *x*lens_ipow(dy, 2) + 1.65238 *x*lens_ipow(dx, 2) + 0.0326702 *x*y*dy + 0.000183725 *x*lens_ipow(y, 2) + 0.0404087 *lens_ipow(x, 2)*dx + 0.000185731 *lens_ipow(x, 3) + 0.0212366 *x*lens_ipow(lambda, 3) + -0.844688 *x*lens_ipow(dx, 4) + -1.87668e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 0.00016615 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 2.04551 *dx*lens_ipow(lambda, 5) + 147.939 *dx*lens_ipow(dy, 6) + 963.714 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + -0.0590368 *lens_ipow(y, 2)*lens_ipow(dx, 5) + -2.08267 *x*lens_ipow(dy, 6) + -15.76 *x*lens_ipow(dx, 2)*lens_ipow(dy, 4) + 4.70607e-07 *x*lens_ipow(y, 4)*lens_ipow(dy, 2) + 6.4371e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2) + 740.875 *lens_ipow(dx, 9) + -3.07122e-06 *lens_ipow(y, 5)*lens_ipow(dx, 3)*dy + 1.63844e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -2.67744e-13 *lens_ipow(x, 3)*lens_ipow(y, 6) + 4.32181e-08 *lens_ipow(x, 6)*dx*lens_ipow(dy, 2) + -2.42609e-13 *lens_ipow(x, 7)*lens_ipow(y, 2) + -8.38332 *dx*lens_ipow(lambda, 10) + -0.0012614 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 8) + -0.116906 *x*lens_ipow(lambda, 10) + -2.87467e-16 *lens_ipow(x, 11);
const float out_y =  + 0.000247496  + 99.6816 *dy + -0.000309823 *dx + 0.777758 *y + 2.57782e-05 *y*dx + -7.76354e-07 *lens_ipow(y, 2) + -1.80741e-06 *lens_ipow(x, 2) + -38.9979 *lens_ipow(dy, 3) + -38.891 *lens_ipow(dx, 2)*dy + 1.6401 *y*lens_ipow(dy, 2) + 1.25641 *y*lens_ipow(dx, 2) + 0.0402298 *lens_ipow(y, 2)*dy + 0.000184741 *lens_ipow(y, 3) + 0.353407 *x*dx*dy + 4.92663e-06 *x*y*dy + 0.0326194 *x*y*dx + 0.00734699 *lens_ipow(x, 2)*dy + 0.000184034 *lens_ipow(x, 2)*y + 0.0212254 *y*lens_ipow(lambda, 3) + 4.84043e-05 *x*y*dx*dy + -0.853223 *y*lens_ipow(dy, 4) + -0.347 *y*lens_ipow(dx, 4) + 0.000162976 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -1.48278e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 2.03923 *dy*lens_ipow(lambda, 5) + 828.53 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 831.957 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 169.86 *lens_ipow(dx, 6)*dy + 2.40401e-05 *lens_ipow(y, 4)*lens_ipow(dx, 2)*dy + 6.89224e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -0.043685 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 4.94988e-07 *lens_ipow(x, 4)*y*lens_ipow(dx, 2) + 715.14 *lens_ipow(dy, 9) + 1.17863e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -3.80411e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -9.25163e-14 *lens_ipow(x, 8)*y + -2.00399e-05 *lens_ipow(x, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -8.48108 *dy*lens_ipow(lambda, 10) + -0.116818 *y*lens_ipow(lambda, 10) + -3.81547e-16 *lens_ipow(y, 11);
const float out_dx =  + 1.96839e-06  + -2.33035 *dx + -8.75109e-08 *y + -0.0282281 *x + -0.000158287 *lens_ipow(dx, 2) + 9.80636e-07 *y*dx + -5.21176 *dx*lens_ipow(dy, 2) + 1.33516 *lens_ipow(dx, 3) + -0.108452 *y*dx*dy + -0.000472038 *lens_ipow(y, 2)*dx + -0.0779454 *x*lens_ipow(dy, 2) + 1.61069e-05 *x*dx*dy + 0.0032579 *x*lens_ipow(dx, 2) + -0.00152978 *x*y*dy + -5.93393e-06 *x*lens_ipow(y, 2) + -0.000220932 *lens_ipow(x, 2)*dx + -4.90159e-07 *lens_ipow(x, 3) + -0.000275923 *x*lens_ipow(lambda, 3) + -0.000379902 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.000239842 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -0.00101174 *x*y*lens_ipow(dx, 2)*dy + -4.00675e-06 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -0.0104882 *dx*lens_ipow(lambda, 5) + 1.73747e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lambda + 102.043 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + 0.102421 *x*lens_ipow(dy, 6) + 1.18302 *x*lens_ipow(dx, 2)*lens_ipow(dy, 4) + 2.01361e-10 *x*lens_ipow(y, 5)*dy + 2.23772e-12 *lens_ipow(x, 5)*lens_ipow(y, 2) + 73.9146 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + -15.2938 *lens_ipow(dx, 9) + -3.32875e-05 *lens_ipow(y, 4)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 2.57361e-13 *lens_ipow(y, 8)*dx + -1.5466e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*dy + 920.459 *dx*lens_ipow(dy, 10) + 0.00102416 *x*lens_ipow(lambda, 10) + 0.000121597 *x*lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(lambda, 4) + 1.86025e-09 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 6) + 3.45959e-17 *lens_ipow(x, 3)*lens_ipow(y, 8) + -3.47938e-08 *lens_ipow(x, 6)*lens_ipow(dx, 3)*lens_ipow(dy, 2);
const float out_dy =  + 3.77579e-07  + -2.3321 *dy + -6.09807e-05 *dx + -0.0282547 *y + 6.20986e-06 *x*dy + 1.43165 *lens_ipow(dy, 3) + 0.00156151 *dx*lens_ipow(dy, 2) + 7.94185 *lens_ipow(dx, 2)*dy + 0.00744527 *y*lens_ipow(dy, 2) + 0.0296331 *y*lens_ipow(dx, 2) + -0.00017345 *lens_ipow(y, 2)*dy + -3.54905e-07 *lens_ipow(y, 3) + 0.165549 *x*dx*dy + -1.84392e-05 *x*lens_ipow(dx, 2) + 0.000700324 *x*y*dx + 0.000876019 *lens_ipow(x, 2)*dy + 5.02525e-06 *lens_ipow(x, 2)*y + -0.00025461 *y*lens_ipow(lambda, 3) + 2.24032e-06 *x*y*lens_ipow(dy, 2) + -0.759168 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -2.857 *lens_ipow(dx, 4)*dy + 0.000359646 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.00192164 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -7.85463e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -0.0118652 *dy*lens_ipow(lambda, 6) + 5.52449e-07 *lens_ipow(y, 4)*lens_ipow(dx, 2)*dy + -1.48333e-05 *x*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 2) + -4.68177e-13 *lens_ipow(x, 2)*lens_ipow(y, 5) + -1.50374e-10 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx + 6.80119e-08 *lens_ipow(x, 5)*dx*dy + -208.018 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + -103.241 *lens_ipow(dx, 8)*dy + 2.6208 *x*dx*lens_ipow(dy, 7) + -2.30275 *lens_ipow(dx, 4)*dy*lens_ipow(lambda, 5) + 0.000285418 *lens_ipow(x, 3)*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + 1.38755e-12 *lens_ipow(x, 8)*dy*lambda + 0.00102108 *y*lens_ipow(lambda, 10) + -2.4488e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 5)*dy + 7.4208e-05 *lens_ipow(x, 4)*lens_ipow(dy, 7) + 4.30401e-08 *lens_ipow(x, 6)*lens_ipow(dx, 4)*dy;
const float out_transmittance =  + 0.602896  + 0.202024 *lambda + 1.55248e-07 *y + -3.70904e-07 *x + -0.116432 *lens_ipow(dy, 2) + -0.11263 *lens_ipow(dx, 2) + -0.00238893 *y*dy + 6.65819e-06 *y*dx + -1.40591e-05 *lens_ipow(y, 2) + -0.00219436 *x*dx + 1.38397e-07 *x*y + -1.44828e-05 *lens_ipow(x, 2) + -0.169325 *lens_ipow(lambda, 3) + 0.000968332 *lens_ipow(dy, 3) + -0.00152288 *lens_ipow(dx, 2)*dy + 4.61712e-09 *lens_ipow(x, 2)*y + -0.713474 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 7.69817e-05 *x*lens_ipow(dy, 3) + -1.64167e-06 *x*lens_ipow(y, 2)*dx + -2.09592e-06 *lens_ipow(x, 2)*y*dy + -2.96927e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -2.67743e-06 *lens_ipow(x, 3)*dx + 1.07539e-06 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + 1.67348e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lambda + -4.9641 *lens_ipow(dy, 6) + -8.67766 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -4.87213 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -5.70494 *lens_ipow(dx, 6) + -1.38576e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + 2.97666e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -2.34521e-11 *lens_ipow(y, 6) + -4.1157e-06 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + -1.68051e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -2.27099e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -3.96026e-11 *lens_ipow(x, 6) + -1.23355e-06 *lens_ipow(y, 4)*lens_ipow(dx, 4) + -0.00306952 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 6) + 2.71831e-05 *lens_ipow(x, 4)*lens_ipow(dx, 6) + 0.306803 *lens_ipow(lambda, 11) + 0.117111 *x*y*lens_ipow(dx, 7)*dy*lambda;
