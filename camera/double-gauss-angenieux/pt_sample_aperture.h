float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + 0.000133157  + 28.4765 *begin_dx + 3.05366e-05 *begin_y + 0.224951 *begin_x + -15.2543 *begin_dx*lens_ipow(begin_dy, 2) + -14.761 *lens_ipow(begin_dx, 3) + -0.0193266 *begin_y*begin_dx*begin_dy + 0.00177015 *lens_ipow(begin_y, 2)*begin_dx + -0.144064 *begin_x*lens_ipow(begin_dy, 2) + -0.169814 *begin_x*lens_ipow(begin_dx, 2) + 0.000691894 *begin_x*begin_y*begin_dy + -0.000323112 *begin_x*lens_ipow(begin_y, 2) + 0.00197425 *lens_ipow(begin_x, 2)*begin_dx + -0.000442341 *lens_ipow(begin_x, 3) + 0.142358 *begin_x*lens_ipow(begin_lambda, 3) + 5.00587 *begin_dx*lens_ipow(begin_lambda, 4) + 0.0136947 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + -0.013911 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -2.03405e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -7.21627e-07 *begin_x*lens_ipow(begin_y, 4) + -0.0228744 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + -0.000604129 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + -1.09384e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + 18.3921 *begin_dx*lens_ipow(begin_dy, 6) + 26.916 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + -0.825887 *begin_y*lens_ipow(begin_dx, 5)*begin_dy + 0.626383 *begin_x*lens_ipow(begin_dy, 6) + 9.92971e-05 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + -7.31161e-05 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dy, 3) + 0.000179574 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dx, 2)*begin_dy + 2.40165e-08 *lens_ipow(begin_x, 6)*begin_dx + -1.81122e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -3.59711e-12 *lens_ipow(begin_x, 9) + 2.9326e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 5) + 7.15742e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_lambda, 5) + -24.5286 *begin_dx*lens_ipow(begin_lambda, 10) + 0.416594 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 9) + -0.90552 *begin_x*lens_ipow(begin_lambda, 10) + -9.80561e-11 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -6.90882e-14 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 4);
  pred_y =  + -0.000167619  + 28.51 *begin_dy + 0.218098 *begin_y + -15.1993 *lens_ipow(begin_dy, 3) + -14.9868 *lens_ipow(begin_dx, 2)*begin_dy + -0.132441 *begin_y*lens_ipow(begin_dy, 2) + -0.11828 *begin_y*lens_ipow(begin_dx, 2) + 0.0019477 *lens_ipow(begin_y, 2)*begin_dy + -0.000285856 *lens_ipow(begin_y, 3) + -0.0318128 *begin_x*begin_dx*begin_dy + 0.00030524 *begin_x*begin_y*begin_dx + 0.00138375 *lens_ipow(begin_x, 2)*begin_dy + -0.000282321 *lens_ipow(begin_x, 2)*begin_y + 0.138184 *begin_y*lens_ipow(begin_lambda, 3) + 4.95146 *begin_dy*lens_ipow(begin_lambda, 4) + -0.0123286 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.000484739 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -7.28222e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -7.69732e-07 *lens_ipow(begin_y, 5) + 0.0277696 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -0.00759787 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + 0.010138 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.000136451 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 2) + -0.00039658 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2) + -1.45812e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + -7.63511e-07 *lens_ipow(begin_x, 4)*begin_y + 2.29255 *begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -0.0554697 *begin_x*begin_y*lens_ipow(begin_dx, 5) + -3.57545e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 34.5878 *lens_ipow(begin_dy, 9) + 473.179 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 5) + 5.80023e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_lambda, 4) + -8.14549e-08 *lens_ipow(begin_y, 6)*lens_ipow(begin_dx, 2)*begin_dy + 8.97577e-07 *begin_x*lens_ipow(begin_y, 5)*begin_dx*lens_ipow(begin_dy, 2) + 2.90359e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 5) + -24.1952 *begin_dy*lens_ipow(begin_lambda, 10) + -0.868843 *begin_y*lens_ipow(begin_lambda, 10) + -9.02247e-12 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 7)*lens_ipow(begin_dx, 2) + 8.33497e-13 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 8)*begin_dy + -4.64228e-14 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 7);
  pred_dx =  + -2.5973e-06  + 0.398331 *begin_dx + -0.0317262 *begin_x + -0.498095 *begin_dx*lens_ipow(begin_dy, 2) + -0.489773 *lens_ipow(begin_dx, 3) + -0.0201563 *begin_y*begin_dx*begin_dy + -2.33164e-05 *lens_ipow(begin_y, 2)*begin_dx + -0.0108622 *begin_x*lens_ipow(begin_dy, 2) + -0.0313598 *begin_x*lens_ipow(begin_dx, 2) + 0.000269457 *begin_x*begin_y*begin_dy + 3.19298e-06 *begin_x*begin_y*begin_dx + -2.94324e-05 *begin_x*lens_ipow(begin_y, 2) + 0.000292095 *lens_ipow(begin_x, 2)*begin_dx + -2.85278e-05 *lens_ipow(begin_x, 3) + 0.00776112 *begin_x*lens_ipow(begin_lambda, 3) + -0.0639609 *begin_y*lens_ipow(begin_dx, 5)*begin_dy + -0.000245652 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 3) + -0.00175831 *begin_x*begin_y*lens_ipow(begin_dy, 5) + 1.19995e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dx + 2.1467e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 4) + -3.31283e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 4.74377e-09 *lens_ipow(begin_x, 5)*begin_y*begin_dy + 1.24161e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 3) + 5.34328e-12 *lens_ipow(begin_y, 8)*begin_dx + 4.36318e-08 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_lambda, 4) + -9.31642e-07 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 4) + 2.99453e-11 *begin_x*lens_ipow(begin_y, 7)*begin_dy + 1.95871e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + 5.74784e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 4.99964e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_lambda, 4) + -4.30675e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -2.16997e-12 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4) + -3.11508e-10 *lens_ipow(begin_x, 7)*lens_ipow(begin_dy, 2) + 1.97621e-11 *lens_ipow(begin_x, 8)*begin_dx + -1.66835e-13 *lens_ipow(begin_x, 9) + -1.25695e-06 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_lambda, 5) + -0.0538191 *begin_x*lens_ipow(begin_lambda, 10) + -3.04123e-15 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 8) + 2.12628e-07 *lens_ipow(begin_x, 6)*lens_ipow(begin_dx, 5) + -2.41786e-15 *lens_ipow(begin_x, 9)*lens_ipow(begin_y, 2);
  pred_dy =  + 0.400049 *begin_dy + -0.0318898 *begin_y + -0.511767 *lens_ipow(begin_dy, 3) + -0.507283 *lens_ipow(begin_dx, 2)*begin_dy + -0.0308361 *begin_y*lens_ipow(begin_dy, 2) + -0.0111372 *begin_y*lens_ipow(begin_dx, 2) + 0.000281705 *lens_ipow(begin_y, 2)*begin_dy + -2.68682e-05 *lens_ipow(begin_y, 3) + -0.019758 *begin_x*begin_dx*begin_dy + 0.000239951 *begin_x*begin_y*begin_dx + 2.13647e-07 *lens_ipow(begin_x, 2)*begin_dy + -2.47889e-05 *lens_ipow(begin_x, 2)*begin_y + 0.00769775 *begin_y*lens_ipow(begin_lambda, 3) + 0.0014548 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 1.94747 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5) + 0.0825935 *begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -1.0073e-07 *begin_x*lens_ipow(begin_y, 4)*begin_dx*begin_dy + -0.000120199 *lens_ipow(begin_x, 2)*begin_dy*lens_ipow(begin_lambda, 4) + 0.00505397 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 4)*begin_dy + -7.61297e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -4.46652e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + 1.34304e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx + -1.90849e-07 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dx, 2) + 1.07419e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dy + -1.09468e-07 *lens_ipow(begin_x, 5)*begin_dx*begin_dy + -1.23958e-10 *lens_ipow(begin_x, 6)*begin_y + 1.66098e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 3) + 0.0597839 *begin_y*lens_ipow(begin_dx, 8) + -3.85453e-10 *lens_ipow(begin_y, 7)*lens_ipow(begin_dx, 2) + 2.18357e-11 *lens_ipow(begin_y, 8)*begin_dy + -1.86349e-13 *lens_ipow(begin_y, 9) + 5.7546e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2)*begin_dy + 6.69326e-09 *lens_ipow(begin_x, 6)*lens_ipow(begin_dy, 3) + -1.32826e-06 *lens_ipow(begin_y, 4)*begin_dy*lens_ipow(begin_lambda, 5) + 4.21838 *lens_ipow(begin_dy, 11) + -0.0510612 *begin_y*lens_ipow(begin_lambda, 10) + 2.49851e-07 *lens_ipow(begin_y, 6)*lens_ipow(begin_dy, 5) + 1.77233e-10 *lens_ipow(begin_y, 7)*lens_ipow(begin_lambda, 4) + 3.12848e-14 *begin_x*lens_ipow(begin_y, 9)*begin_dx + -5.34675e-15 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 5);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 28.4765  + -15.2543 *lens_ipow(begin_dy, 2) + -44.2829 *lens_ipow(begin_dx, 2) + -0.0193266 *begin_y*begin_dy + 0.00177015 *lens_ipow(begin_y, 2) + -0.339628 *begin_x*begin_dx + 0.00197425 *lens_ipow(begin_x, 2) + 5.00587 *lens_ipow(begin_lambda, 4) + 0.0136947 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -0.041733 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -4.0681e-05 *begin_x*lens_ipow(begin_y, 2)*begin_dx + -0.0228744 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + -0.000604129 *lens_ipow(begin_x, 2)*begin_y*begin_dy + 18.3921 *lens_ipow(begin_dy, 6) + 134.58 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -4.12944 *begin_y*lens_ipow(begin_dx, 4)*begin_dy + 0.000198594 *begin_x*lens_ipow(begin_y, 3)*begin_dx*begin_dy + 0.000359148 *lens_ipow(begin_x, 3)*begin_y*begin_dx*begin_dy + 2.40165e-08 *lens_ipow(begin_x, 6) + -3.62244e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*begin_dx + -24.5286 *lens_ipow(begin_lambda, 10) + 3.74934 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 8)+0.0f;
  dx1_domega0[0][1] =  + -30.5087 *begin_dx*begin_dy + -0.0193266 *begin_y*begin_dx + -0.288129 *begin_x*begin_dy + 0.000691894 *begin_x*begin_y + 0.0273893 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + -0.0457488 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -0.000604129 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 110.353 *begin_dx*lens_ipow(begin_dy, 5) + 53.832 *lens_ipow(begin_dx, 5)*begin_dy + -0.825887 *begin_y*lens_ipow(begin_dx, 5) + 3.7583 *begin_x*lens_ipow(begin_dy, 5) + 9.92971e-05 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -0.000219348 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dy, 2) + 0.000179574 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dx, 2) + -1.96112e-10 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2)*begin_dy+0.0f;
  dx1_domega0[1][0] =  + -29.9736 *begin_dx*begin_dy + -0.236561 *begin_y*begin_dx + -0.0318128 *begin_x*begin_dy + 0.00030524 *begin_x*begin_y + -0.0246573 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + -0.000145644 *lens_ipow(begin_y, 3)*begin_dx + 0.0277696 *begin_x*begin_y*lens_ipow(begin_dy, 2) + 0.0202759 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -0.00079316 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 9.17021 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -0.277349 *begin_x*begin_y*lens_ipow(begin_dx, 4) + -3.57545e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dy + 1892.72 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + -1.6291e-07 *lens_ipow(begin_y, 6)*begin_dx*begin_dy + 8.97577e-07 *begin_x*lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -1.80449e-11 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 7)*begin_dx+0.0f;
  dx1_domega0[1][1] =  + 28.51  + -45.5979 *lens_ipow(begin_dy, 2) + -14.9868 *lens_ipow(begin_dx, 2) + -0.264882 *begin_y*begin_dy + 0.0019477 *lens_ipow(begin_y, 2) + -0.0318128 *begin_x*begin_dx + 0.00138375 *lens_ipow(begin_x, 2) + 4.95146 *lens_ipow(begin_lambda, 4) + -0.0123286 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.000969477 *lens_ipow(begin_y, 3)*begin_dy + 0.0555393 *begin_x*begin_y*begin_dx*begin_dy + -0.0227936 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + 0.010138 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + -0.000272901 *lens_ipow(begin_x, 2)*begin_y*begin_dy + 4.5851 *begin_y*lens_ipow(begin_dx, 4)*begin_dy + -3.57545e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx + 311.29 *lens_ipow(begin_dy, 8) + 2365.9 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 4) + -8.14549e-08 *lens_ipow(begin_y, 6)*lens_ipow(begin_dx, 2) + 1.79515e-06 *begin_x*lens_ipow(begin_y, 5)*begin_dx*begin_dy + -24.1952 *lens_ipow(begin_lambda, 10) + 8.33497e-13 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 8)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
