const float out_x =  + 0.000133157  + 28.4765 *dx + 3.05366e-05 *y + 0.224951 *x + -15.2543 *dx*lens_ipow(dy, 2) + -14.761 *lens_ipow(dx, 3) + -0.0193266 *y*dx*dy + 0.00177015 *lens_ipow(y, 2)*dx + -0.144064 *x*lens_ipow(dy, 2) + -0.169814 *x*lens_ipow(dx, 2) + 0.000691894 *x*y*dy + -0.000323112 *x*lens_ipow(y, 2) + 0.00197425 *lens_ipow(x, 2)*dx + -0.000442341 *lens_ipow(x, 3) + 0.142358 *x*lens_ipow(lambda, 3) + 5.00587 *dx*lens_ipow(lambda, 4) + 0.0136947 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -0.013911 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -2.03405e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -7.21627e-07 *x*lens_ipow(y, 4) + -0.0228744 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.000604129 *lens_ipow(x, 2)*y*dx*dy + -1.09384e-06 *lens_ipow(x, 3)*lens_ipow(y, 2) + 18.3921 *dx*lens_ipow(dy, 6) + 26.916 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + -0.825887 *y*lens_ipow(dx, 5)*dy + 0.626383 *x*lens_ipow(dy, 6) + 9.92971e-05 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -7.31161e-05 *lens_ipow(x, 3)*y*lens_ipow(dy, 3) + 0.000179574 *lens_ipow(x, 3)*y*lens_ipow(dx, 2)*dy + 2.40165e-08 *lens_ipow(x, 6)*dx + -1.81122e-08 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -3.59711e-12 *lens_ipow(x, 9) + 2.9326e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 5) + 7.15742e-07 *lens_ipow(x, 5)*lens_ipow(lambda, 5) + -24.5286 *dx*lens_ipow(lambda, 10) + 0.416594 *lens_ipow(y, 2)*lens_ipow(dx, 9) + -0.90552 *x*lens_ipow(lambda, 10) + -9.80561e-11 *lens_ipow(x, 7)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -6.90882e-14 *lens_ipow(x, 7)*lens_ipow(y, 4);
const float out_y =  + -0.000167619  + 28.51 *dy + 0.218098 *y + -15.1993 *lens_ipow(dy, 3) + -14.9868 *lens_ipow(dx, 2)*dy + -0.132441 *y*lens_ipow(dy, 2) + -0.11828 *y*lens_ipow(dx, 2) + 0.0019477 *lens_ipow(y, 2)*dy + -0.000285856 *lens_ipow(y, 3) + -0.0318128 *x*dx*dy + 0.00030524 *x*y*dx + 0.00138375 *lens_ipow(x, 2)*dy + -0.000282321 *lens_ipow(x, 2)*y + 0.138184 *y*lens_ipow(lambda, 3) + 4.95146 *dy*lens_ipow(lambda, 4) + -0.0123286 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.000484739 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -7.28222e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -7.69732e-07 *lens_ipow(y, 5) + 0.0277696 *x*y*dx*lens_ipow(dy, 2) + -0.00759787 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.010138 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -0.000136451 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -0.00039658 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + -1.45812e-06 *lens_ipow(x, 2)*lens_ipow(y, 3) + -7.63511e-07 *lens_ipow(x, 4)*y + 2.29255 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -0.0554697 *x*y*lens_ipow(dx, 5) + -3.57545e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy + 34.5878 *lens_ipow(dy, 9) + 473.179 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + 5.80023e-07 *lens_ipow(y, 5)*lens_ipow(lambda, 4) + -8.14549e-08 *lens_ipow(y, 6)*lens_ipow(dx, 2)*dy + 8.97577e-07 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 2) + 2.90359e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 5) + -24.1952 *dy*lens_ipow(lambda, 10) + -0.868843 *y*lens_ipow(lambda, 10) + -9.02247e-12 *lens_ipow(x, 2)*lens_ipow(y, 7)*lens_ipow(dx, 2) + 8.33497e-13 *lens_ipow(x, 2)*lens_ipow(y, 8)*dy + -4.64228e-14 *lens_ipow(x, 4)*lens_ipow(y, 7);
const float out_dx =  + -2.5973e-06  + 0.398331 *dx + -0.0317262 *x + -0.498095 *dx*lens_ipow(dy, 2) + -0.489773 *lens_ipow(dx, 3) + -0.0201563 *y*dx*dy + -2.33164e-05 *lens_ipow(y, 2)*dx + -0.0108622 *x*lens_ipow(dy, 2) + -0.0313598 *x*lens_ipow(dx, 2) + 0.000269457 *x*y*dy + 3.19298e-06 *x*y*dx + -2.94324e-05 *x*lens_ipow(y, 2) + 0.000292095 *lens_ipow(x, 2)*dx + -2.85278e-05 *lens_ipow(x, 3) + 0.00776112 *x*lens_ipow(lambda, 3) + -0.0639609 *y*lens_ipow(dx, 5)*dy + -0.000245652 *lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + -0.00175831 *x*y*lens_ipow(dy, 5) + 1.19995e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx + 2.1467e-05 *lens_ipow(x, 3)*lens_ipow(dy, 4) + -3.31283e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 4.74377e-09 *lens_ipow(x, 5)*y*dy + 1.24161e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 3) + 5.34328e-12 *lens_ipow(y, 8)*dx + 4.36318e-08 *x*lens_ipow(y, 4)*lens_ipow(lambda, 4) + -9.31642e-07 *x*lens_ipow(y, 4)*lens_ipow(dx, 4) + 2.99453e-11 *x*lens_ipow(y, 7)*dy + 1.95871e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + 5.74784e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 4.99964e-08 *lens_ipow(x, 5)*lens_ipow(lambda, 4) + -4.30675e-09 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -2.16997e-12 *lens_ipow(x, 5)*lens_ipow(y, 4) + -3.11508e-10 *lens_ipow(x, 7)*lens_ipow(dy, 2) + 1.97621e-11 *lens_ipow(x, 8)*dx + -1.66835e-13 *lens_ipow(x, 9) + -1.25695e-06 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 5) + -0.0538191 *x*lens_ipow(lambda, 10) + -3.04123e-15 *lens_ipow(x, 3)*lens_ipow(y, 8) + 2.12628e-07 *lens_ipow(x, 6)*lens_ipow(dx, 5) + -2.41786e-15 *lens_ipow(x, 9)*lens_ipow(y, 2);
const float out_dy =  + 0.400049 *dy + -0.0318898 *y + -0.511767 *lens_ipow(dy, 3) + -0.507283 *lens_ipow(dx, 2)*dy + -0.0308361 *y*lens_ipow(dy, 2) + -0.0111372 *y*lens_ipow(dx, 2) + 0.000281705 *lens_ipow(y, 2)*dy + -2.68682e-05 *lens_ipow(y, 3) + -0.019758 *x*dx*dy + 0.000239951 *x*y*dx + 2.13647e-07 *lens_ipow(x, 2)*dy + -2.47889e-05 *lens_ipow(x, 2)*y + 0.00769775 *y*lens_ipow(lambda, 3) + 0.0014548 *x*y*dx*lens_ipow(dy, 2) + 1.94747 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 0.0825935 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -1.0073e-07 *x*lens_ipow(y, 4)*dx*dy + -0.000120199 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 4) + 0.00505397 *lens_ipow(x, 2)*lens_ipow(dx, 4)*dy + -7.61297e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2) + -4.46652e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + 1.34304e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx + -1.90849e-07 *lens_ipow(x, 4)*y*lens_ipow(dx, 2) + 1.07419e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy + -1.09468e-07 *lens_ipow(x, 5)*dx*dy + -1.23958e-10 *lens_ipow(x, 6)*y + 1.66098e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(lambda, 3) + 0.0597839 *y*lens_ipow(dx, 8) + -3.85453e-10 *lens_ipow(y, 7)*lens_ipow(dx, 2) + 2.18357e-11 *lens_ipow(y, 8)*dy + -1.86349e-13 *lens_ipow(y, 9) + 5.7546e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dx, 2)*dy + 6.69326e-09 *lens_ipow(x, 6)*lens_ipow(dy, 3) + -1.32826e-06 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 5) + 4.21838 *lens_ipow(dy, 11) + -0.0510612 *y*lens_ipow(lambda, 10) + 2.49851e-07 *lens_ipow(y, 6)*lens_ipow(dy, 5) + 1.77233e-10 *lens_ipow(y, 7)*lens_ipow(lambda, 4) + 3.12848e-14 *x*lens_ipow(y, 9)*dx + -5.34675e-15 *lens_ipow(x, 6)*lens_ipow(y, 5);
const float out_transmittance =  + 0.587784  + 0.195828 *lambda + -5.09208e-06 *dx + -1.30378e-07 *x + -0.0191113 *lens_ipow(dy, 2) + -0.0193523 *lens_ipow(dx, 2) + -0.000255053 *y*dy + -3.96184e-06 *lens_ipow(y, 2) + -0.000257752 *x*dx + -3.92825e-06 *lens_ipow(x, 2) + -0.163523 *lens_ipow(lambda, 3) + 0.00389056 *y*lens_ipow(dy, 3) + 0.00373562 *y*lens_ipow(dx, 2)*dy + 0.00357254 *x*dx*lens_ipow(dy, 2) + 0.00399831 *x*lens_ipow(dx, 3) + -6.29131e-05 *x*y*dx*dy + -0.542342 *lens_ipow(dy, 6) + -1.68306 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -1.712 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -0.547598 *lens_ipow(dx, 6) + 2.58999e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -1.81165e-10 *lens_ipow(y, 6) + 2.49687e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + 2.55405e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 3) + -6.36402e-10 *lens_ipow(x, 2)*lens_ipow(y, 4) + 2.74846e-05 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + -6.33565e-10 *lens_ipow(x, 4)*lens_ipow(y, 2) + -1.80619e-10 *lens_ipow(x, 6) + -0.0705869 *lens_ipow(dy, 4)*lens_ipow(lambda, 3) + -0.0873266 *lens_ipow(dx, 4)*lens_ipow(lambda, 4) + -4.82077e-06 *lens_ipow(y, 4)*lens_ipow(dy, 4) + -1.01067e-06 *lens_ipow(y, 4)*lens_ipow(dx, 4) + 2.8802e-06 *x*lens_ipow(y, 3)*lens_ipow(dx, 3)*dy + 1.95829e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 4) + -9.8964e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.02588e-06 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 3) + -9.70296e-07 *lens_ipow(x, 4)*lens_ipow(dy, 4) + -4.75231e-06 *lens_ipow(x, 4)*lens_ipow(dx, 4) + -0.191959 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 0.29994 *lens_ipow(lambda, 11);
