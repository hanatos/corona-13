const float out_x =  + -3.01226e-05  + 38.4416 *dx + -2.02691e-06 *y + 0.791503 *x + 7.25389e-07 *lens_ipow(y, 2) + 4.75406e-05 *x*dy + -5.8981e-05 *x*dx + 1.35813 *dx*lens_ipow(dy, 2) + 1.28664 *lens_ipow(dx, 3) + 0.563583 *y*dx*dy + 0.0113888 *lens_ipow(y, 2)*dx + 0.13711 *x*lens_ipow(dy, 2) + 0.719175 *x*lens_ipow(dx, 2) + 0.015894 *x*y*dy + 0.000217427 *x*lens_ipow(y, 2) + 0.0281401 *lens_ipow(x, 2)*dx + 0.000224055 *lens_ipow(x, 3) + 0.275952 *dx*lens_ipow(lambda, 3) + 0.000681354 *x*y*dy*lambda + -4.52221e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.000594231 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2) + 0.00336257 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 7.61974e-06 *lens_ipow(x, 3)*y*dy + 0.000122382 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + 0.000243215 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lambda + 2.57239e-09 *lens_ipow(y, 6)*dx + 2.08992e-05 *x*lens_ipow(y, 3)*lens_ipow(dy, 3) + -0.00231977 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + 0.0443817 *x*lens_ipow(dy, 4)*lens_ipow(lambda, 3) + -0.0506243 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 4.32588e-06 *x*lens_ipow(y, 2)*lens_ipow(lambda, 5) + -221.036 *dx*lens_ipow(dy, 8) + -1772.59 *lens_ipow(dx, 5)*lens_ipow(dy, 4) + -1.46492e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + 0.009873 *lens_ipow(x, 3)*lens_ipow(dy, 6) + -5.72314e-13 *lens_ipow(x, 9) + -1.57966 *dx*lens_ipow(lambda, 10) + -387.177 *lens_ipow(dx, 9)*lens_ipow(lambda, 2) + -5142.91 *lens_ipow(dx, 9)*lens_ipow(dy, 2) + -1.58352e-14 *lens_ipow(x, 7)*lens_ipow(y, 4);
const float out_y =  + 0.000132619  + 38.544 *dy + 2.44934e-05 *dx + 0.795684 *y + 0.00699888 *dx*dy + -2.3014e-06 *lens_ipow(y, 2) + 0.243615 *dy*lens_ipow(lambda, 2) + -3.56032 *lens_ipow(dy, 3) + -0.0617397 *lens_ipow(dx, 2)*dy + 0.10059 *y*lens_ipow(dx, 2) + 0.000115116 *lens_ipow(y, 3) + 0.479762 *x*dx*dy + 0.0144367 *x*y*dx + 0.00972712 *lens_ipow(x, 2)*dy + 0.000167253 *lens_ipow(x, 2)*y + 0.0389313 *lens_ipow(y, 2)*dy*lambda + 0.00430198 *x*lens_ipow(dy, 3) + 1.54531 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.00250405 *x*y*dx*lens_ipow(lambda, 2) + 2.57694e-06 *lens_ipow(x, 4)*dy + 0.000498776 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)*lambda + -46.8044 *lens_ipow(dx, 6)*dy + -0.0351339 *y*lens_ipow(lambda, 6) + 0.000231869 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + -0.0161661 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 16.3266 *lens_ipow(dy, 5)*lens_ipow(lambda, 3) + 0.000552429 *lens_ipow(y, 3)*lens_ipow(lambda, 5) + 1.91314e-06 *lens_ipow(y, 5)*lens_ipow(dx, 2)*lambda + -247.046 *lens_ipow(dy, 9) + -341.308 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 2) + 7.62947e-08 *lens_ipow(y, 6)*lens_ipow(dy, 3) + -0.051547 *x*lens_ipow(y, 2)*lens_ipow(dx, 5)*dy + -2.74222e-07 *lens_ipow(x, 4)*y*lens_ipow(lambda, 5) + -7.5019 *dy*lens_ipow(lambda, 10) + 130.224 *lens_ipow(dy, 3)*lens_ipow(lambda, 8) + -26920.9 *lens_ipow(dx, 6)*lens_ipow(dy, 5) + -0.495454 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 8) + 0.000109065 *lens_ipow(y, 5)*lens_ipow(dx, 6) + 0.163349 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 7) + 0.566356 *lens_ipow(x, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 4);
const float out_dx =  + 2.17299e-07  + 0.580228 *dx + -1.99656e-07 *y + -0.0140496 *x + -3.49032e-06 *y*dx + -4.16322e-07 *x*dy + -0.173864 *dx*lens_ipow(dy, 2) + -0.177509 *lens_ipow(dx, 3) + 0.0180977 *y*dx*dy + 0.000472235 *lens_ipow(y, 2)*dx + 0.00724592 *x*lens_ipow(dy, 2) + 0.0257337 *x*lens_ipow(dx, 2) + 0.0010468 *x*y*dy + -2.56237e-07 *x*y*dx + 1.4782e-05 *x*lens_ipow(y, 2) + 0.00152664 *lens_ipow(x, 2)*dx + 1.47653e-05 *lens_ipow(x, 3) + 9.26828e-05 *y*dx*lens_ipow(dy, 2) + -0.00204189 *dx*lens_ipow(lambda, 4) + 0.00887733 *y*lens_ipow(dx, 3)*dy + 5.64304e-06 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -1.38056 *dx*lens_ipow(dy, 6) + 2.37229e-10 *lens_ipow(y, 6)*dx + 0.260473 *x*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -2.83022e-08 *x*lens_ipow(y, 4)*lens_ipow(dy, 2) + 1.04741e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 8.7731e-06 *lens_ipow(x, 3)*y*lens_ipow(dx, 2)*dy + 5.34555e-11 *lens_ipow(x, 3)*lens_ipow(y, 4) + 8.3369e-09 *lens_ipow(x, 6)*lens_ipow(dx, 3) + 1.16583e-13 *lens_ipow(x, 7)*lens_ipow(y, 2) + -0.768699 *dx*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -138.801 *lens_ipow(dx, 7)*lens_ipow(dy, 2)*lambda + -6.18985e-07 *lens_ipow(x, 4)*lens_ipow(dx, 5)*dy + -556.15 *lens_ipow(dx, 5)*lens_ipow(dy, 6) + -91.3807 *lens_ipow(dx, 11) + -0.00103177 *x*lens_ipow(y, 2)*lens_ipow(dx, 8) + 6.53247e-17 *x*lens_ipow(y, 10) + -3.54351e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 8.53423e-10 *lens_ipow(x, 7)*lens_ipow(dy, 4) + 1.40423e-16 *lens_ipow(x, 11);
const float out_dy =  + 6.28169e-07  + 0.580578 *dy + -1.2364e-06 *dx + -0.0140406 *y + 7.00313e-05 *lens_ipow(dy, 2) + -3.12399e-06 *y*dx + 1.54229e-06 *x*dy + -0.172966 *lens_ipow(dy, 3) + -0.18541 *lens_ipow(dx, 2)*dy + 0.0257839 *y*lens_ipow(dy, 2) + 0.00746742 *y*lens_ipow(dx, 2) + 0.00153604 *lens_ipow(y, 2)*dy + 1.48236e-05 *lens_ipow(y, 3) + 0.0180426 *x*dx*dy + 0.00105802 *x*y*dx + 0.000468916 *lens_ipow(x, 2)*dy + 1.49018e-05 *lens_ipow(x, 2)*y + -0.00360269 *dy*lens_ipow(lambda, 3) + -1.76718e-06 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 2.81384e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + 1.76825e-10 *lens_ipow(y, 5)*dx + -0.690429 *lens_ipow(dx, 6)*dy + -0.000108811 *y*lens_ipow(lambda, 6) + 8.84617e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 5.59904e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + 2.73014e-10 *lens_ipow(x, 5)*y*dx + -1.14705e-06 *lens_ipow(x, 2)*y*lens_ipow(lambda, 5) + -18.4303 *lens_ipow(dy, 9) + -90.88 *lens_ipow(dx, 2)*lens_ipow(dy, 7) + -80.068 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + 0.0215553 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -3.21723e-07 *lens_ipow(y, 5)*lens_ipow(dy, 4) + 4.57222e-07 *lens_ipow(y, 5)*lens_ipow(dx, 4) + 3.94534e-08 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 2) + 0.0138803 *lens_ipow(x, 2)*lens_ipow(dy, 7) + 1.65517e-13 *lens_ipow(x, 6)*lens_ipow(y, 3)*lambda + 2.50658e-13 *lens_ipow(y, 9)*lens_ipow(dx, 2) + 9.19035e-17 *lens_ipow(y, 11) + 6.41497e-16 *lens_ipow(x, 2)*lens_ipow(y, 9) + 1.37893e-09 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(dy, 4);
const float out_transmittance =  + 0.75515  + 9.45902e-05 *dx + 6.85637e-06 *y + -5.37446e-06 *x + -0.0194667 *lens_ipow(dy, 2) + 0.0297844 *lens_ipow(dx, 2) + 4.10312e-05 *y*dx + -0.000121696 *lens_ipow(y, 2) + -0.00190641 *x*dx + -0.000118316 *lens_ipow(x, 2) + 0.087472 *lens_ipow(lambda, 3) + -0.00304937 *y*dy*lambda + 2.79215e-06 *lens_ipow(y, 2)*dy + -2.09897 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.36654 *lens_ipow(dx, 4) + 0.00218948 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.000853028 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.000301539 *x*lens_ipow(dy, 3) + 0.0010938 *x*y*dx*dy + 0.00191962 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 0.00113618 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lambda + -3.97011e-08 *lens_ipow(x, 3)*y*dy + 0.22313 *y*lens_ipow(dy, 5) + -4.14754e-09 *lens_ipow(y, 6) + -1.02573e-08 *lens_ipow(x, 2)*lens_ipow(y, 4) + 1.41921e-05 *lens_ipow(x, 3)*y*dx*dy + -1.45445e-08 *lens_ipow(x, 4)*lens_ipow(y, 2) + -4.03346e-09 *lens_ipow(x, 6) + 9.57093e-06 *x*lens_ipow(y, 3)*dx*dy*lambda + -2.58613 *lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -378.32 *lens_ipow(dx, 2)*lens_ipow(dy, 6)*lens_ipow(lambda, 2) + -1.99741e-08 *lens_ipow(y, 5)*dx*lens_ipow(lambda, 4) + -0.0290985 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 6) + -0.0277181 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -5.81125e-14 *lens_ipow(x, 2)*lens_ipow(y, 8) + 0.000138874 *lens_ipow(x, 3)*y*lens_ipow(dx, 5)*dy + -0.000183522 *lens_ipow(x, 4)*lens_ipow(dy, 6) + 9.05036e-05 *lens_ipow(x, 4)*lens_ipow(dx, 6) + -0.631423 *lens_ipow(lambda, 11) + -5.5287e-06 *lens_ipow(y, 5)*lens_ipow(dy, 5)*lambda;
