const float dx00 =  + 0.547189  + 6.4343e-05 *dy + 0.524701 *lens_ipow(dy, 2) + 7.3438e-05 *dx*dy + 0.929944 *lens_ipow(dx, 2) + 0.0404555 *y*dy + 0.000523886 *lens_ipow(y, 2) + 0.112628 *x*dx + 0.00154317 *lens_ipow(x, 2) + -0.0150233 *lens_ipow(lambda, 3) + 2.49266e-06 *x*y*dy + 0.000247076 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -9.91195e-06 *x*lens_ipow(y, 3)*dx*dy + 0.000134652 *lens_ipow(x, 3)*lens_ipow(dx, 3) + 30.2553 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + -2.22483e-07 *lens_ipow(y, 4)*lens_ipow(lambda, 4) + 5.95422e-08 *lens_ipow(y, 5)*lens_ipow(dy, 3) + 1.66865e-09 *lens_ipow(x, 6)*y*dy + 1.56762e-08 *lens_ipow(y, 6)*lens_ipow(dx, 2)*lambda + 0.0543473 *lens_ipow(lambda, 10) + -0.00729431 *y*dy*lens_ipow(lambda, 8) + -0.0227152 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 6) + 0.0366259 *lens_ipow(x, 2)*dx*lens_ipow(dy, 7) + -0.135705 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 5.57249e-07 *lens_ipow(x, 6)*lens_ipow(dy, 4)+0.0f;
const float dx01 =  + 5.11027e-06 *y + 0.379325 *dx*dy + 0.0324067 *y*dx + 0.0404555 *x*dy + 0.00104777 *x*y + 1.24633e-06 *lens_ipow(x, 2)*dy + 0.408777 *dx*lens_ipow(dy, 3) + 0.378071 *lens_ipow(dx, 3)*dy + 0.0576896 *y*lens_ipow(dx, 5) + 5.78706e-08 *lens_ipow(y, 5)*dx + -1.48679e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + -8.89932e-07 *x*lens_ipow(y, 3)*lens_ipow(lambda, 4) + 2.97711e-07 *x*lens_ipow(y, 4)*lens_ipow(dy, 3) + 2.38379e-10 *lens_ipow(x, 7)*dy + 9.40569e-08 *x*lens_ipow(y, 5)*lens_ipow(dx, 2)*lambda + -0.00729431 *x*dy*lens_ipow(lambda, 8)+0.0f;
const float dx02 =  + 49.877  + -22.0241 *lens_ipow(dy, 2) + -66.0793 *lens_ipow(dx, 2) + 0.379325 *y*dy + 0.0162033 *lens_ipow(y, 2) + 7.3438e-05 *x*dy + 1.85989 *x*dx + 0.0563142 *lens_ipow(x, 2) + 0.408777 *y*lens_ipow(dy, 3) + 1.13421 *y*lens_ipow(dx, 2)*dy + 0.144224 *lens_ipow(y, 2)*lens_ipow(dx, 4) + 9.6451e-09 *lens_ipow(y, 6) + -4.95598e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + 0.000100989 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -3092.26 *lens_ipow(dx, 8) + 181.532 *x*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 3.13523e-08 *x*lens_ipow(y, 6)*dx*lambda + -0.462033 *lens_ipow(lambda, 10) + -0.0340728 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 6) + 0.0122086 *lens_ipow(x, 3)*lens_ipow(dy, 7) + -0.0904701 *lens_ipow(x, 3)*dx*lens_ipow(dy, 4)*lens_ipow(lambda, 2)+0.0f;
const float dx03 =  + 0.000437563  + 6.4343e-05 *x + -44.0482 *dx*dy + 0.379325 *y*dx + 1.0494 *x*dy + 7.3438e-05 *x*dx + 0.0404555 *x*y + -0.134421 *lens_ipow(dy, 3) + 1.24633e-06 *lens_ipow(x, 2)*y + 1.22633 *y*dx*lens_ipow(dy, 2) + 0.378071 *y*lens_ipow(dx, 3) + 0.000164717 *lens_ipow(x, 3)*dy + -4.95598e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx + 60.5106 *x*lens_ipow(dx, 6)*dy + 1.78627e-07 *x*lens_ipow(y, 5)*lens_ipow(dy, 2) + 2.38379e-10 *lens_ipow(x, 7)*y + -0.00729431 *x*y*lens_ipow(lambda, 8) + 0.0854605 *lens_ipow(x, 3)*dx*lens_ipow(dy, 6) + -0.18094 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 3.18428e-07 *lens_ipow(x, 7)*lens_ipow(dy, 3)+0.0f;
const float dx04 =  + -0.04507 *x*lens_ipow(lambda, 2) + -8.89932e-07 *x*lens_ipow(y, 4)*lens_ipow(lambda, 3) + 1.56762e-08 *x*lens_ipow(y, 6)*lens_ipow(dx, 2) + -4.62033 *dx*lens_ipow(lambda, 9) + 0.543473 *x*lens_ipow(lambda, 9) + -0.0583545 *x*y*dy*lens_ipow(lambda, 7) + -0.0681456 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 5) + -0.0904701 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 4)*lambda+0.0f;
const float dx10 =  + 2.68222e-06  + -0.000624202 *lens_ipow(dy, 2) + 0.424364 *dx*dy + 0.039835 *y*dx + 0.0337491 *x*dy + 0.00103359 *x*y + -9.50472e-05 *x*lens_ipow(dy, 2) + 0.0134818 *y*dx*lens_ipow(dy, 2) + -0.0149226 *x*lens_ipow(dy, 3) + 1.38821e-05 *lens_ipow(y, 3)*dx*lambda + -0.00230582 *y*dx*lens_ipow(lambda, 6) + -1.62807e-11 *lens_ipow(x, 5)*lens_ipow(y, 3) + 2.67176e-10 *lens_ipow(x, 6)*y*dx + 4.66936e-13 *x*lens_ipow(y, 8)*dy + -1.47653e-10 *lens_ipow(x, 2)*lens_ipow(y, 6)*dx*dy+0.0f;
const float dx11 =  + 0.546342  + -2.21933e-05 *dy + -4.16495e-05 *dx + 0.956653 *lens_ipow(dy, 2) + 0.508291 *lens_ipow(dx, 2) + 0.114677 *y*dy + -2.19724e-05 *y*dx + 0.00156305 *lens_ipow(y, 2) + 0.039835 *x*dx + 0.000516794 *lens_ipow(x, 2) + -0.0130893 *lens_ipow(lambda, 4) + 0.000783889 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.0134818 *x*dx*lens_ipow(dy, 2) + 4.16464e-05 *x*lens_ipow(y, 2)*dx*lambda + 0.00346722 *y*lens_ipow(dx, 4)*lambda + 3.07159e-10 *lens_ipow(y, 7)*dy + -0.00230582 *x*dx*lens_ipow(lambda, 6) + -8.14034e-12 *lens_ipow(x, 6)*lens_ipow(y, 2) + 3.8168e-11 *lens_ipow(x, 7)*dx + 0.320317 *lens_ipow(dy, 4)*lens_ipow(lambda, 5) + 2.58964 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 1.86774e-12 *lens_ipow(x, 2)*lens_ipow(y, 7)*dy + -2.95307e-10 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*dy+0.0f;
const float dx12 =  + -0.00669701 *dx + -4.16495e-05 *y + -43.8817 *dx*dy + 1.01658 *y*dx + -1.09862e-05 *lens_ipow(y, 2) + 0.424364 *x*dy + 0.039835 *x*y + 0.000522592 *lens_ipow(y, 3)*dx + 0.0134818 *x*y*lens_ipow(dy, 2) + 1.38821e-05 *x*lens_ipow(y, 3)*lambda + -455.203 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + 0.00693445 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lambda + -0.00230582 *x*y*lens_ipow(lambda, 6) + 3.8168e-11 *lens_ipow(x, 7)*y + -10343.5 *dx*lens_ipow(dy, 9) + -9784.7 *lens_ipow(dx, 9)*dy + 5.17929 *y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -4.92178e-11 *lens_ipow(x, 3)*lens_ipow(y, 6)*dy+0.0f;
const float dx13 =  + 49.8343  + -2.21933e-05 *y + 0.134787 *lens_ipow(lambda, 2) + -65.2722 *lens_ipow(dy, 2) + -21.9408 *lens_ipow(dx, 2) + 1.91331 *y*dy + 0.0573385 *lens_ipow(y, 2) + -0.0012484 *x*dy + 0.424364 *x*dx + 0.0168745 *lens_ipow(x, 2) + -9.50472e-05 *lens_ipow(x, 2)*dy + 0.0269636 *x*y*dx*dy + -0.0223839 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -341.403 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + 3.83949e-11 *lens_ipow(y, 8) + 1.28127 *y*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -2.1404 *lens_ipow(lambda, 10) + -9010.58 *lens_ipow(dy, 10) + -46545.7 *lens_ipow(dx, 2)*lens_ipow(dy, 8) + -978.47 *lens_ipow(dx, 10) + 5.17929 *y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 6) + 2.33468e-13 *lens_ipow(x, 2)*lens_ipow(y, 8) + -4.92178e-11 *lens_ipow(x, 3)*lens_ipow(y, 6)*dx+0.0f;
const float dx14 =  + 0.269574 *dy*lambda + -0.052357 *y*lens_ipow(lambda, 3) + 1.38821e-05 *x*lens_ipow(y, 3)*dx + 0.00173361 *lens_ipow(y, 2)*lens_ipow(dx, 4) + -0.0138349 *x*y*dx*lens_ipow(lambda, 5) + 1.60159 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -21.404 *dy*lens_ipow(lambda, 9) + 15.5379 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx20 =  + -0.0355285  + 3.49342e-08 *y + 0.000293857 *lens_ipow(lambda, 2) + -0.0289854 *lens_ipow(dy, 2) + -8.44205e-06 *dx*dy + -0.0024248 *lens_ipow(dx, 2) + -0.00130006 *y*dy + -7.60243e-06 *lens_ipow(y, 2) + -0.00148407 *x*dx + -8.46794e-06 *lens_ipow(x, 2) + -0.00137252 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.000660547 *x*dx*lens_ipow(dy, 2) + 2.46624e-11 *lens_ipow(x, 3)*lens_ipow(y, 2) + 0.0336882 *lens_ipow(dy, 6) + 1.81823e-07 *x*lens_ipow(y, 3)*dx*dy + -0.000243424 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -6.76874e-15 *lens_ipow(y, 8) + 1.81212e-09 *lens_ipow(x, 5)*y*dx*dy + 3.88433e-10 *lens_ipow(x, 6)*lens_ipow(dx, 2) + -4.8712e-06 *lens_ipow(y, 2)*lens_ipow(lambda, 7) + -1.47055e-05 *lens_ipow(x, 2)*lens_ipow(lambda, 8) + -1.16139e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 5) + -2.91713e-12 *lens_ipow(x, 8)*lens_ipow(dy, 2)+0.0f;
const float dx21 =  + 2.68045e-07  + 3.49342e-08 *x + -0.0398735 *dx*dy + -0.000844111 *y*dx + -0.00130006 *x*dy + -1.52049e-05 *x*y + 1.23312e-11 *lens_ipow(x, 4)*y + 1.13416e-07 *lens_ipow(y, 4)*dx*dy + 2.72735e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + 0.103922 *y*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -5.41499e-14 *x*lens_ipow(y, 7) + 3.0202e-10 *lens_ipow(x, 6)*dx*dy + -9.74239e-06 *x*y*lens_ipow(lambda, 7) + -1.16139e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dy, 5)+0.0f;
const float dx22 =  + -1.40991  + -0.000174899 *dx + -0.640477 *lens_ipow(dy, 2) + 2.18502 *lens_ipow(dx, 2) + -0.0398735 *y*dy + -0.000422056 *lens_ipow(y, 2) + -8.44205e-06 *x*dy + -0.00484959 *x*dx + -0.000742034 *lens_ipow(x, 2) + -0.00274504 *x*dx*lens_ipow(lambda, 2) + -0.000330274 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.20114 *lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 3.99815 *lens_ipow(dy, 6) + -0.740753 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 75.878 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + 2.26832e-08 *lens_ipow(y, 5)*dy + 9.09116e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + 0.0425201 *lens_ipow(lambda, 8) + 165.301 *lens_ipow(dx, 8) + 0.155883 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 4) + 3.0202e-10 *lens_ipow(x, 6)*y*dy + 1.10981e-10 *lens_ipow(x, 7)*dx+0.0f;
const float dx23 =  + 1.8023e-05 *dy + -1.28095 *dx*dy + -0.0398735 *y*dx + -0.0579707 *x*dy + -8.44205e-06 *x*dx + -0.00130006 *x*y + -0.000660547 *lens_ipow(x, 2)*dx*dy + -0.40228 *dx*dy*lens_ipow(lambda, 4) + 23.9889 *dx*lens_ipow(dy, 5) + 30.3512 *lens_ipow(dx, 5)*dy + 2.26832e-08 *lens_ipow(y, 5)*dx + 0.202129 *x*lens_ipow(dy, 5) + 9.09116e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx + -0.000324565 *lens_ipow(x, 3)*lens_ipow(dy, 3) + 0.207844 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 3.0202e-10 *lens_ipow(x, 6)*y*dx + -1.93565e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dy, 4) + -6.48252e-13 *lens_ipow(x, 9)*dy+0.0f;
const float dx24 =  + 0.000587714 *x*lambda + -0.00274504 *x*lens_ipow(dx, 2)*lambda + -0.804559 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.987671 *lens_ipow(dx, 3)*lens_ipow(lambda, 3) + 0.34016 *dx*lens_ipow(lambda, 7) + -3.40984e-05 *x*lens_ipow(y, 2)*lens_ipow(lambda, 6) + -3.92148e-05 *lens_ipow(x, 3)*lens_ipow(lambda, 7)+0.0f;
const float dx30 =  + 3.49146e-07  + 4.535e-08 *x + 9.39808e-06 *lens_ipow(dy, 2) + 0.0615597 *dx*dy + -9.04265e-05 *y*dx + 0.000765548 *x*dy + 4.44392e-06 *x*y + 2.1107e-05 *lens_ipow(y, 2)*dx*dy + -1.35103e-05 *x*y*lens_ipow(dy, 2) + -8.72269e-07 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 8.54679e-11 *lens_ipow(x, 3)*lens_ipow(y, 3) + 5.07871e-11 *lens_ipow(x, 5)*y + 0.00085897 *x*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + 1.59326e-13 *x*lens_ipow(y, 7) + 1.41051e-06 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 6) + -0.000102077 *lens_ipow(x, 3)*lens_ipow(dy, 5)*lens_ipow(lambda, 2)+0.0f;
const float dx31 =  + -0.0354906  + 0.00316823 *lens_ipow(dx, 2) + -0.00132158 *y*dy + -6.26544e-06 *lens_ipow(y, 2) + -9.04265e-05 *x*dx + 2.22196e-06 *lens_ipow(x, 2) + -0.000562991 *lens_ipow(dy, 2)*lambda + 0.000255559 *lens_ipow(lambda, 4) + -2.59417e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 4.2214e-05 *x*y*dx*dy + -6.75514e-06 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 8.2304e-05 *lens_ipow(y, 2)*lens_ipow(dy, 4) + 6.41009e-11 *lens_ipow(x, 4)*lens_ipow(y, 2) + 8.46451e-12 *lens_ipow(x, 6) + -7.5214e-09 *lens_ipow(y, 4)*lens_ipow(lambda, 3) + 0.0959447 *lens_ipow(dx, 8) + 1.20398e-13 *lens_ipow(y, 8) + 5.57642e-13 *lens_ipow(x, 2)*lens_ipow(y, 6) + 1.41051e-06 *lens_ipow(x, 2)*y*dy*lens_ipow(lambda, 6)+0.0f;
const float dx32 =  + 2.10088e-05  + 4.14153 *dx*dy + 0.00633647 *y*dx + 0.0615597 *x*dy + -9.04265e-05 *x*y + -1.72945e-05 *lens_ipow(y, 3)*dx + 2.1107e-05 *x*lens_ipow(y, 2)*dy + -0.253783 *dx*dy*lens_ipow(lambda, 3) + 25.8238 *dx*lens_ipow(dy, 5) + 37.4111 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + 23.8901 *lens_ipow(dx, 5)*dy + 0.00085897 *lens_ipow(x, 2)*dx*dy*lens_ipow(lambda, 3) + 0.767558 *y*lens_ipow(dx, 7)+0.0f;
const float dx33 =  + -1.40772  + -0.00899718 *lens_ipow(lambda, 2) + 2.19059 *lens_ipow(dy, 2) + 2.07077 *lens_ipow(dx, 2) + -0.000660788 *lens_ipow(y, 2) + 1.87962e-05 *x*dy + 0.0615597 *x*dx + 0.000382774 *lens_ipow(x, 2) + -0.00112598 *y*dy*lambda + 2.1107e-05 *x*lens_ipow(y, 2)*dx + -1.35103e-05 *lens_ipow(x, 2)*y*dy + -0.126892 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -8.72269e-07 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 64.5594 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 28.0583 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + 3.98169 *lens_ipow(dx, 6) + 0.000109739 *lens_ipow(y, 3)*lens_ipow(dy, 3) + 0.000429485 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 219.095 *lens_ipow(dy, 8) + -5.92739 *lens_ipow(dy, 4)*lens_ipow(lambda, 5) + 0.116441 *lens_ipow(lambda, 10) + 7.05257e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 6) + -0.000127596 *lens_ipow(x, 4)*lens_ipow(dy, 4)*lens_ipow(lambda, 2)+0.0f;
const float dx34 =  + -0.0179944 *dy*lambda + -0.000562991 *y*lens_ipow(dy, 2) + 0.00102224 *y*lens_ipow(lambda, 3) + -0.380675 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -4.51284e-09 *lens_ipow(y, 5)*lens_ipow(lambda, 2) + 0.00128846 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -5.92739 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + 1.16441 *dy*lens_ipow(lambda, 9) + 4.23154e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 5) + -5.10383e-05 *lens_ipow(x, 4)*lens_ipow(dy, 5)*lambda+0.0f;
const float dx40 =  + -0.00243072 *dx + -9.40048e-07 *y + -0.000166874 *x + -8.44127e-06 *x*dy + 0.00374516 *y*dx*dy*lambda + 4.73925e-08 *lens_ipow(y, 3)*dx + 0.029967 *x*lens_ipow(dx, 4) + -1.83776e-08 *x*lens_ipow(y, 4) + -2.85218e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + -2.14867e-08 *lens_ipow(x, 5) + -3.49269e-06 *x*lens_ipow(y, 2)*lens_ipow(lambda, 3) + -2.12428e-05 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 3) + -0.00685928 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.22365e-07 *lens_ipow(y, 3)*lens_ipow(lambda, 4) + 0.00448351 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.000143304 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0225542 *lens_ipow(y, 2)*dx*lens_ipow(dy, 6) + 1.27589e-12 *lens_ipow(y, 8)*dx + -6.34003e-13 *lens_ipow(x, 5)*lens_ipow(y, 4)+0.0f;
const float dx41 =  + -0.0022455 *dy + -0.000180399 *y + -9.40048e-07 *x + 0.0054663 *y*lens_ipow(dy, 2)*lambda + 0.00374516 *x*dx*dy*lambda + 1.42178e-07 *x*lens_ipow(y, 2)*dx + 0.0952712 *lens_ipow(dy, 5) + 0.0029346 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -2.07175e-08 *lens_ipow(y, 5) + -3.67552e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + -1.42609e-08 *lens_ipow(x, 4)*y + -0.000500826 *y*lens_ipow(lambda, 5) + -3.49269e-06 *lens_ipow(x, 2)*y*lens_ipow(lambda, 3) + -0.0137186 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 3.67095e-07 *x*lens_ipow(y, 2)*lens_ipow(lambda, 4) + -1.2442e-05 *lens_ipow(y, 4)*lens_ipow(dy, 5) + -0.0451084 *x*y*dx*lens_ipow(dy, 6) + 1.02072e-11 *x*lens_ipow(y, 7)*dx + -4.22668e-13 *lens_ipow(x, 6)*lens_ipow(y, 3)+0.0f;
const float dx42 =  + 0.000104044  + 0.0963019 *dx + -0.00243072 *x + -3.09089 *dx*lens_ipow(dy, 2) + -5.4776 *lens_ipow(dx, 3) + 0.00374516 *x*y*dy*lambda + 4.73925e-08 *x*lens_ipow(y, 3) + 0.0029346 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + 0.0599339 *lens_ipow(x, 2)*lens_ipow(dx, 3) + -7.08094e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 3) + -0.0205778 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 7.16519e-05 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2) + -2194 *lens_ipow(dx, 9) + -0.0225542 *x*lens_ipow(y, 2)*lens_ipow(dy, 6) + 1.27589e-12 *x*lens_ipow(y, 8) + -976.81 *dx*lens_ipow(dy, 6)*lens_ipow(lambda, 3) + -499.662 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx43 =  + 6.38494e-05  + -0.0600535 *dy + -0.0022455 *y + -4.22064e-06 *lens_ipow(x, 2) + -3.09089 *lens_ipow(dx, 2)*dy + 0.0054663 *lens_ipow(y, 2)*dy*lambda + 0.00374516 *x*y*dx*lambda + 0.476356 *y*lens_ipow(dy, 4) + -0.0137186 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + 0.00448351 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 4) + 7.16519e-05 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -152.677 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + -1.2442e-05 *lens_ipow(y, 5)*lens_ipow(dy, 4) + -0.135325 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 5) + -2930.43 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 3) + -249.831 *lens_ipow(dx, 4)*dy*lens_ipow(lambda, 5)+0.0f;
const float dx44 =  + 0.320851 *lens_ipow(lambda, 2) + 0.00273315 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.00374516 *x*y*dx*dy + 0.0029346 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.00125207 *lens_ipow(y, 2)*lens_ipow(lambda, 4) + -5.23903e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 2) + -2.12428e-05 *lens_ipow(x, 3)*dx*lens_ipow(lambda, 2) + 4.8946e-07 *x*lens_ipow(y, 3)*lens_ipow(lambda, 3) + 0.00896702 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -101.785 *lens_ipow(dy, 6)*lens_ipow(lambda, 3) + -7.84219 *lens_ipow(lambda, 10) + -1465.22 *lens_ipow(dx, 2)*lens_ipow(dy, 6)*lens_ipow(lambda, 2) + -624.578 *lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 4)+0.0f;
