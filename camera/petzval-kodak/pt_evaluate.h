const float out_x =  + 1.61246e-05  + 0.000437563 *dy + 49.877 *dx + 0.547189 *x + 2.55514e-06 *lens_ipow(y, 2) + 6.4343e-05 *x*dy + -22.0241 *dx*lens_ipow(dy, 2) + -22.0264 *lens_ipow(dx, 3) + 0.379325 *y*dx*dy + 0.0162033 *lens_ipow(y, 2)*dx + 0.524701 *x*lens_ipow(dy, 2) + 7.3438e-05 *x*dx*dy + 0.929944 *x*lens_ipow(dx, 2) + 0.0404555 *x*y*dy + 0.000523886 *x*lens_ipow(y, 2) + 0.0563142 *lens_ipow(x, 2)*dx + 0.000514391 *lens_ipow(x, 3) + -0.0336052 *lens_ipow(dy, 4) + -0.0150233 *x*lens_ipow(lambda, 3) + 1.24633e-06 *lens_ipow(x, 2)*y*dy + 0.408777 *y*dx*lens_ipow(dy, 3) + 0.378071 *y*lens_ipow(dx, 3)*dy + 8.23586e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 0.0288448 *lens_ipow(y, 2)*lens_ipow(dx, 5) + 9.6451e-09 *lens_ipow(y, 6)*dx + -4.95598e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy + 3.36631e-05 *lens_ipow(x, 4)*lens_ipow(dx, 3) + -343.585 *lens_ipow(dx, 9) + 30.2553 *x*lens_ipow(dx, 6)*lens_ipow(dy, 2) + -2.22483e-07 *x*lens_ipow(y, 4)*lens_ipow(lambda, 4) + 5.95422e-08 *x*lens_ipow(y, 5)*lens_ipow(dy, 3) + 2.38379e-10 *lens_ipow(x, 7)*y*dy + 1.56762e-08 *x*lens_ipow(y, 6)*lens_ipow(dx, 2)*lambda + -0.462033 *dx*lens_ipow(lambda, 10) + 0.0543473 *x*lens_ipow(lambda, 10) + -0.00729431 *x*y*dy*lens_ipow(lambda, 8) + -0.0113576 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 6) + 0.0122086 *lens_ipow(x, 3)*dx*lens_ipow(dy, 7) + -0.0452351 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 7.96069e-08 *lens_ipow(x, 7)*lens_ipow(dy, 4);
const float out_y =  + 0.000115322  + 49.8343 *dy + 0.546342 *y + 2.68222e-06 *x + -0.0033485 *lens_ipow(dx, 2) + -2.21933e-05 *y*dy + -4.16495e-05 *y*dx + 0.134787 *dy*lens_ipow(lambda, 2) + -21.7574 *lens_ipow(dy, 3) + -21.9408 *lens_ipow(dx, 2)*dy + 0.956653 *y*lens_ipow(dy, 2) + 0.508291 *y*lens_ipow(dx, 2) + 0.0573385 *lens_ipow(y, 2)*dy + -1.09862e-05 *lens_ipow(y, 2)*dx + 0.000521016 *lens_ipow(y, 3) + -0.000624202 *x*lens_ipow(dy, 2) + 0.424364 *x*dx*dy + 0.039835 *x*y*dx + 0.0168745 *lens_ipow(x, 2)*dy + 0.000516794 *lens_ipow(x, 2)*y + -4.75236e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.0130893 *y*lens_ipow(lambda, 4) + 0.000261296 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.0134818 *x*y*dx*lens_ipow(dy, 2) + -0.00746129 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 1.38821e-05 *x*lens_ipow(y, 3)*dx*lambda + -113.801 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 0.00173361 *lens_ipow(y, 2)*lens_ipow(dx, 4)*lambda + 3.83949e-11 *lens_ipow(y, 8)*dy + -0.00230582 *x*y*dx*lens_ipow(lambda, 6) + -2.71345e-12 *lens_ipow(x, 6)*lens_ipow(y, 3) + 3.8168e-11 *lens_ipow(x, 7)*y*dx + 0.320317 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -2.1404 *dy*lens_ipow(lambda, 10) + -819.144 *lens_ipow(dy, 11) + -5171.74 *lens_ipow(dx, 2)*lens_ipow(dy, 9) + -978.47 *lens_ipow(dx, 10)*dy + 2.58964 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + 2.33468e-13 *lens_ipow(x, 2)*lens_ipow(y, 8)*dy + -4.92178e-11 *lens_ipow(x, 3)*lens_ipow(y, 6)*dx*dy;
const float out_dx =  + 7.03442e-07  + -1.40991 *dx + 2.68045e-07 *y + -0.0355285 *x + 9.01152e-06 *lens_ipow(dy, 2) + -8.74494e-05 *lens_ipow(dx, 2) + 3.49342e-08 *x*y + -0.640477 *dx*lens_ipow(dy, 2) + 0.728341 *lens_ipow(dx, 3) + -0.0398735 *y*dx*dy + -0.000422056 *lens_ipow(y, 2)*dx + 0.000293857 *x*lens_ipow(lambda, 2) + -0.0289854 *x*lens_ipow(dy, 2) + -8.44205e-06 *x*dx*dy + -0.0024248 *x*lens_ipow(dx, 2) + -0.00130006 *x*y*dy + -7.60243e-06 *x*lens_ipow(y, 2) + -0.000742034 *lens_ipow(x, 2)*dx + -2.82265e-06 *lens_ipow(x, 3) + -0.00137252 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.000330274 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 6.16561e-12 *lens_ipow(x, 4)*lens_ipow(y, 2) + -0.20114 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 3.99815 *dx*lens_ipow(dy, 6) + -0.246918 *lens_ipow(dx, 3)*lens_ipow(lambda, 4) + 15.1756 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 2.26832e-08 *lens_ipow(y, 5)*dx*dy + 0.0336882 *x*lens_ipow(dy, 6) + 9.09116e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy + -8.11413e-05 *lens_ipow(x, 3)*lens_ipow(dy, 4) + 0.0425201 *dx*lens_ipow(lambda, 8) + 18.3668 *lens_ipow(dx, 9) + 0.051961 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -6.76874e-15 *x*lens_ipow(y, 8) + 3.0202e-10 *lens_ipow(x, 6)*y*dx*dy + 5.54905e-11 *lens_ipow(x, 7)*lens_ipow(dx, 2) + -4.8712e-06 *x*lens_ipow(y, 2)*lens_ipow(lambda, 7) + -4.90185e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 8) + -3.8713e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dy, 5) + -3.24126e-13 *lens_ipow(x, 9)*lens_ipow(dy, 2);
const float out_dy =  + -9.27983e-07  + -1.40772 *dy + 2.10088e-05 *dx + -0.0354906 *y + 3.49146e-07 *x + 2.2675e-08 *lens_ipow(x, 2) + -0.00899718 *dy*lens_ipow(lambda, 2) + 0.730198 *lens_ipow(dy, 3) + 2.07077 *lens_ipow(dx, 2)*dy + 0.00316823 *y*lens_ipow(dx, 2) + -0.000660788 *lens_ipow(y, 2)*dy + -2.08848e-06 *lens_ipow(y, 3) + 9.39808e-06 *x*lens_ipow(dy, 2) + 0.0615597 *x*dx*dy + -9.04265e-05 *x*y*dx + 0.000382774 *lens_ipow(x, 2)*dy + 2.22196e-06 *lens_ipow(x, 2)*y + -0.000562991 *y*lens_ipow(dy, 2)*lambda + 0.000255559 *y*lens_ipow(lambda, 4) + -8.64724e-06 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 2.1107e-05 *x*lens_ipow(y, 2)*dx*dy + -6.75514e-06 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -0.126892 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + -2.90756e-07 *lens_ipow(x, 3)*lens_ipow(dy, 3) + 12.9119 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 9.35278 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 3.98169 *lens_ipow(dx, 6)*dy + 2.74347e-05 *lens_ipow(y, 3)*lens_ipow(dy, 4) + 2.1367e-11 *lens_ipow(x, 4)*lens_ipow(y, 3) + 8.46451e-12 *lens_ipow(x, 6)*y + -1.50428e-09 *lens_ipow(y, 5)*lens_ipow(lambda, 3) + 0.000429485 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + 24.3438 *lens_ipow(dy, 9) + 0.0959447 *y*lens_ipow(dx, 8) + 1.33776e-14 *lens_ipow(y, 9) + 7.96632e-14 *lens_ipow(x, 2)*lens_ipow(y, 7) + -1.18548 *lens_ipow(dy, 5)*lens_ipow(lambda, 5) + 0.116441 *dy*lens_ipow(lambda, 10) + 7.05257e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 6) + -2.55192e-05 *lens_ipow(x, 4)*lens_ipow(dy, 5)*lens_ipow(lambda, 2);
const float out_transmittance =  + 0.676059  + 6.38494e-05 *dy + 0.000104044 *dx + -0.0300267 *lens_ipow(dy, 2) + 0.0481509 *lens_ipow(dx, 2) + -0.0022455 *y*dy + -9.01995e-05 *lens_ipow(y, 2) + -0.00243072 *x*dx + -9.40048e-07 *x*y + -8.34369e-05 *lens_ipow(x, 2) + 0.10695 *lens_ipow(lambda, 3) + -4.22064e-06 *lens_ipow(x, 2)*dy + -1.54544 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.3694 *lens_ipow(dx, 4) + 0.00273315 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda + 0.00374516 *x*y*dx*dy*lambda + 4.73925e-08 *x*lens_ipow(y, 3)*dx + 0.0952712 *y*lens_ipow(dy, 5) + 0.0014673 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -3.45292e-09 *lens_ipow(y, 6) + 0.0149835 *lens_ipow(x, 2)*lens_ipow(dx, 4) + -9.18881e-09 *lens_ipow(x, 2)*lens_ipow(y, 4) + -7.13045e-09 *lens_ipow(x, 4)*lens_ipow(y, 2) + -3.58111e-09 *lens_ipow(x, 6) + -0.000250413 *lens_ipow(y, 2)*lens_ipow(lambda, 5) + -1.74634e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 3) + -7.08094e-06 *lens_ipow(x, 3)*dx*lens_ipow(lambda, 3) + -0.00685928 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.22365e-07 *x*lens_ipow(y, 3)*lens_ipow(lambda, 4) + 0.00224175 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 3.58259e-05 *lens_ipow(x, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -25.4461 *lens_ipow(dy, 6)*lens_ipow(lambda, 4) + -219.4 *lens_ipow(dx, 10) + -2.48839e-06 *lens_ipow(y, 5)*lens_ipow(dy, 5) + -0.0225542 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 6) + 1.27589e-12 *x*lens_ipow(y, 8)*dx + -1.05667e-13 *lens_ipow(x, 6)*lens_ipow(y, 4) + -0.712927 *lens_ipow(lambda, 11) + -488.405 *lens_ipow(dx, 2)*lens_ipow(dy, 6)*lens_ipow(lambda, 3) + -124.916 *lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 5);
