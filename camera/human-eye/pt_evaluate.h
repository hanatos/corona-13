const float out_x =  + 5.56432e-05  + 0.000701894 *dy + 22.892 *dx + 0.89515 *x + -0.00120568 *lens_ipow(dx, 2) + 3.56308e-06 *x*y + -0.000425984 *lens_ipow(dy, 3) + -4.20488 *dx*lens_ipow(dy, 2) + -10.9827 *lens_ipow(dx, 3) + 0.00639244 *lens_ipow(y, 2)*dx + 0.914082 *x*lens_ipow(dy, 2) + 0.0809304 *x*y*dy + 0.00167888 *x*lens_ipow(y, 2) + 0.0442182 *lens_ipow(x, 2)*dx + 0.00103184 *lens_ipow(x, 3) + 0.0669659 *dx*lens_ipow(lambda, 4) + 1.24655 *lens_ipow(dx, 5) + -0.0130335 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -1.68051e-06 *lens_ipow(y, 4)*dx + 0.0244884 *x*y*lens_ipow(dx, 2)*dy + 0.000378466 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 3.77056e-07 *lens_ipow(x, 3)*lens_ipow(y, 2) + 0.0154115 *y*dx*dy*lens_ipow(lambda, 3) + 1.24686 *dx*lens_ipow(dy, 6) + 9.68983e-07 *lens_ipow(y, 3)*lens_ipow(dx, 4) + -3.24564e-06 *x*lens_ipow(y, 3)*lens_ipow(dy, 3) + -0.00306302 *lens_ipow(dx, 7)*dy + -0.000765422 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 3) + 0.985781 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.000257139 *lens_ipow(x, 3)*lens_ipow(dx, 6) + 0.0234978 *lens_ipow(dx, 6)*lens_ipow(lambda, 4) + -0.380114 *lens_ipow(dx, 5)*lens_ipow(dy, 6) + 1.34932 *lens_ipow(dx, 11) + 1.5195e-09 *lens_ipow(y, 6)*lens_ipow(dx, 5) + 6.42518e-13 *lens_ipow(y, 9)*dx*dy + 0.00453838 *x*lens_ipow(dy, 10) + -1.96757e-05 *lens_ipow(x, 3)*lens_ipow(dy, 8) + -2.84796e-16 *lens_ipow(x, 3)*lens_ipow(y, 8) + -2.91206e-13 *lens_ipow(x, 9)*lens_ipow(lambda, 2) + -4.87363e-14 *lens_ipow(x, 9)*lens_ipow(dy, 2);
const float out_y =  + -0.000132409  + 22.8912 *dy + 0.893957 *y + -1.32992e-05 *x + -0.000264599 *lens_ipow(dy, 2) + -3.18384e-05 *y*dx + -11.4139 *lens_ipow(dy, 3) + -3.60015 *lens_ipow(dx, 2)*dy + 1.08591 *y*lens_ipow(dx, 2) + 0.0472233 *lens_ipow(y, 2)*dy + 0.00112355 *lens_ipow(y, 3) + -9.85196e-05 *x*lens_ipow(dy, 2) + 0.0920209 *x*y*dx + 0.00510667 *lens_ipow(x, 2)*dy + 0.00184543 *lens_ipow(x, 2)*y + 0.00260025 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.27243e-05 *y*lens_ipow(lambda, 3) + 1.01323 *lens_ipow(dy, 5) + -0.269555 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.058792 *y*lens_ipow(dx, 4) + 0.000379 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.00556202 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 1.7365e-07 *lens_ipow(x, 4)*y + -7.73348e-11 *x*lens_ipow(y, 5) + 0.207769 *lens_ipow(dy, 5)*lens_ipow(lambda, 2) + 0.781216 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 0.136733 *lens_ipow(dx, 6)*dy + -1.95109e-05 *lens_ipow(y, 2)*lens_ipow(dx, 5) + -1.04174 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + -1.23781e-05 *lens_ipow(y, 4)*lens_ipow(dy, 5) + 1.08672e-07 *lens_ipow(y, 5)*lens_ipow(lambda, 4) + -4.29645e-13 *lens_ipow(y, 9) + -4.87941e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -2.00512e-08 *lens_ipow(x, 5)*y*lens_ipow(dx, 3) + 1.16531 *lens_ipow(dy, 11) + -0.0263477 *y*lens_ipow(dx, 10) + 3.16315e-11 *lens_ipow(y, 7)*lens_ipow(dx, 4) + 0.00189666 *x*lens_ipow(dy, 8)*lens_ipow(lambda, 2) + -2.95778e-06 *lens_ipow(x, 4)*lens_ipow(dy, 7) + 4.28192e-11 *lens_ipow(x, 8)*lens_ipow(dy, 3);
const float out_dx =  + 1.96461e-06  + 3.61732e-05 *dy + -3.08487 *dx + -0.17865 *x + 0.00017398 *lens_ipow(dy, 2) + -0.000795532 *dx*dy + 1.07574e-07 *lens_ipow(x, 2) + -0.852138 *dx*lens_ipow(dy, 2) + 0.300661 *lens_ipow(dx, 3) + 0.00405031 *lens_ipow(y, 2)*dx + -0.14162 *x*lens_ipow(dy, 2) + -0.0082106 *x*y*dy + 5.15698e-05 *x*lens_ipow(y, 2) + -6.17707e-08 *lens_ipow(x, 2)*y + 6.12909e-05 *lens_ipow(x, 3) + -1.76096e-06 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 5.83388e-09 *lens_ipow(x, 3)*y + -0.288351 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.0188602 *lens_ipow(dx, 5) + 0.00261061 *y*dx*lens_ipow(dy, 3) + 7.74788e-08 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.00386922 *x*lens_ipow(lambda, 4) + 2.57088e-06 *lens_ipow(x, 3)*y*dy + -5.9128e-05 *x*lens_ipow(dy, 5) + -1.38023e-10 *x*lens_ipow(y, 6) + 4.15824e-06 *lens_ipow(x, 3)*lens_ipow(dy, 4) + 3.1552e-11 *lens_ipow(x, 5)*lens_ipow(y, 2) + 0.230723 *dx*lens_ipow(lambda, 8) + -3.49708e-13 *lens_ipow(x, 9) + 2.89272e-08 *lens_ipow(y, 4)*lens_ipow(dx, 6) + 0.0307951 *lens_ipow(dx, 3)*lens_ipow(lambda, 8) + 0.0596539 *lens_ipow(dx, 3)*lens_ipow(dy, 8) + 0.0370206 *lens_ipow(dx, 9)*lens_ipow(dy, 2) + 0.068508 *lens_ipow(dx, 11) + -6.79117e-13 *lens_ipow(y, 8)*lens_ipow(dx, 3) + -2.8114e-14 *lens_ipow(y, 10)*dx + 0.00849624 *x*lens_ipow(dy, 10) + -2.49069e-10 *x*lens_ipow(y, 6)*lens_ipow(dy, 4) + -3.72056e-09 *lens_ipow(x, 6)*lens_ipow(dx, 5) + 1.63431e-13 *lens_ipow(x, 7)*lens_ipow(y, 2)*lens_ipow(dy, 2);
const float out_dy =  + -2.66492e-05  + -3.00474 *dy + -0.175046 *y + -1.4291e-05 *x + 0.000241608 *lens_ipow(dy, 2) + 7.97183e-05 *lens_ipow(dx, 2) + 3.2403e-05 *y*dx + 0.285697 *lens_ipow(dy, 3) + 3.60852 *lens_ipow(dx, 2)*dy + -0.0978864 *y*lens_ipow(dx, 2) + 6.04463e-05 *lens_ipow(y, 3) + -1.27334e-05 *x*lens_ipow(dy, 2) + 0.530097 *x*dx*dy + 0.0167524 *lens_ipow(x, 2)*dy + 0.000251239 *lens_ipow(x, 2)*y + -0.00159674 *dx*lens_ipow(lambda, 3) + -3.17122e-05 *x*lens_ipow(dy, 3) + -6.49808e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.16958e-07 *lens_ipow(x, 3)*dy + 0.0246627 *lens_ipow(dy, 5) + 0.275017 *lens_ipow(dx, 4)*dy + 0.00389794 *y*lens_ipow(lambda, 4) + 1.06781e-05 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -5.64576e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + 2.94322e-06 *lens_ipow(y, 3)*lens_ipow(dx, 4) + 7.28386e-10 *lens_ipow(x, 6)*dy + 0.157265 *dy*lens_ipow(lambda, 7) + 0.0341902 *y*lens_ipow(dx, 8) + -2.5341e-06 *lens_ipow(y, 2)*lens_ipow(dx, 7) + 3.10585e-12 *lens_ipow(y, 7)*lens_ipow(dx, 2) + -3.66367e-13 *lens_ipow(y, 9) + 0.012404 *lens_ipow(dy, 3)*lens_ipow(lambda, 7) + 5.51249e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 6) + 0.0510414 *lens_ipow(dy, 11) + -0.106736 *lens_ipow(dx, 4)*lens_ipow(dy, 7) + 0.289689 *lens_ipow(dx, 10)*dy + 1.84132e-10 *lens_ipow(y, 7)*lens_ipow(dy, 4) + 0.00011509 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 8) + 3.47266e-11 *lens_ipow(x, 7)*y*lens_ipow(dx, 3) + -5.59197e-14 *lens_ipow(x, 10)*dy;
const float out_transmittance =  + 0.973822  + -2.97671e-05 *dy + -5.14627e-06 *x + -0.246501 *lens_ipow(dy, 2) + -0.260095 *lens_ipow(dx, 2) + -0.0247553 *y*dy + -0.000628935 *lens_ipow(y, 2) + -0.026154 *x*dx + -6.12675e-07 *x*y + -0.000671746 *lens_ipow(x, 2) + 0.00906144 *lens_ipow(lambda, 3) + 0.000108961 *lens_ipow(dy, 3) + -0.000563233 *dx*lens_ipow(dy, 2) + -1.55559e-05 *y*lens_ipow(dx, 2) + -0.000262963 *dy*lens_ipow(lambda, 3) + -0.00125484 *y*lens_ipow(dy, 3) + -7.54787e-06 *y*lens_ipow(dx, 3) + 0.000188807 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -2.70635e-07 *lens_ipow(y, 4) + -1.4036e-05 *x*lens_ipow(dy, 3) + -0.00104707 *x*lens_ipow(dx, 3) + 0.000176278 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -6.65617e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.65162e-07 *lens_ipow(x, 4) + -2.92612e-10 *x*lens_ipow(y, 4) + -0.131755 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -0.0497247 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -1.25323e-08 *lens_ipow(y, 5)*dy + -2.99796e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -7.19264e-09 *lens_ipow(x, 5)*dx + -2.93313e-12 *lens_ipow(x, 6)*dx + 3.3089e-05 *lens_ipow(y, 2)*lens_ipow(dx, 6) + -0.0253997 *lens_ipow(dy, 10) + 0.066657 *lens_ipow(dx, 2)*lens_ipow(dy, 8) + -0.01735 *lens_ipow(dx, 10) + 3.19098e-07 *lens_ipow(y, 4)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -7.80495e-15 *lens_ipow(x, 2)*lens_ipow(y, 8) + -2.47533e-09 *lens_ipow(x, 5)*dx*lens_ipow(dy, 4) + -0.0672645 *lens_ipow(lambda, 11) + -8.39641e-11 *x*lens_ipow(y, 5)*lens_ipow(dx, 3)*lens_ipow(lambda, 2);
