float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + 3.28602e-05  + 20.6514 *begin_dx + -5.63678e-06 *begin_y + 0.958992 *begin_x + -0.000264769 *begin_dx*begin_dy + -6.10268e-07 *lens_ipow(begin_y, 2) + 1.78183e-07 *lens_ipow(begin_x, 2) + -2.00887 *begin_dx*lens_ipow(begin_dy, 2) + -0.805632 *lens_ipow(begin_dx, 3) + 1.37149e-05 *begin_y*lens_ipow(begin_dx, 2) + 0.00388807 *lens_ipow(begin_y, 2)*begin_dx + 0.000996169 *begin_x*lens_ipow(begin_lambda, 2) + -0.0796915 *begin_x*lens_ipow(begin_dy, 2) + 0.000146804 *begin_x*lens_ipow(begin_y, 2) + 0.00331119 *lens_ipow(begin_x, 2)*begin_dx + 7.79241e-05 *lens_ipow(begin_x, 3) + 0.00187821 *lens_ipow(begin_dx, 3)*begin_dy*begin_lambda + 0.0496628 *lens_ipow(begin_dx, 5) + 0.0415684 *begin_y*lens_ipow(begin_dx, 3)*begin_dy + -0.00471672 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + 1.51626e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -0.000368344 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -2.83985e-05 *lens_ipow(begin_x, 3)*begin_y*begin_dy + 7.98496e-06 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 3) + 8.78111e-06 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4) + -0.006344 *begin_x*lens_ipow(begin_dy, 6) + 1.79008e-08 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2) + -2.34358e-09 *begin_x*lens_ipow(begin_y, 5)*begin_dy + 9.60394e-05 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 7) + -3.11898e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + -1.22963e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + 3.43725e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_lambda, 7) + 0.264863 *begin_dx*lens_ipow(begin_lambda, 10) + -0.0526424 *lens_ipow(begin_dx, 7)*lens_ipow(begin_lambda, 4) + 0.00836218 *lens_ipow(begin_dx, 11) + 4.95146e-15 *lens_ipow(begin_y, 10)*begin_dx + -0.00054028 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 8) + 1.0679e-12 *lens_ipow(begin_x, 8)*lens_ipow(begin_dx, 3) + 4.20136e-17 *lens_ipow(begin_x, 9)*lens_ipow(begin_y, 2) + 3.44444e-16 *lens_ipow(begin_x, 11);
  pred_y =  + -1.37254e-05  + 20.6714 *begin_dy + 0.00014689 *begin_dx + 0.960287 *begin_y + -0.000605106 *lens_ipow(begin_dy, 2) + 0.000288029 *begin_dx*begin_dy + -0.256365 *lens_ipow(begin_dy, 3) + -2.05504 *lens_ipow(begin_dx, 2)*begin_dy + -0.0920141 *begin_y*lens_ipow(begin_dx, 2) + -1.12147e-05 *lens_ipow(begin_y, 3) + 2.80653e-05 *begin_x*lens_ipow(begin_dy, 2) + 0.00295942 *lens_ipow(begin_x, 2)*begin_dy + 0.000131986 *lens_ipow(begin_x, 2)*begin_y + -0.022321 *begin_dy*lens_ipow(begin_lambda, 4) + -0.624661 *lens_ipow(begin_dy, 5) + -0.000149128 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 6.90913e-05 *begin_x*lens_ipow(begin_dy, 3)*begin_lambda + -4.04562e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 0.0012934 *lens_ipow(begin_x, 2)*begin_dy*lens_ipow(begin_lambda, 2) + 0.00104629 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + 2.47413e-06 *lens_ipow(begin_x, 4)*begin_dy + -7.51521e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dx*begin_lambda + -7.54881e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 4) + 5.4747e-10 *lens_ipow(begin_y, 7) + -9.85075e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 3) + -0.00162525 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 5) + 2.03814e-13 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 6) + -0.00377389 *begin_y*lens_ipow(begin_dx, 8) + 8.00912e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 0.000879528 *lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 7) + 2.3683e-10 *lens_ipow(begin_y, 7)*lens_ipow(begin_lambda, 3) + -0.0266561 *begin_y*lens_ipow(begin_dx, 6)*lens_ipow(begin_lambda, 4) + 0.000407786 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 7)*lens_ipow(begin_lambda, 2) + -6.63749e-13 *lens_ipow(begin_y, 9)*lens_ipow(begin_dy, 2) + 0.0882062 *begin_x*begin_dx*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 6) + -6.73945e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 9) + 8.06044e-18 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 9) + -1.21235e-14 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4)*lens_ipow(begin_lambda, 2) + 2.40636e-09 *lens_ipow(begin_x, 6)*lens_ipow(begin_dy, 5) + -8.72095e-10 *lens_ipow(begin_x, 6)*begin_y*lens_ipow(begin_lambda, 4);
  pred_dx =  + -1.3018e-05  + 0.000143682 *begin_dy + 0.652959 *begin_dx + -0.0178346 *begin_x + 0.000227036 *lens_ipow(begin_dy, 2) + -0.000146325 *begin_dx*begin_dy + -0.000127855 *lens_ipow(begin_dx, 2) + 0.0158749 *begin_dx*lens_ipow(begin_lambda, 2) + -0.0783214 *begin_dx*lens_ipow(begin_dy, 2) + -0.00119969 *lens_ipow(begin_dx, 2)*begin_dy + -0.113371 *lens_ipow(begin_dx, 3) + -0.000325238 *lens_ipow(begin_y, 2)*begin_dx + 1.63558e-08 *lens_ipow(begin_y, 3) + -2.94335e-05 *begin_x*lens_ipow(begin_y, 2) + -1.2444e-07 *lens_ipow(begin_x, 2)*begin_y + -1.78927e-05 *lens_ipow(begin_x, 3) + 2.19682e-05 *begin_y*lens_ipow(begin_lambda, 3) + -2.552e-09 *lens_ipow(begin_y, 4) + -0.0182644 *lens_ipow(begin_dx, 5) + -1.92814e-05 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + 0.00194052 *begin_x*lens_ipow(begin_lambda, 4) + 1.69424e-06 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4) + 5.2939e-12 *lens_ipow(begin_x, 6) + -6.40093e-05 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 4) + 4.91689e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -4.47452e-11 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + -3.2386e-11 *lens_ipow(begin_x, 7) + 0.00345605 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + 3.16853e-13 *lens_ipow(begin_y, 8)*begin_dx + 0.000146273 *begin_x*lens_ipow(begin_dy, 8) + 5.84563e-11 *lens_ipow(begin_x, 7)*lens_ipow(begin_dy, 2) + 0.0754515 *begin_dx*lens_ipow(begin_lambda, 9) + 0.0740975 *lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 5) + -9.91617e-09 *lens_ipow(begin_x, 4)*lens_ipow(begin_dy, 6) + 0.112051 *lens_ipow(begin_dx, 9)*lens_ipow(begin_dy, 2) + 0.0341507 *lens_ipow(begin_dx, 11) + -4.71868e-05 *begin_y*lens_ipow(begin_dx, 10) + -0.000252111 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 9) + 5.09132e-11 *lens_ipow(begin_x, 7)*lens_ipow(begin_dx, 4) + -1.76295e-16 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 4);
  pred_dy =  + -4.41351e-05  + 0.651747 *begin_dy + -0.0180723 *begin_y + 1.58486e-07 *begin_x + -9.54883e-06 *lens_ipow(begin_dy, 2) + 3.82465e-05 *lens_ipow(begin_dx, 2) + -2.25784e-07 *begin_x*begin_y + -0.112733 *lens_ipow(begin_dy, 3) + -0.0737849 *lens_ipow(begin_dx, 2)*begin_dy + 0.00151504 *begin_y*lens_ipow(begin_lambda, 2) + -1.81833e-05 *lens_ipow(begin_y, 3) + 1.50527e-05 *begin_x*lens_ipow(begin_dy, 2) + -0.000325749 *lens_ipow(begin_x, 2)*begin_dy + -3.01079e-05 *lens_ipow(begin_x, 2)*begin_y + -1.25466e-08 *lens_ipow(begin_x, 3) + 0.000233115 *lens_ipow(begin_lambda, 4) + 0.0396612 *begin_dy*lens_ipow(begin_lambda, 3) + -3.59882e-05 *lens_ipow(begin_x, 2)*begin_dy*begin_lambda + -0.0163436 *lens_ipow(begin_dy, 5) + 0.000796254 *begin_y*lens_ipow(begin_dx, 4) + -6.42563e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + 7.83266e-08 *lens_ipow(begin_x, 4)*begin_dy + -0.000858782 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 4) + 1.17285e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 4) + -6.9994e-13 *begin_x*lens_ipow(begin_y, 6) + -4.46182e-11 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + 0.0294655 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 5) + 4.5837e-11 *lens_ipow(begin_y, 7)*lens_ipow(begin_dx, 2) + -9.50418e-14 *lens_ipow(begin_y, 9) + 4.98666e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 4) + 1.11132e-14 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3) + 0.00159688 *begin_y*lens_ipow(begin_lambda, 9) + 6.58317e-11 *lens_ipow(begin_y, 6)*lens_ipow(begin_dx, 4) + -2.45029e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_dy, 6) + 1.12633e-10 *lens_ipow(begin_x, 6)*begin_dy*lens_ipow(begin_lambda, 3) + 0.0171727 *lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 8) + 0.0379702 *lens_ipow(begin_dy, 11) + 3.64315e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 6)*lens_ipow(begin_lambda, 2) + 6.70795e-11 *lens_ipow(begin_y, 7)*lens_ipow(begin_dy, 4) + 2.14337e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 20.6514  + -0.000264769 *begin_dy + -2.00887 *lens_ipow(begin_dy, 2) + -2.4169 *lens_ipow(begin_dx, 2) + 2.74298e-05 *begin_y*begin_dx + 0.00388807 *lens_ipow(begin_y, 2) + 0.00331119 *lens_ipow(begin_x, 2) + 0.00563463 *lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + 0.248314 *lens_ipow(begin_dx, 4) + 0.124705 *begin_y*lens_ipow(begin_dx, 2)*begin_dy + -0.00943344 *begin_x*begin_dx*lens_ipow(begin_lambda, 2) + 1.51626e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + 7.98496e-06 *lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 3) + 3.51244e-05 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + 3.58015e-08 *begin_x*lens_ipow(begin_y, 4)*begin_dx + 0.000672276 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 6) + -9.35694e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + 0.264863 *lens_ipow(begin_lambda, 10) + -0.368497 *lens_ipow(begin_dx, 6)*lens_ipow(begin_lambda, 4) + 0.091984 *lens_ipow(begin_dx, 10) + 4.95146e-15 *lens_ipow(begin_y, 10) + -0.00054028 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 8) + 3.20369e-12 *lens_ipow(begin_x, 8)*lens_ipow(begin_dx, 2)+0.0f;
  dx1_domega0[0][1] =  + -0.000264769 *begin_dx + -4.01774 *begin_dx*begin_dy + -0.159383 *begin_x*begin_dy + 0.00187821 *lens_ipow(begin_dx, 3)*begin_lambda + 0.0415684 *begin_y*lens_ipow(begin_dx, 3) + -0.000736689 *lens_ipow(begin_x, 3)*begin_dy + -2.83985e-05 *lens_ipow(begin_x, 3)*begin_y + -0.038064 *begin_x*lens_ipow(begin_dy, 5) + -2.34358e-09 *begin_x*lens_ipow(begin_y, 5) + -9.35694e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -2.45926e-07 *lens_ipow(begin_x, 4)*begin_dy*lens_ipow(begin_lambda, 3) + -0.00432224 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 7)+0.0f;
  dx1_domega0[1][0] =  + 0.00014689  + 0.000288029 *begin_dy + -4.11008 *begin_dx*begin_dy + -0.184028 *begin_y*begin_dx + -4.04562e-06 *begin_x*lens_ipow(begin_y, 3) + -7.51521e-06 *lens_ipow(begin_x, 3)*begin_y*begin_lambda + -0.000301952 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3) + -0.000197015 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_lambda, 3) + -0.00162525 *begin_x*begin_y*lens_ipow(begin_lambda, 5) + -0.0301911 *begin_y*lens_ipow(begin_dx, 7) + 0.000240274 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -0.159937 *begin_y*lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 4) + 0.0882062 *begin_x*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 6)+0.0f;
  dx1_domega0[1][1] =  + 20.6714  + -0.00121021 *begin_dy + 0.000288029 *begin_dx + -0.769095 *lens_ipow(begin_dy, 2) + -2.05504 *lens_ipow(begin_dx, 2) + 5.61305e-05 *begin_x*begin_dy + 0.00295942 *lens_ipow(begin_x, 2) + -0.022321 *lens_ipow(begin_lambda, 4) + -3.12331 *lens_ipow(begin_dy, 4) + -0.000298257 *lens_ipow(begin_y, 3)*begin_dy + 0.000207274 *begin_x*lens_ipow(begin_dy, 2)*begin_lambda + 0.0012934 *lens_ipow(begin_x, 2)*lens_ipow(begin_lambda, 2) + 0.00313887 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + 2.47413e-06 *lens_ipow(begin_x, 4) + 0.000240274 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 0.000879528 *lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 7) + 0.00285451 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 6)*lens_ipow(begin_lambda, 2) + -1.3275e-12 *lens_ipow(begin_y, 9)*begin_dy + 0.264619 *begin_x*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 6) + -0.00060655 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 8) + 1.20318e-08 *lens_ipow(begin_x, 6)*lens_ipow(begin_dy, 4)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
