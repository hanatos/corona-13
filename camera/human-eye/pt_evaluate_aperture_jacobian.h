const float dx00 =  + 0.958992  + 3.56366e-07 *x + 0.000996169 *lens_ipow(lambda, 2) + -0.0796915 *lens_ipow(dy, 2) + 0.000146804 *lens_ipow(y, 2) + 0.00662238 *x*dx + 0.000233772 *lens_ipow(x, 2) + -0.00471672 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 3.03251e-05 *x*lens_ipow(y, 2)*dx + -0.00110503 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -8.51954e-05 *lens_ipow(x, 2)*y*dy + -0.006344 *lens_ipow(dy, 6) + 1.79008e-08 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -2.34358e-09 *lens_ipow(y, 5)*dy + -4.91853e-07 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.000103117 *lens_ipow(x, 2)*lens_ipow(lambda, 7) + -0.00108056 *x*dx*lens_ipow(dy, 8) + 8.54316e-12 *lens_ipow(x, 7)*lens_ipow(dx, 3) + 3.78123e-16 *lens_ipow(x, 8)*lens_ipow(y, 2) + 3.78888e-15 *lens_ipow(x, 10)+0.0f;
const float dx01 =  + -5.63678e-06  + -1.22054e-06 *y + 1.37149e-05 *lens_ipow(dx, 2) + 0.00777614 *y*dx + 0.000293608 *x*y + 0.0415684 *lens_ipow(dx, 3)*dy + 3.03251e-05 *lens_ipow(x, 2)*y*dx + -2.83985e-05 *lens_ipow(x, 3)*dy + 1.59699e-05 *y*dx*lens_ipow(lambda, 3) + 1.75622e-05 *y*lens_ipow(dx, 4) + 7.16031e-08 *x*lens_ipow(y, 3)*lens_ipow(dx, 2) + -1.17179e-08 *x*lens_ipow(y, 4)*dy + 0.000192079 *y*lens_ipow(dx, 7) + -9.35694e-05 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 4.95146e-14 *lens_ipow(y, 9)*dx + 8.40272e-17 *lens_ipow(x, 9)*y+0.0f;
const float dx02 =  + 20.6514  + -0.000264769 *dy + -2.00887 *lens_ipow(dy, 2) + -2.4169 *lens_ipow(dx, 2) + 2.74298e-05 *y*dx + 0.00388807 *lens_ipow(y, 2) + 0.00331119 *lens_ipow(x, 2) + 0.00563463 *lens_ipow(dx, 2)*dy*lambda + 0.248314 *lens_ipow(dx, 4) + 0.124705 *y*lens_ipow(dx, 2)*dy + -0.00943344 *x*dx*lens_ipow(lambda, 2) + 1.51626e-05 *lens_ipow(x, 2)*lens_ipow(y, 2) + 7.98496e-06 *lens_ipow(y, 2)*lens_ipow(lambda, 3) + 3.51244e-05 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 3.58015e-08 *x*lens_ipow(y, 4)*dx + 0.000672276 *lens_ipow(y, 2)*lens_ipow(dx, 6) + -9.35694e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.264863 *lens_ipow(lambda, 10) + -0.368497 *lens_ipow(dx, 6)*lens_ipow(lambda, 4) + 0.091984 *lens_ipow(dx, 10) + 4.95146e-15 *lens_ipow(y, 10) + -0.00054028 *lens_ipow(x, 2)*lens_ipow(dy, 8) + 3.20369e-12 *lens_ipow(x, 8)*lens_ipow(dx, 2)+0.0f;
const float dx03 =  + -0.000264769 *dx + -4.01774 *dx*dy + -0.159383 *x*dy + 0.00187821 *lens_ipow(dx, 3)*lambda + 0.0415684 *y*lens_ipow(dx, 3) + -0.000736689 *lens_ipow(x, 3)*dy + -2.83985e-05 *lens_ipow(x, 3)*y + -0.038064 *x*lens_ipow(dy, 5) + -2.34358e-09 *x*lens_ipow(y, 5) + -9.35694e-05 *lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -2.45926e-07 *lens_ipow(x, 4)*dy*lens_ipow(lambda, 3) + -0.00432224 *lens_ipow(x, 2)*dx*lens_ipow(dy, 7)+0.0f;
const float dx04 =  + 0.00199234 *x*lambda + 0.00187821 *lens_ipow(dx, 3)*dy + -0.00943344 *x*lens_ipow(dx, 2)*lambda + 2.39549e-05 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -3.6889e-07 *lens_ipow(x, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.000240607 *lens_ipow(x, 3)*lens_ipow(lambda, 6) + 2.64863 *dx*lens_ipow(lambda, 9) + -0.21057 *lens_ipow(dx, 7)*lens_ipow(lambda, 3)+0.0f;
const float dx10 =  + 2.80653e-05 *lens_ipow(dy, 2) + 0.00591883 *x*dy + 0.000263972 *x*y + 6.90913e-05 *lens_ipow(dy, 3)*lambda + -4.04562e-06 *lens_ipow(y, 3)*dx + 0.00258679 *x*dy*lens_ipow(lambda, 2) + 0.00209258 *x*lens_ipow(dy, 3) + 9.89654e-06 *lens_ipow(x, 3)*dy + -2.25456e-05 *lens_ipow(x, 2)*y*dx*lambda + -0.00162525 *y*dx*lens_ipow(lambda, 5) + 4.07628e-13 *x*lens_ipow(y, 6) + 0.000240274 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 0.0882062 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 6) + -0.000134789 *x*lens_ipow(dy, 9) + 1.61209e-17 *x*lens_ipow(y, 9) + -6.06173e-14 *lens_ipow(x, 4)*lens_ipow(y, 4)*lens_ipow(lambda, 2) + 1.44381e-08 *lens_ipow(x, 5)*lens_ipow(dy, 5) + -5.23257e-09 *lens_ipow(x, 5)*y*lens_ipow(lambda, 4)+0.0f;
const float dx11 =  + 0.960287  + -0.0920141 *lens_ipow(dx, 2) + -3.36441e-05 *lens_ipow(y, 2) + 0.000131986 *lens_ipow(x, 2) + -0.000447385 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.21369e-05 *x*lens_ipow(y, 2)*dx + -7.51521e-06 *lens_ipow(x, 3)*dx*lambda + -0.000226464 *lens_ipow(y, 2)*lens_ipow(dx, 4) + 3.83229e-09 *lens_ipow(y, 6) + -0.000295522 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.00162525 *x*dx*lens_ipow(lambda, 5) + 1.22289e-12 *lens_ipow(x, 2)*lens_ipow(y, 5) + -0.00377389 *lens_ipow(dx, 8) + 0.00175906 *y*dy*lens_ipow(lambda, 7) + 1.65781e-09 *lens_ipow(y, 6)*lens_ipow(lambda, 3) + -0.0266561 *lens_ipow(dx, 6)*lens_ipow(lambda, 4) + 0.000815573 *y*lens_ipow(dy, 7)*lens_ipow(lambda, 2) + -5.97374e-12 *lens_ipow(y, 8)*lens_ipow(dy, 2) + 7.2544e-17 *lens_ipow(x, 2)*lens_ipow(y, 8) + -4.84939e-14 *lens_ipow(x, 5)*lens_ipow(y, 3)*lens_ipow(lambda, 2) + -8.72095e-10 *lens_ipow(x, 6)*lens_ipow(lambda, 4)+0.0f;
const float dx12 =  + 0.00014689  + 0.000288029 *dy + -4.11008 *dx*dy + -0.184028 *y*dx + -4.04562e-06 *x*lens_ipow(y, 3) + -7.51521e-06 *lens_ipow(x, 3)*y*lambda + -0.000301952 *lens_ipow(y, 3)*lens_ipow(dx, 3) + -0.000197015 *lens_ipow(y, 3)*dx*lens_ipow(lambda, 3) + -0.00162525 *x*y*lens_ipow(lambda, 5) + -0.0301911 *y*lens_ipow(dx, 7) + 0.000240274 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.159937 *y*lens_ipow(dx, 5)*lens_ipow(lambda, 4) + 0.0882062 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 6)+0.0f;
const float dx13 =  + 20.6714  + -0.00121021 *dy + 0.000288029 *dx + -0.769095 *lens_ipow(dy, 2) + -2.05504 *lens_ipow(dx, 2) + 5.61305e-05 *x*dy + 0.00295942 *lens_ipow(x, 2) + -0.022321 *lens_ipow(lambda, 4) + -3.12331 *lens_ipow(dy, 4) + -0.000298257 *lens_ipow(y, 3)*dy + 0.000207274 *x*lens_ipow(dy, 2)*lambda + 0.0012934 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 0.00313887 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 2.47413e-06 *lens_ipow(x, 4) + 0.000240274 *lens_ipow(x, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.000879528 *lens_ipow(y, 2)*lens_ipow(lambda, 7) + 0.00285451 *lens_ipow(y, 2)*lens_ipow(dy, 6)*lens_ipow(lambda, 2) + -1.3275e-12 *lens_ipow(y, 9)*dy + 0.264619 *x*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -0.00060655 *lens_ipow(x, 2)*lens_ipow(dy, 8) + 1.20318e-08 *lens_ipow(x, 6)*lens_ipow(dy, 4)+0.0f;
const float dx14 =  + -0.0892839 *dy*lens_ipow(lambda, 3) + 6.90913e-05 *x*lens_ipow(dy, 3) + 0.00258679 *lens_ipow(x, 2)*dy*lambda + -7.51521e-06 *lens_ipow(x, 3)*y*dx + -0.000295522 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.00812627 *x*y*dx*lens_ipow(lambda, 4) + 0.0061567 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 6) + 7.1049e-10 *lens_ipow(y, 7)*lens_ipow(lambda, 2) + -0.106624 *y*lens_ipow(dx, 6)*lens_ipow(lambda, 3) + 0.000815573 *lens_ipow(y, 2)*lens_ipow(dy, 7)*lambda + 0.529237 *x*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -2.42469e-14 *lens_ipow(x, 5)*lens_ipow(y, 4)*lambda + -3.48838e-09 *lens_ipow(x, 6)*y*lens_ipow(lambda, 3)+0.0f;
const float dx20 =  + -0.0178346  + -2.94335e-05 *lens_ipow(y, 2) + -2.48879e-07 *x*y + -5.36782e-05 *lens_ipow(x, 2) + 0.00194052 *lens_ipow(lambda, 4) + 3.17634e-11 *lens_ipow(x, 5) + -0.000128019 *x*dx*lens_ipow(dy, 4) + 1.47507e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -2.23726e-10 *lens_ipow(x, 4)*lens_ipow(y, 2) + -2.26702e-10 *lens_ipow(x, 6) + 0.000146273 *lens_ipow(dy, 8) + 4.09194e-10 *lens_ipow(x, 6)*lens_ipow(dy, 2) + -3.96647e-08 *lens_ipow(x, 3)*lens_ipow(dy, 6) + 3.56392e-10 *lens_ipow(x, 6)*lens_ipow(dx, 4) + -1.23407e-15 *lens_ipow(x, 6)*lens_ipow(y, 4)+0.0f;
const float dx21 =  + -0.000650476 *y*dx + 4.90673e-08 *lens_ipow(y, 2) + -5.88669e-05 *x*y + -1.2444e-07 *lens_ipow(x, 2) + 2.19682e-05 *lens_ipow(lambda, 3) + -1.0208e-08 *lens_ipow(y, 3) + -3.85628e-05 *y*lens_ipow(dx, 3) + 3.38847e-06 *y*lens_ipow(dx, 4) + -8.94905e-11 *lens_ipow(x, 5)*y + 2.53482e-12 *lens_ipow(y, 7)*dx + -4.71868e-05 *lens_ipow(dx, 10) + -0.000504223 *y*lens_ipow(dx, 9) + -7.05182e-16 *lens_ipow(x, 7)*lens_ipow(y, 3)+0.0f;
const float dx22 =  + 0.652959  + -0.000146325 *dy + -0.000255711 *dx + 0.0158749 *lens_ipow(lambda, 2) + -0.0783214 *lens_ipow(dy, 2) + -0.00239938 *dx*dy + -0.340113 *lens_ipow(dx, 2) + -0.000325238 *lens_ipow(y, 2) + -0.0913219 *lens_ipow(dx, 4) + -5.78442e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 6.77694e-06 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -6.40093e-05 *lens_ipow(x, 2)*lens_ipow(dy, 4) + 9.83379e-06 *lens_ipow(x, 3)*dx*lens_ipow(lambda, 2) + 0.0103681 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 3.16853e-13 *lens_ipow(y, 8) + 0.0754515 *lens_ipow(lambda, 9) + 0.370487 *lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 1.00846 *lens_ipow(dx, 8)*lens_ipow(dy, 2) + 0.375658 *lens_ipow(dx, 10) + -0.000471868 *y*lens_ipow(dx, 9) + -0.002269 *lens_ipow(y, 2)*lens_ipow(dx, 8) + 2.03653e-10 *lens_ipow(x, 7)*lens_ipow(dx, 3)+0.0f;
const float dx23 =  + 0.000143682  + 0.000454072 *dy + -0.000146325 *dx + -0.156643 *dx*dy + -0.00119969 *lens_ipow(dx, 2) + -0.000256037 *lens_ipow(x, 2)*dx*lens_ipow(dy, 3) + 0.0103681 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.00117018 *x*lens_ipow(dy, 7) + 1.16913e-10 *lens_ipow(x, 7)*dy + -5.9497e-08 *lens_ipow(x, 4)*lens_ipow(dy, 5) + 0.224102 *lens_ipow(dx, 9)*dy+0.0f;
const float dx24 =  + 0.0317498 *dx*lambda + 6.59047e-05 *y*lens_ipow(lambda, 2) + 0.00776206 *x*lens_ipow(lambda, 3) + 9.83379e-06 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lambda + 0.00691209 *lens_ipow(dx, 3)*lens_ipow(dy, 3)*lambda + 0.679063 *dx*lens_ipow(lambda, 8) + 0.370487 *lens_ipow(dx, 5)*lens_ipow(lambda, 4)+0.0f;
const float dx30 =  + 1.58486e-07  + -2.25784e-07 *y + 1.50527e-05 *lens_ipow(dy, 2) + -0.000651498 *x*dy + -6.02159e-05 *x*y + -3.76397e-08 *lens_ipow(x, 2) + -7.19763e-05 *x*dy*lambda + -0.000128513 *x*lens_ipow(dy, 3) + 3.13306e-07 *lens_ipow(x, 3)*dy + -6.9994e-13 *lens_ipow(y, 6) + -8.92363e-11 *x*lens_ipow(y, 5) + 9.97333e-06 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + 6.6679e-14 *lens_ipow(x, 5)*lens_ipow(y, 3) + -9.80115e-08 *lens_ipow(x, 3)*lens_ipow(dy, 6) + 6.75799e-10 *lens_ipow(x, 5)*dy*lens_ipow(lambda, 3) + 1.07168e-08 *lens_ipow(x, 4)*lens_ipow(dy, 4)*lens_ipow(lambda, 2)+0.0f;
const float dx31 =  + -0.0180723  + -2.25784e-07 *x + 0.00151504 *lens_ipow(lambda, 2) + -5.45499e-05 *lens_ipow(y, 2) + -3.01079e-05 *lens_ipow(x, 2) + 0.000796254 *lens_ipow(dx, 4) + -0.000858782 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 3.51855e-06 *lens_ipow(y, 2)*lens_ipow(lambda, 4) + -4.19964e-12 *x*lens_ipow(y, 5) + -2.23091e-10 *lens_ipow(x, 2)*lens_ipow(y, 4) + 3.20859e-10 *lens_ipow(y, 6)*lens_ipow(dx, 2) + -8.55376e-13 *lens_ipow(y, 8) + 3.33395e-14 *lens_ipow(x, 6)*lens_ipow(y, 2) + 0.00159688 *lens_ipow(lambda, 9) + 3.9499e-10 *lens_ipow(y, 5)*lens_ipow(dx, 4) + 1.09295e-05 *lens_ipow(y, 2)*lens_ipow(dx, 6)*lens_ipow(lambda, 2) + 4.69556e-10 *lens_ipow(y, 6)*lens_ipow(dy, 4)+0.0f;
const float dx32 =  + 7.64931e-05 *dx + -0.14757 *dx*dy + 0.00318502 *y*lens_ipow(dx, 3) + -0.00171756 *y*dx*lens_ipow(lambda, 4) + 0.117862 *lens_ipow(dx, 3)*lens_ipow(dy, 5) + 9.16741e-11 *lens_ipow(y, 7)*dx + 2.63327e-10 *lens_ipow(y, 6)*lens_ipow(dx, 3) + 2.18589e-05 *lens_ipow(y, 3)*lens_ipow(dx, 5)*lens_ipow(lambda, 2)+0.0f;
const float dx33 =  + 0.651747  + -1.90977e-05 *dy + -0.338199 *lens_ipow(dy, 2) + -0.0737849 *lens_ipow(dx, 2) + 3.01054e-05 *x*dy + -0.000325749 *lens_ipow(x, 2) + 0.0396612 *lens_ipow(lambda, 3) + -3.59882e-05 *lens_ipow(x, 2)*lambda + -0.081718 *lens_ipow(dy, 4) + -0.000192769 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 7.83266e-08 *lens_ipow(x, 4) + 0.147328 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + 1.496e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -1.47017e-07 *lens_ipow(x, 4)*lens_ipow(dy, 5) + 1.12633e-10 *lens_ipow(x, 6)*lens_ipow(lambda, 3) + 0.0515182 *lens_ipow(dy, 2)*lens_ipow(lambda, 8) + 0.417672 *lens_ipow(dy, 10) + 2.68318e-10 *lens_ipow(y, 7)*lens_ipow(dy, 3) + 8.57346e-09 *lens_ipow(x, 5)*lens_ipow(dy, 3)*lens_ipow(lambda, 2)+0.0f;
const float dx34 =  + 0.00303008 *y*lambda + 0.00093246 *lens_ipow(lambda, 3) + 0.118984 *dy*lens_ipow(lambda, 2) + -3.59882e-05 *lens_ipow(x, 2)*dy + -0.00343513 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 4.6914e-06 *lens_ipow(y, 3)*lens_ipow(lambda, 3) + 1.99467e-05 *lens_ipow(x, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + 0.0143719 *y*lens_ipow(lambda, 8) + 3.379e-10 *lens_ipow(x, 6)*dy*lens_ipow(lambda, 2) + 0.137382 *lens_ipow(dy, 3)*lens_ipow(lambda, 7) + 7.28631e-06 *lens_ipow(y, 3)*lens_ipow(dx, 6)*lambda + 4.28673e-09 *lens_ipow(x, 5)*lens_ipow(dy, 4)*lambda+0.0f;
const float dx40 =  + -2.59033e-07  + -4.85853e-08 *y + -8.42143e-06 *x + 0.000234318 *y*dx*dy + 9.55148e-05 *x*lens_ipow(dx, 2) + -6.3024e-07 *x*lens_ipow(y, 2) + -1.22547e-08 *lens_ipow(x, 2)*dy + -8.31974e-08 *x*lens_ipow(dx, 3) + -5.23784e-06 *lens_ipow(dy, 5) + -0.000481397 *lens_ipow(dx, 5) + 7.2429e-06 *x*lens_ipow(dy, 4) + -1.66275e-09 *lens_ipow(x, 5) + 4.98755e-10 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -5.47536e-09 *lens_ipow(x, 2)*y*dx*dy*lambda + -6.40171e-12 *lens_ipow(y, 5)*lens_ipow(lambda, 3) + 3.00087e-08 *x*lens_ipow(y, 2)*lens_ipow(lambda, 5) + -7.71631e-11 *lens_ipow(x, 6)*lens_ipow(dx, 3) + 1.62364e-13 *lens_ipow(x, 7)*lens_ipow(dy, 2)+0.0f;
const float dx41 =  + -8.86337e-08 *y + -4.85853e-08 *x + -1.02365e-06 *lens_ipow(dx, 2) + -1.2305e-07 *y*dx + 0.000234318 *x*dx*dy + -6.3024e-07 *lens_ipow(x, 2)*y + -1.34386e-05 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -1.73707e-09 *lens_ipow(y, 5) + 1.49626e-09 *x*lens_ipow(y, 2)*lens_ipow(dy, 3) + -1.82512e-09 *lens_ipow(x, 3)*dx*dy*lambda + 6.25155e-09 *lens_ipow(y, 2)*lens_ipow(dx, 5) + 6.14185e-11 *lens_ipow(y, 5)*lens_ipow(dx, 2) + -3.20086e-11 *x*lens_ipow(y, 4)*lens_ipow(lambda, 3) + 3.00087e-08 *lens_ipow(x, 2)*y*lens_ipow(lambda, 5) + 8.45649e-06 *y*lens_ipow(dx, 8) + 1.03242e-09 *lens_ipow(y, 4)*lens_ipow(dx, 4)*lens_ipow(lambda, 2)+0.0f;
const float dx42 =  + 0.00168497 *dx + -2.0473e-06 *y*dx + -6.1525e-08 *lens_ipow(y, 2) + -0.0902979 *dx*lens_ipow(dy, 2) + -0.0563098 *lens_ipow(dx, 3) + 0.000234318 *x*y*dy + 9.55148e-05 *lens_ipow(x, 2)*dx + 0.000112472 *dx*lens_ipow(dy, 3) + -1.24796e-07 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.00240698 *x*lens_ipow(dx, 4) + -1.82512e-09 *lens_ipow(x, 3)*y*dy*lambda + 1.04193e-08 *lens_ipow(y, 3)*lens_ipow(dx, 4) + 2.04728e-11 *lens_ipow(y, 6)*dx + -0.00821345 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + -0.0860845 *lens_ipow(dx, 9) + 3.3826e-05 *lens_ipow(y, 2)*lens_ipow(dx, 7) + -3.30699e-11 *lens_ipow(x, 7)*lens_ipow(dx, 2) + -0.0138028 *lens_ipow(dx, 5)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 8.25938e-10 *lens_ipow(y, 5)*lens_ipow(dx, 3)*lens_ipow(lambda, 2)+0.0f;
const float dx43 =  + -5.59974e-06  + 0.000107226 *dy + -0.0902979 *lens_ipow(dx, 2)*dy + 0.000234318 *x*y*dx + -4.08491e-09 *lens_ipow(x, 3) + 0.000168708 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.104 *lens_ipow(dy, 5) + -1.34386e-05 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -2.61892e-05 *x*lens_ipow(dy, 4) + 1.44858e-05 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 1.49626e-09 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + -1.82512e-09 *lens_ipow(x, 3)*y*dx*lambda + -0.0123202 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + 4.0591e-14 *lens_ipow(x, 8)*dy + -0.00460092 *lens_ipow(dx, 6)*dy*lens_ipow(lambda, 3)+0.0f;
const float dx44 =  + 0.00180546 *lens_ipow(lambda, 2) + -1.82512e-09 *lens_ipow(x, 3)*y*dx*dy + -1.92051e-11 *x*lens_ipow(y, 5)*lens_ipow(lambda, 2) + 7.50217e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 4) + -0.0563837 *lens_ipow(lambda, 10) + -0.00690138 *lens_ipow(dx, 6)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 4.12969e-10 *lens_ipow(y, 5)*lens_ipow(dx, 4)*lambda+0.0f;
