const float out_x =  + -3.22872e-05  + 98.9954 *dx + 8.64153e-06 *y + 0.851601 *x + 7.06487e-05 *y*dy + -0.000456385 *x*dx + -9.12331e-07 *x*y + -11.9226 *dx*lens_ipow(dy, 2) + -0.0619983 *lens_ipow(dx, 2)*dy + -12.5938 *lens_ipow(dx, 3) + 0.855521 *y*dx*dy + 0.00978111 *lens_ipow(y, 2)*dx + 2.72831 *x*lens_ipow(dy, 2) + 3.52654 *x*lens_ipow(dx, 2) + 0.06051 *x*y*dy + 0.000333285 *x*lens_ipow(y, 2) + 0.0697881 *lens_ipow(x, 2)*dx + -1.83966e-07 *lens_ipow(x, 2)*y + 0.000332212 *lens_ipow(x, 3) + 0.560816 *dx*lens_ipow(lambda, 3) + 9.48202e-05 *lens_ipow(y, 2)*dx*dy + 9.8021e-07 *lens_ipow(x, 2)*y*dx + 1.9954e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -2.63123e-08 *lens_ipow(x, 4) + -0.969979 *x*lens_ipow(dy, 4) + 0.000159735 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.000115625 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 0.177641 *y*lens_ipow(dx, 4)*dy + 3052.72 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 7.24363e-07 *x*lens_ipow(y, 4)*lens_ipow(dy, 2) + -2.45574e-05 *lens_ipow(x, 4)*lens_ipow(dx, 3) + 7761.54 *lens_ipow(dx, 9) + 0.00619112 *x*lens_ipow(lambda, 8) + -2.09814e-13 *lens_ipow(x, 3)*lens_ipow(y, 6) + -2.07054 *dx*lens_ipow(lambda, 10) + 229706 *lens_ipow(dx, 3)*lens_ipow(dy, 8) + 1946.99 *y*lens_ipow(dx, 9)*dy + -1.7831e-12 *lens_ipow(y, 9)*dx*dy + -3.75529e-06 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -4.48366e-16 *lens_ipow(x, 9)*lens_ipow(y, 2);
const float out_y =  + 0.000215366  + 99.0277 *dy + 0.85144 *y + 0.00779382 *lens_ipow(dy, 2) + -1.90801e-06 *lens_ipow(y, 2) + -3.60359e-05 *x*dy + 3.71528e-06 *x*y + -1.0825e-06 *lens_ipow(x, 2) + -18.2156 *lens_ipow(dy, 3) + -14.6601 *lens_ipow(dx, 2)*dy + 3.5193 *y*lens_ipow(dy, 2) + 2.72982 *y*lens_ipow(dx, 2) + 0.0699987 *lens_ipow(y, 2)*dy + 0.000333978 *lens_ipow(y, 3) + 0.804093 *x*dx*dy + 4.70614e-06 *x*y*dy + 0.0604572 *x*y*dx + 0.00954859 *lens_ipow(x, 2)*dy + 0.000334072 *lens_ipow(x, 2)*y + 0.601684 *dy*lens_ipow(lambda, 3) + -0.00016648 *x*y*lens_ipow(dy, 2) + 108.828 *lens_ipow(dy, 5) + 199.591 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.029654 *x*y*dx*lens_ipow(dy, 2) + 6.65749e-05 *lens_ipow(x, 3)*dx*dy + 9.16095e-11 *x*lens_ipow(y, 5) + -8.49352e-11 *lens_ipow(x, 5)*y + -10.4299 *y*lens_ipow(dx, 6) + -3.29954e-05 *lens_ipow(y, 4)*lens_ipow(dy, 3) + 1.62518e-09 *lens_ipow(x, 6)*dy + 0.00651722 *y*lens_ipow(lambda, 7) + -781.906 *lens_ipow(dy, 9) + 15862.6 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + 5892.58 *lens_ipow(dx, 8)*dy + -2.4967e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -1.78325e-07 *lens_ipow(x, 5)*y*lens_ipow(dx, 3)*lambda + -2.20618 *dy*lens_ipow(lambda, 10) + 3.898e-08 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(dx, 3)*dy + -0.00279017 *lens_ipow(x, 4)*lens_ipow(dy, 7) + -5.6106e-08 *lens_ipow(x, 4)*y*lens_ipow(lambda, 6);
const float out_dx =  + -3.8794e-05  + 8.04855e-05 *dy + -4.37476 *dx + -0.0477281 *x + 0.00137206 *lens_ipow(dy, 2) + 0.000114416 *lens_ipow(dx, 2) + -5.1335e-08 *lens_ipow(y, 2) + 6.53264e-06 *x*dy + 0.000210974 *lens_ipow(lambda, 3) + -0.0103629 *dx*lens_ipow(lambda, 2) + -44.9562 *dx*lens_ipow(dy, 2) + 2.23176 *lens_ipow(dx, 3) + -0.844474 *y*dx*dy + 5.11962e-05 *y*lens_ipow(dx, 2) + -0.00378974 *lens_ipow(y, 2)*dx + -0.519422 *x*lens_ipow(dy, 2) + -0.00972586 *x*y*dy + -4.36122e-05 *x*lens_ipow(y, 2) + 5.22096e-07 *lens_ipow(x, 2)*dy + -0.000457883 *lens_ipow(x, 2)*dx + -2.08698e-06 *lens_ipow(x, 3) + 8.96643e-05 *x*lens_ipow(lambda, 3) + -9.74567e-07 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 1.40482e-09 *lens_ipow(x, 4) + -0.0453133 *lens_ipow(dy, 5) + -0.666224 *lens_ipow(dx, 5) + 1.94173e-09 *lens_ipow(x, 3)*lens_ipow(y, 2) + 0.0236707 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 2.5098 *x*lens_ipow(dx, 2)*lens_ipow(dy, 4) + 0.000149894 *x*lens_ipow(y, 2)*lens_ipow(dy, 4) + -6.77343e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -5.9009e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.0778036 *x*lens_ipow(dy, 7) + -9.89898 *y*dx*lens_ipow(dy, 7) + 127.61 *lens_ipow(dx, 3)*lens_ipow(dy, 4)*lens_ipow(lambda, 3) + 27.478 *y*lens_ipow(dx, 7)*dy*lambda + -6.98984e-06 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 5) + 0.0801192 *dx*lens_ipow(lambda, 10) + 96671.5 *lens_ipow(dx, 7)*lens_ipow(dy, 4) + 4.42742e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2);
const float out_dy =  + -6.59248e-06  + -4.39309 *dy + -7.30858e-05 *dx + -0.0479157 *y + -8.51495e-07 *x + 0.00113682 *lens_ipow(dy, 2) + -0.00235461 *dx*dy + 0.00071304 *lens_ipow(dx, 2) + -1.74043e-05 *x*dy + 3.77936 *lens_ipow(dy, 3) + 0.0115858 *dx*lens_ipow(dy, 2) + 49.7177 *lens_ipow(dx, 2)*dy + 0.0469348 *y*lens_ipow(dy, 2) + 0.325336 *y*lens_ipow(dx, 2) + 1.22258e-05 *lens_ipow(y, 2)*dy + -5.10008e-07 *lens_ipow(y, 3) + 1.0517 *x*dx*dy + 0.00718422 *x*y*dx + 5.18206e-09 *x*lens_ipow(y, 2) + 0.00558656 *lens_ipow(x, 2)*dy + 4.00401e-05 *lens_ipow(x, 2)*y + 0.000212039 *y*lens_ipow(lambda, 3) + -3.13579e-05 *y*dx*lens_ipow(lambda, 2) + -0.000511339 *x*lens_ipow(dy, 3) + -1.55361 *lens_ipow(dx, 4)*dy + 0.0255659 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0094547 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 1.06281e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.000628799 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 3.00164e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -0.457521 *x*lens_ipow(dx, 4)*lens_ipow(dy, 3) + -1.26604e-06 *lens_ipow(x, 4)*lens_ipow(dy, 4) + -3.52475e-10 *lens_ipow(x, 6)*dy*lambda + -1.04865e-09 *lens_ipow(x, 5)*y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1194.15 *lens_ipow(dy, 11) + -10493.7 *lens_ipow(dx, 10)*dy + -0.00104625 *y*lens_ipow(lambda, 10) + -2.39314e-05 *x*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 6) + -2.64215e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 6) + 5.6138e-07 *lens_ipow(x, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 5);
const float out_transmittance =  + 0.621638  + 0.151228 *lambda + -0.00017301 *dy + -2.08713e-06 *y + -8.78743e-06 *x + -0.811103 *lens_ipow(dy, 2) + 0.000103357 *dx*lambda + -0.00118959 *dx*dy + -0.791182 *lens_ipow(dx, 2) + -0.0175219 *y*dy + -9.46734e-05 *lens_ipow(y, 2) + -0.0171096 *x*dx + -9.65303e-05 *lens_ipow(x, 2) + -0.126351 *lens_ipow(lambda, 3) + -0.0324512 *lens_ipow(dx, 3) + 0.000193553 *x*lens_ipow(dy, 2) + -5.74799e-06 *x*y*dx + -4.47266e-08 *x*lens_ipow(y, 2) + 1.37065e-05 *lens_ipow(x, 2)*dx + 1.42992e-07 *lens_ipow(x, 3) + -1.18148 *lens_ipow(dy, 4) + -3.83757 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.838286 *lens_ipow(dx, 4) + 6.63602e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -6.02732e-06 *x*lens_ipow(y, 2)*dx + 0.000361468 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -6.26128e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 1.30085e-09 *lens_ipow(x, 3)*y + -0.00454509 *y*lens_ipow(dx, 4) + 1.39042e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -1.65048e-08 *lens_ipow(y, 5)*dy + -1.27552e-10 *lens_ipow(y, 6) + -0.000664689 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -2.29946e-08 *lens_ipow(x, 5)*dx + 3.11003e-05 *lens_ipow(x, 2)*lens_ipow(lambda, 5) + -4.5113e-13 *lens_ipow(x, 8) + -769.049 *lens_ipow(dy, 10) + -1423.88 *lens_ipow(dx, 10) + 0.212642 *lens_ipow(lambda, 11) + 73.4435 *lens_ipow(dx, 6)*lens_ipow(lambda, 5);
