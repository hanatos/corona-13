const float out_x =  + -2.06871e-05  + 81.4095 *dx + 4.23662e-07 *y + 0.814319 *x + 0.000352336 *lens_ipow(dy, 2) + 0.00262068 *lens_ipow(dx, 2) + 3.15095e-05 *y*dx + 2.54411e-07 *x*y + -68.2089 *dx*lens_ipow(dy, 2) + -68.6124 *lens_ipow(dx, 3) + -0.887354 *y*dx*dy + -0.00229716 *lens_ipow(y, 2)*dx + -0.486129 *x*lens_ipow(dy, 2) + -1.37078 *x*lens_ipow(dx, 2) + -0.00533204 *x*y*dy + -8.17454e-06 *x*lens_ipow(y, 2) + -9.41626e-07 *lens_ipow(x, 2)*dy + -0.00752169 *lens_ipow(x, 2)*dx + -7.91925e-06 *lens_ipow(x, 3) + 2.02778 *dx*lens_ipow(lambda, 3) + 20.0552 *lens_ipow(dx, 5) + 0.0282357 *x*lens_ipow(lambda, 4) + -0.00421355 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.00385216 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 60.4558 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + -3.25374 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + 0.0799742 *lens_ipow(y, 2)*dx*lens_ipow(dy, 4) + 1.49858e-07 *lens_ipow(y, 5)*dx*dy + 2.83681 *x*lens_ipow(dy, 6) + -0.00060995 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + 1.56639e-09 *lens_ipow(y, 6)*dx*lambda + -169.411 *lens_ipow(dx, 5)*lens_ipow(dy, 4) + -0.00861136 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 4) + -0.000102928 *lens_ipow(y, 4)*lens_ipow(dx, 5) + -0.0108934 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.00317051 *lens_ipow(x, 3)*lens_ipow(dy, 6) + 6.98183e-13 *lens_ipow(x, 8)*dx + -10.7066 *dx*lens_ipow(lambda, 10) + -0.137591 *x*lens_ipow(lambda, 10) + -4.87038e-14 *lens_ipow(x, 5)*lens_ipow(y, 4)*lens_ipow(lambda, 2);
const float out_y =  + 1.32547e-06  + 81.4074 *dy + 2.23496e-05 *dx + 0.814303 *y + 3.0924e-05 *y*dy + 4.08633e-07 *lens_ipow(y, 2) + 1.10483e-07 *x*y + -68.3684 *lens_ipow(dy, 3) + -67.5127 *lens_ipow(dx, 2)*dy + -1.36518 *y*lens_ipow(dy, 2) + -0.483232 *y*lens_ipow(dx, 2) + -0.00752915 *lens_ipow(y, 2)*dy + -8.08994e-06 *lens_ipow(y, 3) + -0.881645 *x*dx*dy + -0.00534004 *x*y*dx + -0.00227046 *lens_ipow(x, 2)*dy + -8.25868e-06 *lens_ipow(x, 2)*y + 2.03968 *dy*lens_ipow(lambda, 3) + -0.0246124 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000462666 *y*lens_ipow(dx, 3) + 16.0857 *lens_ipow(dy, 5) + 0.0283783 *y*lens_ipow(lambda, 4) + -0.00203956 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -0.00717632 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.00585902 *x*y*dx*lens_ipow(dy, 2) + -0.00154405 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 493.181 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 249.211 *lens_ipow(dx, 6)*dy + -0.0585162 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 2.7994e-09 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -6.91159e-11 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy + -1.26284 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 5) + 537.217 *lens_ipow(dx, 4)*lens_ipow(dy, 3)*lambda + 35.048 *y*lens_ipow(dx, 8) + -1.3294 *lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 3) + -1.86724e-10 *lens_ipow(y, 7)*lens_ipow(dx, 2) + -1.05271e-13 *lens_ipow(y, 8)*dy + -10.8571 *dy*lens_ipow(lambda, 10) + -0.138545 *y*lens_ipow(lambda, 10) + -3.91585e-09 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(dx, 4);
const float out_dx =  + -5.4868e-07  + -1.31337e-05 *dy + 0.597373 *dx + -1.92859e-07 *y + -0.00628944 *x + 3.26887e-06 *x*dx + 9.31044e-09 *x*y + 0.00857568 *dx*lens_ipow(lambda, 2) + -0.56158 *dx*lens_ipow(dy, 2) + -0.619665 *lens_ipow(dx, 3) + -0.0221786 *y*dx*dy + -0.000152272 *lens_ipow(y, 2)*dx + -0.0112114 *x*lens_ipow(dy, 2) + -0.0350522 *x*lens_ipow(dx, 2) + -0.000293299 *x*y*dy + -2.04779e-06 *x*lens_ipow(y, 2) + -0.000466241 *lens_ipow(x, 2)*dx + 2.38175e-09 *lens_ipow(x, 2)*y + -2.12563e-06 *lens_ipow(x, 3) + 0.000158793 *y*lens_ipow(dx, 2)*dy + 1.56259e-10 *lens_ipow(x, 4) + 0.000638611 *x*lens_ipow(lambda, 4) + -0.000258133 *x*y*lens_ipow(dx, 2)*dy + 0.0914576 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + 21.4459 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 0.002744 *lens_ipow(y, 2)*lens_ipow(dx, 5) + -0.00567563 *dx*lens_ipow(lambda, 7) + 6.32133 *lens_ipow(dx, 6)*lens_ipow(dy, 2) + 0.0375048 *x*lens_ipow(dy, 6)*lambda + 2.26704e-13 *lens_ipow(x, 2)*lens_ipow(y, 6)*dx + -2.01939e-05 *lens_ipow(x, 4)*lens_ipow(dx, 5) + 6.48821e-13 *lens_ipow(x, 8)*dx + 7.36535e-15 *lens_ipow(x, 9)*lambda + 9267.08 *lens_ipow(dx, 5)*lens_ipow(dy, 6) + 3596.75 *lens_ipow(dx, 11) + -0.00265068 *x*lens_ipow(lambda, 10) + 5.13482e-06 *x*lens_ipow(y, 4)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -0.000164407 *lens_ipow(x, 3)*y*lens_ipow(dx, 6)*dy + -1.49663e-09 *lens_ipow(x, 5)*lens_ipow(lambda, 6);
const float out_dy =  + -8.18721e-07  + 0.598784 *dy + 5.26237e-06 *dx + -0.00629737 *y + -8.45536e-07 *y*dy + -1.75349e-06 *x*dx + -6.25914e-09 *x*y + -0.603605 *lens_ipow(dy, 3) + -0.56602 *lens_ipow(dx, 2)*dy + -0.034625 *y*lens_ipow(dy, 2) + -0.0112229 *y*lens_ipow(dx, 2) + -0.000457038 *lens_ipow(y, 2)*dy + -2.07151e-06 *lens_ipow(y, 3) + -0.0224882 *x*dx*dy + -0.00029801 *x*y*dx + -0.000154619 *lens_ipow(x, 2)*dy + -2.07448e-06 *lens_ipow(x, 2)*y + 0.000356516 *y*lens_ipow(lambda, 3) + 1.72643e-08 *lens_ipow(y, 3)*dx + -8.03363e-07 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 1.55666e-06 *lens_ipow(x, 2)*dx*dy + -0.000228904 *x*y*dx*lens_ipow(dy, 2) + 1.82083e-08 *x*lens_ipow(y, 3)*dx + 9.07525e-05 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.0219255 *dy*lens_ipow(lambda, 6) + -1.56703e-05 *lens_ipow(y, 4)*lens_ipow(dy, 5) + 2837.73 *lens_ipow(dy, 11) + 26353 *lens_ipow(dx, 4)*lens_ipow(dy, 7) + -0.00124699 *y*lens_ipow(lambda, 10) + 7.5796e-16 *lens_ipow(y, 10)*dy + 0.00276614 *x*dx*dy*lens_ipow(lambda, 8) + 0.568716 *lens_ipow(x, 2)*lens_ipow(dy, 9) + 0.0758657 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 6) + 7.22045e-18 *lens_ipow(x, 2)*lens_ipow(y, 9) + -9.72852e-14 *lens_ipow(x, 6)*lens_ipow(y, 3)*lens_ipow(dy, 2);
const float out_transmittance =  + 0.788989  + 0.0912116 *lambda + 0.000113846 *dy + 6.02479e-07 *y + 4.09132e-07 *x + -0.414463 *lens_ipow(dy, 2) + -0.422838 *lens_ipow(dx, 2) + -0.00640889 *y*dy + -2.52959e-05 *lens_ipow(y, 2) + -0.0059644 *x*dx + -2.51078e-05 *lens_ipow(x, 2) + -0.0764352 *lens_ipow(lambda, 3) + -0.00464682 *lens_ipow(dx, 2)*dy + 1.12241e-06 *lens_ipow(y, 2)*dx + 0.000173992 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.0549131 *x*dx*lens_ipow(dy, 2) + -0.0255735 *x*lens_ipow(dx, 3) + 4.07547e-06 *lens_ipow(x, 2)*y*dy + -84.9767 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -120.327 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -9.93206e-05 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -5.4628e-11 *lens_ipow(y, 6) + 2.12627e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 2.20474e-10 *lens_ipow(x, 2)*lens_ipow(y, 4) + 3.54911e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx + 2.94288e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + 3.04122e-12 *lens_ipow(x, 6) + -0.00057565 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy*lambda + -475.503 *lens_ipow(dy, 8) + -398.137 *lens_ipow(dx, 8) + -2.21915 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 0.000712638 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 5) + -0.0500807 *lens_ipow(x, 2)*y*lens_ipow(dx, 6)*dy + 9.74672e-07 *lens_ipow(x, 5)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.137772 *lens_ipow(lambda, 11) + 0.0684829 *lens_ipow(y, 2)*lens_ipow(dy, 6)*lens_ipow(lambda, 3) + -0.279555 *lens_ipow(y, 2)*lens_ipow(dx, 6)*lens_ipow(lambda, 3) + -7.84373e-05 *lens_ipow(y, 4)*lens_ipow(dx, 7) + 4.44692e-13 *lens_ipow(x, 2)*lens_ipow(y, 7)*dy*lambda + 1.0648e-12 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(lambda, 3);
