const float out_x =  + 0.000853931  + 97.9961 *dx + 1.97042e-05 *y + -0.37657 *x + -0.0470299 *lens_ipow(dy, 2) + -0.0600743 *lens_ipow(dx, 2) + -2.53798e-06 *x*y + 1.87661 *dx*lens_ipow(lambda, 2) + 27.8227 *dx*lens_ipow(dy, 2) + 31.7923 *lens_ipow(dx, 3) + 0.931397 *y*dx*dy + 0.00703035 *lens_ipow(y, 2)*dx + 0.643104 *x*lens_ipow(dy, 2) + 2.12778 *x*lens_ipow(dx, 2) + 0.0132105 *x*y*dy + 6.56453e-05 *x*lens_ipow(y, 2) + 0.0201332 *lens_ipow(x, 2)*dx + 6.78108e-05 *lens_ipow(x, 3) + -0.100499 *x*lens_ipow(lambda, 3) + 0.0364028 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.232962 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 0.00175695 *lens_ipow(x, 2)*y*dx*dy + -9.79743e-09 *lens_ipow(x, 3)*lens_ipow(y, 2) + -3.20268 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -7936.74 *lens_ipow(dx, 7) + 118.81 *y*lens_ipow(dx, 5)*dy + 0.83254 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + 0.000425213 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2) + 4.47562e-06 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -1.51328 *y*dx*dy*lens_ipow(lambda, 5) + -0.0187963 *x*y*dy*lens_ipow(lambda, 5) + -183344 *lens_ipow(dx, 3)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -0.0460233 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 6) + -0.0176533 *lens_ipow(x, 3)*lens_ipow(dy, 6) + -7416.37 *lens_ipow(dx, 5)*lens_ipow(lambda, 5) + -3.80988e-10 *lens_ipow(x, 7)*lens_ipow(lambda, 3) + -0.59839 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 6) + 0.534569 *x*lens_ipow(lambda, 10) + -69.3283 *x*lens_ipow(dy, 4)*lens_ipow(lambda, 6) + -1.3621 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6);
const float out_y =  + 0.000137611  + 97.9425 *dy + -0.000754665 *dx + -0.374459 *y + 0.000321517 *y*dy + 0.000273961 *y*dx + 4.24285e-06 *x*y + 2.18591 *dy*lens_ipow(lambda, 2) + 27.8545 *lens_ipow(dy, 3) + 33.2953 *lens_ipow(dx, 2)*dy + 1.67327 *y*lens_ipow(dy, 2) + 0.65598 *y*lens_ipow(dx, 2) + 0.019324 *lens_ipow(y, 2)*dy + 6.06604e-05 *lens_ipow(y, 3) + 0.958745 *x*dx*dy + 0.0132771 *x*y*dx + 2.38106e-07 *x*lens_ipow(y, 2) + 0.00690698 *lens_ipow(x, 2)*dy + 6.48198e-05 *lens_ipow(x, 2)*y + -0.111376 *y*lens_ipow(lambda, 3) + 0.00170548 *x*lens_ipow(y, 2)*dx*dy + -6.10793e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + 0.538828 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lambda + -26711.1 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 7.99012e-06 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -0.996917 *x*dx*dy*lens_ipow(lambda, 4) + 0.71917 *x*y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 3.09036 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.017372 *x*y*dx*lens_ipow(lambda, 5) + -106612 *lens_ipow(dy, 9) + -180.329 *y*lens_ipow(dx, 6)*lens_ipow(lambda, 2) + 7.24363e-07 *lens_ipow(y, 6)*lens_ipow(dx, 2)*dy + -10205.4 *lens_ipow(dy, 5)*lens_ipow(lambda, 5) + -0.0877426 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 7) + -499466 *lens_ipow(dx, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + 0.617364 *y*lens_ipow(lambda, 10) + -13.6221 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -0.00546888 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 6) + 2.96072e-13 *lens_ipow(y, 10)*dy + -7.57184 *lens_ipow(x, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 4);
const float out_dx =  + -5.49498e-07  + -0.349126 *dx + -0.00884588 *x + 0.846317 *dx*lens_ipow(dy, 2) + 0.82841 *lens_ipow(dx, 3) + 0.00840566 *y*dx*dy + 2.65844e-05 *lens_ipow(y, 2)*dx + 0.00297861 *x*lens_ipow(dy, 2) + 0.0124968 *x*lens_ipow(dx, 2) + 3.17635e-05 *x*y*dy + 3.14338e-07 *x*lens_ipow(y, 2) + 3.02677e-05 *lens_ipow(x, 2)*dx + 0.00039821 *x*lens_ipow(lambda, 3) + 7.27783e-07 *lens_ipow(x, 3)*lambda + 0.0195371 *dx*lens_ipow(lambda, 4) + 0.000921139 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 2.6712e-06 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.00211755 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 8.03988e-06 *lens_ipow(x, 2)*y*dx*dy + -0.0123753 *y*dx*dy*lens_ipow(lambda, 3) + -56.6621 *lens_ipow(dx, 7) + -4.7201e-05 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 4) + 1.12933e-08 *lens_ipow(y, 5)*dx*dy + -0.0317466 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -0.00014451 *x*y*dy*lens_ipow(lambda, 4) + 0.0293829 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -8.97827e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3) + 6.2369e-08 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -5064.61 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + 0.0113469 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + -9.15396e-12 *lens_ipow(x, 7)*lens_ipow(dy, 2) + 8.64732e-13 *lens_ipow(x, 8)*dx + -71.0647 *dx*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -50.6656 *lens_ipow(dx, 5)*lens_ipow(lambda, 5) + -2976.11 *lens_ipow(dx, 5)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.023315 *lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(lambda, 4) + -0.804972 *x*lens_ipow(dy, 4)*lens_ipow(lambda, 6) + -0.000776015 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 8) + -0.0041045 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -6.4823e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 8);
const float out_dy =  + 2.40458e-06  + -0.349228 *dy + -0.00885275 *y + -2.73429e-07 *x + 2.44939e-06 *y*dy + 1.80382e-08 *x*y + 0.840591 *lens_ipow(dy, 3) + 0.905061 *lens_ipow(dx, 2)*dy + 0.013117 *y*lens_ipow(dy, 2) + 0.00302914 *y*lens_ipow(dx, 2) + 3.4731e-05 *lens_ipow(y, 2)*dy + 0.00785333 *x*dx*dy + 2.48971e-05 *x*y*dx + 2.13674e-05 *lens_ipow(x, 2)*dy + 3.44812e-07 *lens_ipow(x, 2)*y + 0.000419495 *y*lens_ipow(lambda, 3) + 7.40496e-07 *lens_ipow(y, 3)*lambda + 0.0163011 *dy*lens_ipow(lambda, 4) + 0.00210992 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 1.3325e-05 *x*lens_ipow(y, 2)*dx*dy + 1.85897e-11 *lens_ipow(x, 3)*lens_ipow(y, 2) + -57.1146 *lens_ipow(dx, 6)*dy + -0.0326856 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 5.34934e-08 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -0.00825709 *x*dx*dy*lens_ipow(lambda, 4) + -0.00011687 *x*y*dx*lens_ipow(lambda, 4) + -0.0025329 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 4.07096e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.0114687 *x*y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -1323.42 *lens_ipow(dy, 9) + 6.28052e-09 *lens_ipow(y, 6)*lens_ipow(dx, 2)*dy + -50.7618 *lens_ipow(dy, 5)*lens_ipow(lambda, 5) + 1.42775e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 3) + -2611.24 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 4) + -0.616453 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 6) + 28.2314 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.000774292 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 8) + -6.7578e-06 *lens_ipow(y, 3)*lens_ipow(lambda, 8) + 1.87035e-15 *lens_ipow(y, 10)*dy + -0.00363419 *lens_ipow(x, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 6);
const float out_transmittance =  + 0.148064  + 0.301995 *lambda + -2.0734e-05 *dx + 1.70581e-07 *y + 3.97549e-08 *x + -0.0112984 *lens_ipow(dy, 2) + -0.013445 *lens_ipow(dx, 2) + -1.30829e-05 *y*dy + -2.1516e-07 *lens_ipow(y, 2) + -1.71305e-05 *x*dx + 9.71968e-09 *x*y + -1.0729e-07 *lens_ipow(x, 2) + -0.246483 *lens_ipow(lambda, 3) + 0.00133384 *lens_ipow(dx, 2)*dy + 6.88755e-05 *y*dx*dy + -2.77381 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0238315 *y*lens_ipow(dy, 3) + -0.0272569 *y*lens_ipow(dx, 2)*dy + -0.000224861 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -7.86473e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.00716e-06 *lens_ipow(y, 3)*dy + -0.0260068 *x*dx*lens_ipow(dy, 2) + -0.0232514 *x*lens_ipow(dx, 3) + -0.000324813 *x*y*dx*dy + -1.11621e-06 *x*lens_ipow(y, 2)*dx + -8.03731e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.000228197 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -1.09579e-06 *lens_ipow(x, 2)*y*dy + -4.38463e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.06634e-06 *lens_ipow(x, 3)*dx + -37.5481 *lens_ipow(dy, 6) + -31.8755 *lens_ipow(dx, 6) + -1.16464e-08 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -4.61178e-12 *lens_ipow(y, 6) + -0.0365375 *x*dx*lens_ipow(dy, 4) + -6.25054e-12 *lens_ipow(x, 6) + 0.0742931 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -104.61 *y*lens_ipow(dy, 9) + 0.940835 *lens_ipow(x, 2)*lens_ipow(dx, 8) + 0.430603 *lens_ipow(lambda, 11);
