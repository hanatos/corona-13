float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + 0.00012656  + 0.00134211 *begin_dy + 188.258 *begin_dx + 0.763924 *begin_x + -2.6138e-06 *begin_x*begin_y + 32.2433 *begin_dx*lens_ipow(begin_dy, 2) + 36.1036 *lens_ipow(begin_dx, 3) + 2.01647 *begin_y*begin_dx*begin_dy + -0.00176571 *begin_y*lens_ipow(begin_dx, 2) + -2.19382e-05 *lens_ipow(begin_y, 2)*begin_dy + 0.0101 *lens_ipow(begin_y, 2)*begin_dx + 0.517272 *begin_x*lens_ipow(begin_dy, 2) + 2.67182 *begin_x*lens_ipow(begin_dx, 2) + 0.0162914 *begin_x*begin_y*begin_dy + 7.2713e-05 *begin_x*lens_ipow(begin_y, 2) + 0.0267636 *lens_ipow(begin_x, 2)*begin_dx + 8.0486e-05 *lens_ipow(begin_x, 3) + -15.854 *begin_dx*lens_ipow(begin_lambda, 3) + -0.000189382 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + 0.000224024 *begin_x*begin_y*lens_ipow(begin_dy, 2) + -0.179877 *begin_x*lens_ipow(begin_lambda, 4) + 0.00219533 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.000367953 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 1.08213e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + -2.44349e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_lambda, 2) + 5.41245e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + -1598.94 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -1.15876 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 4) + 4.26096e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + 5.25322e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 3) + -1004.87 *lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 3) + -0.416428 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + -0.00390952 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 5) + 0.258253 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 3) + 245261 *lens_ipow(begin_dx, 7)*lens_ipow(begin_dy, 2) + -1.57854 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 2) + 1.43705e-11 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 3)*begin_dy + 83.2242 *begin_dx*lens_ipow(begin_lambda, 10) + 0.885528 *begin_x*lens_ipow(begin_lambda, 10) + -5.6281e-05 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_lambda, 6);
  pred_y =  + 0.000391942  + 188.207 *begin_dy + -0.00104105 *begin_dx + 0.764316 *begin_y + 5.52489e-05 *begin_x + -2.88233e-06 *lens_ipow(begin_y, 2) + 0.000120519 *begin_x*begin_dx + -1.32712e-06 *lens_ipow(begin_x, 2) + 33.607 *lens_ipow(begin_dy, 3) + 39.2076 *lens_ipow(begin_dx, 2)*begin_dy + 2.69578 *begin_y*lens_ipow(begin_dy, 2) + 0.564695 *begin_y*lens_ipow(begin_dx, 2) + 0.027093 *lens_ipow(begin_y, 2)*begin_dy + 7.42741e-05 *lens_ipow(begin_y, 3) + 2.05443 *begin_x*begin_dx*begin_dy + 0.0164373 *begin_x*begin_y*begin_dx + 0.0102186 *lens_ipow(begin_x, 2)*begin_dy + 7.43968e-05 *lens_ipow(begin_x, 2)*begin_y + -2.79695e-07 *lens_ipow(begin_x, 3) + -15.5452 *begin_dy*lens_ipow(begin_lambda, 3) + 0.000256818 *begin_x*begin_y*begin_dx*begin_dy + -0.188057 *begin_y*lens_ipow(begin_lambda, 4) + 0.0429834 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + 0.000577833 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + -3.88665e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 0.151664 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -1603.66 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + -754.094 *lens_ipow(begin_dx, 4)*begin_dy*lens_ipow(begin_lambda, 2) + -1.35088 *begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + -0.00800449 *lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 4) + 7.55687e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -44.4892 *begin_y*lens_ipow(begin_dx, 6)*begin_lambda + -0.000915322 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 3) + -0.816715 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 5) + 1.2861e-09 *begin_x*lens_ipow(begin_y, 5)*begin_dx*begin_lambda + -0.716688 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5)*begin_lambda + -1767.98 *lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 4) + -0.00905914 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 6) + 82.1062 *begin_dy*lens_ipow(begin_lambda, 10) + 0.908817 *begin_y*lens_ipow(begin_lambda, 10);
  pred_dx =  + 1.87237e-06  + 8.19998e-06 *begin_dy + -0.748929 *begin_dx + -0.00835991 *begin_x + -0.000261817 *lens_ipow(begin_dx, 2) + -1.12739e-06 *begin_y*begin_dx + 0.274244 *begin_dx*lens_ipow(begin_dy, 2) + 0.228628 *lens_ipow(begin_dx, 3) + 0.000126294 *begin_y*begin_dx*begin_dy + -2.2389e-05 *lens_ipow(begin_y, 2)*begin_dx + 0.00223454 *begin_x*lens_ipow(begin_dy, 2) + 0.00132939 *begin_x*lens_ipow(begin_dx, 2) + 3.27662e-06 *begin_x*begin_y*begin_dy + -9.35409e-08 *begin_x*lens_ipow(begin_y, 2) + -2.99988e-05 *lens_ipow(begin_x, 2)*begin_dx + 8.48355e-10 *lens_ipow(begin_x, 2)*begin_y + -1.29369e-07 *lens_ipow(begin_x, 3) + 0.0849252 *begin_dx*lens_ipow(begin_lambda, 3) + 0.00063973 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + 1.34366e-05 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 1.54944e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 0.00326546 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*begin_lambda + 12.6211 *begin_dx*lens_ipow(begin_dy, 6) + -0.0116383 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 4) + -8.91708e-05 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 4) + 0.00463521 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2) + 5.44332e-07 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dy, 3) + 1.05694e-10 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx + -51.9444 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + 0.000303149 *begin_x*lens_ipow(begin_lambda, 7) + -825.17 *lens_ipow(begin_dx, 9) + -0.0150244 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 2) + -4.28184e-07 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_lambda, 4) + 4.70124e-13 *lens_ipow(begin_x, 8)*begin_dx + -42.8969 *begin_dx*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 5) + -56.7696 *lens_ipow(begin_dx, 5)*lens_ipow(begin_lambda, 5) + -2.67997e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 5) + -0.438074 *begin_dx*lens_ipow(begin_lambda, 10) + -0.0296301 *begin_x*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 8) + -0.063265 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 8);
  pred_dy =  + 6.35325e-07  + -0.748772 *begin_dy + -0.00836089 *begin_y + 2.31891e-06 *begin_y*begin_dx + 1.73749e-08 *begin_x*begin_y + 0.240824 *lens_ipow(begin_dy, 3) + 0.268167 *lens_ipow(begin_dx, 2)*begin_dy + 0.00138762 *begin_y*lens_ipow(begin_dy, 2) + 0.00225712 *begin_y*lens_ipow(begin_dx, 2) + -3.10447e-05 *lens_ipow(begin_y, 2)*begin_dy + -1.31275e-07 *lens_ipow(begin_y, 3) + 0.000988435 *begin_x*begin_dx*begin_dy + 5.16714e-06 *begin_x*begin_y*begin_dx + 6.39198e-10 *begin_x*lens_ipow(begin_y, 2) + -2.38253e-05 *lens_ipow(begin_x, 2)*begin_dy + -9.03176e-08 *lens_ipow(begin_x, 2)*begin_y + 0.0838683 *begin_dy*lens_ipow(begin_lambda, 3) + 0.000702087 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + 1.38421e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 9.54157e-06 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 0.000418565 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + 0.00293979 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*begin_lambda + -0.00955102 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + -42.2714 *lens_ipow(begin_dx, 6)*begin_dy + 0.000186414 *begin_y*lens_ipow(begin_lambda, 6) + -5.43152e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 4) + -9.30803e-05 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 4) + -51.9516 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + 0.00772445 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + -604.923 *lens_ipow(begin_dy, 9) + -4.01113e-07 *lens_ipow(begin_y, 4)*begin_dy*lens_ipow(begin_lambda, 4) + 4.59115e-13 *lens_ipow(begin_y, 8)*begin_dy + 2.6933e-13 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 4)*begin_dy + -57.1976 *lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 5) + -44.2207 *lens_ipow(begin_dx, 4)*begin_dy*lens_ipow(begin_lambda, 5) + -0.0251274 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 3) + -0.429458 *begin_dy*lens_ipow(begin_lambda, 10) + -0.0610665 *begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 8) + -0.518379 *begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 6) + 1.88191e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 4);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 188.258  + 32.2433 *lens_ipow(begin_dy, 2) + 108.311 *lens_ipow(begin_dx, 2) + 2.01647 *begin_y*begin_dy + -0.00353142 *begin_y*begin_dx + 0.0101 *lens_ipow(begin_y, 2) + 5.34365 *begin_x*begin_dx + 0.0267636 *lens_ipow(begin_x, 2) + -15.854 *lens_ipow(begin_lambda, 3) + -0.000189382 *lens_ipow(begin_y, 2)*begin_dy + 0.00219533 *begin_x*begin_y*lens_ipow(begin_dy, 2) + 0.000367953 *lens_ipow(begin_x, 2)*begin_y*begin_dy + -4796.81 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -2.31752 *begin_x*begin_dx*lens_ipow(begin_lambda, 4) + 0.000127829 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 0.000157597 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2) + -5024.37 *lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 3) + -0.416428 *begin_y*begin_dy*lens_ipow(begin_lambda, 5) + 0.516505 *begin_x*begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + 1.71683e+06 *lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 2) + -7.89271 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 2) + 83.2242 *lens_ipow(begin_lambda, 10) + -5.6281e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_lambda, 6)+0.0f;
  dx1_domega0[0][1] =  + 0.00134211  + 64.4866 *begin_dx*begin_dy + 2.01647 *begin_y*begin_dx + -2.19382e-05 *lens_ipow(begin_y, 2) + 1.03454 *begin_x*begin_dy + 0.0162914 *begin_x*begin_y + -0.000189382 *lens_ipow(begin_y, 2)*begin_dx + 0.000448047 *begin_x*begin_y*begin_dy + 0.00439065 *begin_x*begin_y*begin_dx*begin_dy + 0.000367953 *lens_ipow(begin_x, 2)*begin_y*begin_dx + -3197.87 *lens_ipow(begin_dx, 3)*begin_dy*lens_ipow(begin_lambda, 2) + -0.416428 *begin_y*begin_dx*lens_ipow(begin_lambda, 5) + -0.00390952 *begin_x*begin_y*lens_ipow(begin_lambda, 5) + 0.258253 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 3) + 490523 *lens_ipow(begin_dx, 7)*begin_dy + 1.43705e-11 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 3)+0.0f;
  dx1_domega0[1][0] =  + -0.00104105  + 0.000120519 *begin_x + 78.4152 *begin_dx*begin_dy + 1.12939 *begin_y*begin_dx + 2.05443 *begin_x*begin_dy + 0.0164373 *begin_x*begin_y + 0.000256818 *begin_x*begin_y*begin_dy + 0.000577833 *begin_x*lens_ipow(begin_y, 2)*begin_dy + 0.151664 *begin_x*begin_y*lens_ipow(begin_dy, 2)*begin_lambda + -3207.33 *begin_dx*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + -3016.38 *lens_ipow(begin_dx, 3)*begin_dy*lens_ipow(begin_lambda, 2) + -266.935 *begin_y*lens_ipow(begin_dx, 5)*begin_lambda + -0.00183064 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_lambda, 3) + -0.816715 *begin_x*begin_dy*lens_ipow(begin_lambda, 5) + 1.2861e-09 *begin_x*lens_ipow(begin_y, 5)*begin_lambda + -0.00905914 *begin_x*begin_y*lens_ipow(begin_lambda, 6)+0.0f;
  dx1_domega0[1][1] =  + 188.207  + 100.821 *lens_ipow(begin_dy, 2) + 39.2076 *lens_ipow(begin_dx, 2) + 5.39155 *begin_y*begin_dy + 0.027093 *lens_ipow(begin_y, 2) + 2.05443 *begin_x*begin_dx + 0.0102186 *lens_ipow(begin_x, 2) + -15.5452 *lens_ipow(begin_lambda, 3) + 0.000256818 *begin_x*begin_y*begin_dx + 0.12895 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 0.000577833 *begin_x*lens_ipow(begin_y, 2)*begin_dx + 0.303327 *begin_x*begin_y*begin_dx*begin_dy*begin_lambda + -4810.99 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -754.094 *lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 2) + -2.70175 *begin_y*begin_dy*lens_ipow(begin_lambda, 4) + -0.00800449 *lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 4) + 1.51137e-06 *lens_ipow(begin_y, 5)*begin_dy + -0.816715 *begin_x*begin_dx*lens_ipow(begin_lambda, 5) + -3.58344 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4)*begin_lambda + -8839.92 *lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 4) + 82.1062 *lens_ipow(begin_lambda, 10)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
