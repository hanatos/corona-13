const float out_x =  + 0.00012656  + 0.00134211 *dy + 188.258 *dx + 0.763924 *x + -2.6138e-06 *x*y + 32.2433 *dx*lens_ipow(dy, 2) + 36.1036 *lens_ipow(dx, 3) + 2.01647 *y*dx*dy + -0.00176571 *y*lens_ipow(dx, 2) + -2.19382e-05 *lens_ipow(y, 2)*dy + 0.0101 *lens_ipow(y, 2)*dx + 0.517272 *x*lens_ipow(dy, 2) + 2.67182 *x*lens_ipow(dx, 2) + 0.0162914 *x*y*dy + 7.2713e-05 *x*lens_ipow(y, 2) + 0.0267636 *lens_ipow(x, 2)*dx + 8.0486e-05 *lens_ipow(x, 3) + -15.854 *dx*lens_ipow(lambda, 3) + -0.000189382 *lens_ipow(y, 2)*dx*dy + 0.000224024 *x*y*lens_ipow(dy, 2) + -0.179877 *x*lens_ipow(lambda, 4) + 0.00219533 *x*y*dx*lens_ipow(dy, 2) + 0.000367953 *lens_ipow(x, 2)*y*dx*dy + 1.08213e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + -2.44349e-05 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + 5.41245e-09 *lens_ipow(x, 3)*lens_ipow(y, 2) + -1598.94 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.15876 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + 4.26096e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3) + 5.25322e-05 *lens_ipow(x, 4)*lens_ipow(dx, 3) + -1004.87 *lens_ipow(dx, 5)*lens_ipow(lambda, 3) + -0.416428 *y*dx*dy*lens_ipow(lambda, 5) + -0.00390952 *x*y*dy*lens_ipow(lambda, 5) + 0.258253 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + 245261 *lens_ipow(dx, 7)*lens_ipow(dy, 2) + -1.57854 *lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(lambda, 2) + 1.43705e-11 *lens_ipow(x, 5)*lens_ipow(y, 3)*dy + 83.2242 *dx*lens_ipow(lambda, 10) + 0.885528 *x*lens_ipow(lambda, 10) + -5.6281e-05 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 6);
const float out_y =  + 0.000391942  + 188.207 *dy + -0.00104105 *dx + 0.764316 *y + 5.52489e-05 *x + -2.88233e-06 *lens_ipow(y, 2) + 0.000120519 *x*dx + -1.32712e-06 *lens_ipow(x, 2) + 33.607 *lens_ipow(dy, 3) + 39.2076 *lens_ipow(dx, 2)*dy + 2.69578 *y*lens_ipow(dy, 2) + 0.564695 *y*lens_ipow(dx, 2) + 0.027093 *lens_ipow(y, 2)*dy + 7.42741e-05 *lens_ipow(y, 3) + 2.05443 *x*dx*dy + 0.0164373 *x*y*dx + 0.0102186 *lens_ipow(x, 2)*dy + 7.43968e-05 *lens_ipow(x, 2)*y + -2.79695e-07 *lens_ipow(x, 3) + -15.5452 *dy*lens_ipow(lambda, 3) + 0.000256818 *x*y*dx*dy + -0.188057 *y*lens_ipow(lambda, 4) + 0.0429834 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 0.000577833 *x*lens_ipow(y, 2)*dx*dy + -3.88665e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + 0.151664 *x*y*dx*lens_ipow(dy, 2)*lambda + -1603.66 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -754.094 *lens_ipow(dx, 4)*dy*lens_ipow(lambda, 2) + -1.35088 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.00800449 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 4) + 7.55687e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -44.4892 *y*lens_ipow(dx, 6)*lambda + -0.000915322 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.816715 *x*dx*dy*lens_ipow(lambda, 5) + 1.2861e-09 *x*lens_ipow(y, 5)*dx*lambda + -0.716688 *lens_ipow(x, 2)*lens_ipow(dy, 5)*lambda + -1767.98 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + -0.00905914 *x*y*dx*lens_ipow(lambda, 6) + 82.1062 *dy*lens_ipow(lambda, 10) + 0.908817 *y*lens_ipow(lambda, 10);
const float out_dx =  + 1.87237e-06  + 8.19998e-06 *dy + -0.748929 *dx + -0.00835991 *x + -0.000261817 *lens_ipow(dx, 2) + -1.12739e-06 *y*dx + 0.274244 *dx*lens_ipow(dy, 2) + 0.228628 *lens_ipow(dx, 3) + 0.000126294 *y*dx*dy + -2.2389e-05 *lens_ipow(y, 2)*dx + 0.00223454 *x*lens_ipow(dy, 2) + 0.00132939 *x*lens_ipow(dx, 2) + 3.27662e-06 *x*y*dy + -9.35409e-08 *x*lens_ipow(y, 2) + -2.99988e-05 *lens_ipow(x, 2)*dx + 8.48355e-10 *lens_ipow(x, 2)*y + -1.29369e-07 *lens_ipow(x, 3) + 0.0849252 *dx*lens_ipow(lambda, 3) + 0.00063973 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 1.34366e-05 *lens_ipow(x, 2)*y*dx*dy + 1.54944e-05 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 0.00326546 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lambda + 12.6211 *dx*lens_ipow(dy, 6) + -0.0116383 *y*dx*dy*lens_ipow(lambda, 4) + -8.91708e-05 *x*y*dy*lens_ipow(lambda, 4) + 0.00463521 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + 5.44332e-07 *lens_ipow(x, 3)*y*lens_ipow(dy, 3) + 1.05694e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + -51.9444 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.000303149 *x*lens_ipow(lambda, 7) + -825.17 *lens_ipow(dx, 9) + -0.0150244 *lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(lambda, 2) + -4.28184e-07 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 4) + 4.70124e-13 *lens_ipow(x, 8)*dx + -42.8969 *dx*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -56.7696 *lens_ipow(dx, 5)*lens_ipow(lambda, 5) + -2.67997e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 5) + -0.438074 *dx*lens_ipow(lambda, 10) + -0.0296301 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -0.063265 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 8);
const float out_dy =  + 6.35325e-07  + -0.748772 *dy + -0.00836089 *y + 2.31891e-06 *y*dx + 1.73749e-08 *x*y + 0.240824 *lens_ipow(dy, 3) + 0.268167 *lens_ipow(dx, 2)*dy + 0.00138762 *y*lens_ipow(dy, 2) + 0.00225712 *y*lens_ipow(dx, 2) + -3.10447e-05 *lens_ipow(y, 2)*dy + -1.31275e-07 *lens_ipow(y, 3) + 0.000988435 *x*dx*dy + 5.16714e-06 *x*y*dx + 6.39198e-10 *x*lens_ipow(y, 2) + -2.38253e-05 *lens_ipow(x, 2)*dy + -9.03176e-08 *lens_ipow(x, 2)*y + 0.0838683 *dy*lens_ipow(lambda, 3) + 0.000702087 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 1.38421e-05 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 9.54157e-06 *x*lens_ipow(y, 2)*dx*dy + 0.000418565 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 0.00293979 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lambda + -0.00955102 *x*dx*dy*lens_ipow(lambda, 3) + -42.2714 *lens_ipow(dx, 6)*dy + 0.000186414 *y*lens_ipow(lambda, 6) + -5.43152e-06 *lens_ipow(y, 3)*lens_ipow(dx, 4) + -9.30803e-05 *x*y*dx*lens_ipow(lambda, 4) + -51.9516 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + 0.00772445 *x*y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -604.923 *lens_ipow(dy, 9) + -4.01113e-07 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 4) + 4.59115e-13 *lens_ipow(y, 8)*dy + 2.6933e-13 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy + -57.1976 *lens_ipow(dy, 5)*lens_ipow(lambda, 5) + -44.2207 *lens_ipow(dx, 4)*dy*lens_ipow(lambda, 5) + -0.0251274 *lens_ipow(x, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 3) + -0.429458 *dy*lens_ipow(lambda, 10) + -0.0610665 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -0.518379 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 6) + 1.88191e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 4);
const float out_transmittance =  + 0.364511  + 0.309453 *lambda + 1.55534e-07 *y + 2.44736e-08 *x + -0.0239557 *lens_ipow(dy, 2) + -0.024496 *lens_ipow(dx, 2) + -5.37023e-05 *y*dy + -7.0994e-07 *lens_ipow(y, 2) + -0.000127248 *x*dx + 1.70155e-08 *x*y + -5.61926e-07 *lens_ipow(x, 2) + -0.256253 *lens_ipow(lambda, 3) + -0.0135344 *dx*lens_ipow(dy, 2) + 0.0013316 *lens_ipow(dx, 2)*dy + -0.0246299 *y*lens_ipow(dy, 3) + -0.0196914 *y*lens_ipow(dx, 2)*dy + -0.000257966 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.43779e-06 *lens_ipow(y, 3)*dy + -0.0235474 *x*lens_ipow(dx, 3) + -0.000303303 *x*y*dx*dy + -1.03508e-06 *x*lens_ipow(y, 2)*dx + -0.000273327 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -1.24467e-06 *lens_ipow(x, 2)*y*dy + -5.46667e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + 1.08498e-08 *lens_ipow(x, 3)*dy + -1.46828e-06 *lens_ipow(x, 3)*dx + -18.5483 *lens_ipow(dy, 6) + -82.0992 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -27.1795 *lens_ipow(dx, 6) + -2.74952e-07 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -4.06063e-12 *lens_ipow(y, 6) + -0.89879 *x*dx*lens_ipow(dy, 4) + 0.00774249 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.00263181 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -4.54312e-08 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -7.4871e-12 *lens_ipow(x, 6) + 0.14356 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -1.30749e-14 *x*lens_ipow(y, 8)*dx + 0.789868 *lens_ipow(x, 2)*lens_ipow(dx, 8) + 0.455875 *lens_ipow(lambda, 11);
