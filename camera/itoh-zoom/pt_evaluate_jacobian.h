const float dx00 =  + -0.37657  + -2.53798e-06 *y + 0.643104 *lens_ipow(dy, 2) + 2.12778 *lens_ipow(dx, 2) + 0.0132105 *y*dy + 6.56453e-05 *lens_ipow(y, 2) + 0.0402665 *x*dx + 0.000203432 *lens_ipow(x, 2) + -0.100499 *lens_ipow(lambda, 3) + 0.465924 *x*lens_ipow(dx, 3) + 0.0035139 *x*y*dx*dy + -2.93923e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -3.20268 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 0.83254 *y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + 0.00170085 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + 2.23781e-05 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -0.0187963 *y*dy*lens_ipow(lambda, 5) + -0.0920465 *x*dx*lens_ipow(lambda, 6) + -0.0529598 *lens_ipow(x, 2)*lens_ipow(dy, 6) + -2.66692e-09 *lens_ipow(x, 6)*lens_ipow(lambda, 3) + 0.534569 *lens_ipow(lambda, 10) + -69.3283 *lens_ipow(dy, 4)*lens_ipow(lambda, 6) + -2.72419 *x*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx01 =  + 1.97042e-05  + -2.53798e-06 *x + 0.931397 *dx*dy + 0.0140607 *y*dx + 0.0132105 *x*dy + 0.000131291 *x*y + 0.0728056 *y*dx*lens_ipow(dy, 2) + 0.00175695 *lens_ipow(x, 2)*dx*dy + -1.95949e-08 *lens_ipow(x, 3)*y + 118.81 *lens_ipow(dx, 5)*dy + 0.83254 *x*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -1.51328 *dx*dy*lens_ipow(lambda, 5) + -0.0187963 *x*dy*lens_ipow(lambda, 5) + -1.19678 *y*lens_ipow(dx, 3)*lens_ipow(lambda, 6)+0.0f;
const float dx02 =  + 97.9961  + -0.120149 *dx + 1.87661 *lens_ipow(lambda, 2) + 27.8227 *lens_ipow(dy, 2) + 95.3768 *lens_ipow(dx, 2) + 0.931397 *y*dy + 0.00703035 *lens_ipow(y, 2) + 4.25557 *x*dx + 0.0201332 *lens_ipow(x, 2) + 0.0364028 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.698886 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 0.00175695 *lens_ipow(x, 2)*y*dy + -6.40536 *x*dx*lens_ipow(lambda, 3) + -55557.2 *lens_ipow(dx, 6) + 594.051 *y*lens_ipow(dx, 4)*dy + 1.66508 *x*y*dx*dy*lens_ipow(lambda, 2) + 0.000425213 *lens_ipow(x, 4)*lens_ipow(dy, 2) + 8.95124e-06 *lens_ipow(x, 5)*dx + -1.51328 *y*dy*lens_ipow(lambda, 5) + -550032 *lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -0.0460233 *lens_ipow(x, 2)*lens_ipow(lambda, 6) + -37081.9 *lens_ipow(dx, 4)*lens_ipow(lambda, 5) + -1.79517 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 6) + -1.3621 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx03 =  + -0.0940598 *dy + 55.6454 *dx*dy + 0.931397 *y*dx + 1.28621 *x*dy + 0.0132105 *x*y + 0.0728056 *lens_ipow(y, 2)*dx*dy + 0.00175695 *lens_ipow(x, 2)*y*dx + 118.81 *y*lens_ipow(dx, 5) + 0.83254 *x*y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.000850426 *lens_ipow(x, 4)*dx*dy + -1.51328 *y*dx*lens_ipow(lambda, 5) + -0.0187963 *x*y*lens_ipow(lambda, 5) + -733377 *lens_ipow(dx, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -0.10592 *lens_ipow(x, 3)*lens_ipow(dy, 5) + -277.313 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 6) + -2.72419 *lens_ipow(x, 2)*dx*dy*lens_ipow(lambda, 6)+0.0f;
const float dx04 =  + 3.75323 *dx*lambda + -0.301496 *x*lens_ipow(lambda, 2) + -9.60804 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 1.66508 *x*y*lens_ipow(dx, 2)*dy*lambda + -7.56641 *y*dx*dy*lens_ipow(lambda, 4) + -0.0939815 *x*y*dy*lens_ipow(lambda, 4) + -366688 *lens_ipow(dx, 3)*lens_ipow(dy, 4)*lambda + -0.27614 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 5) + -37081.9 *lens_ipow(dx, 5)*lens_ipow(lambda, 4) + -1.14296e-09 *lens_ipow(x, 7)*lens_ipow(lambda, 2) + -3.59034 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 5) + 5.34569 *x*lens_ipow(lambda, 9) + -415.97 *x*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -8.17258 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx10 =  + 4.24285e-06 *y + 0.958745 *dx*dy + 0.0132771 *y*dx + 2.38106e-07 *lens_ipow(y, 2) + 0.013814 *x*dy + 0.00012964 *x*y + 0.00170548 *lens_ipow(y, 2)*dx*dy + -1.22159e-08 *x*lens_ipow(y, 3) + -0.996917 *dx*dy*lens_ipow(lambda, 4) + 0.71917 *y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 6.18071 *x*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.017372 *y*dx*lens_ipow(lambda, 5) + -15.1437 *x*lens_ipow(dy, 5)*lens_ipow(lambda, 4)+0.0f;
const float dx11 =  + -0.374459  + 0.000321517 *dy + 0.000273961 *dx + 4.24285e-06 *x + 1.67327 *lens_ipow(dy, 2) + 0.65598 *lens_ipow(dx, 2) + 0.038648 *y*dy + 0.000181981 *lens_ipow(y, 2) + 0.0132771 *x*dx + 4.76212e-07 *x*y + 6.48198e-05 *lens_ipow(x, 2) + -0.111376 *lens_ipow(lambda, 3) + 0.00341097 *x*y*dx*dy + -1.83238e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 1.07766 *y*lens_ipow(dy, 3)*lambda + 3.99506e-05 *lens_ipow(y, 4)*lens_ipow(dy, 2) + 0.71917 *x*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.017372 *x*dx*lens_ipow(lambda, 5) + -180.329 *lens_ipow(dx, 6)*lens_ipow(lambda, 2) + 4.34618e-06 *lens_ipow(y, 5)*lens_ipow(dx, 2)*dy + -0.175485 *y*dy*lens_ipow(lambda, 7) + 0.617364 *lens_ipow(lambda, 10) + -13.6221 *lens_ipow(dy, 2)*lens_ipow(lambda, 8) + -0.0164067 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 6) + 2.96072e-12 *lens_ipow(y, 9)*dy+0.0f;
const float dx12 =  + -0.000754665  + 0.000273961 *y + 66.5907 *dx*dy + 1.31196 *y*dx + 0.958745 *x*dy + 0.0132771 *x*y + 0.00170548 *x*lens_ipow(y, 2)*dy + -53422.1 *dx*lens_ipow(dy, 5) + -0.996917 *x*dy*lens_ipow(lambda, 4) + 0.71917 *x*y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 6.18071 *lens_ipow(x, 2)*dx*lens_ipow(dy, 3) + -0.017372 *x*y*lens_ipow(lambda, 5) + -1081.97 *y*lens_ipow(dx, 5)*lens_ipow(lambda, 2) + 1.44873e-06 *lens_ipow(y, 6)*dx*dy + -1.99787e+06 *lens_ipow(dx, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 4) + -0.0109378 *lens_ipow(y, 3)*dx*lens_ipow(lambda, 6)+0.0f;
const float dx13 =  + 97.9425  + 0.000321517 *y + 2.18591 *lens_ipow(lambda, 2) + 83.5636 *lens_ipow(dy, 2) + 33.2953 *lens_ipow(dx, 2) + 3.34655 *y*dy + 0.019324 *lens_ipow(y, 2) + 0.958745 *x*dx + 0.00690698 *lens_ipow(x, 2) + 0.00170548 *x*lens_ipow(y, 2)*dx + 1.61648 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda + -133555 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 1.59802e-05 *lens_ipow(y, 5)*dy + -0.996917 *x*dx*lens_ipow(lambda, 4) + 1.43834 *x*y*dx*dy*lens_ipow(lambda, 2) + 9.27107 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -959504 *lens_ipow(dy, 8) + 7.24363e-07 *lens_ipow(y, 6)*lens_ipow(dx, 2) + -51027 *lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -0.0877426 *lens_ipow(y, 2)*lens_ipow(lambda, 7) + -1.4984e+06 *lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -27.2441 *y*dy*lens_ipow(lambda, 8) + 2.96072e-13 *lens_ipow(y, 10) + -37.8592 *lens_ipow(x, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 4)+0.0f;
const float dx14 =  + 4.37181 *dy*lambda + -0.334127 *y*lens_ipow(lambda, 2) + 0.538828 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -3.98767 *x*dx*dy*lens_ipow(lambda, 3) + 1.43834 *x*y*dx*lens_ipow(dy, 2)*lambda + -0.08686 *x*y*dx*lens_ipow(lambda, 4) + -360.658 *y*lens_ipow(dx, 6)*lambda + -51027 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + -0.614198 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 6) + -1.99787e+06 *lens_ipow(dx, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + 6.17364 *y*lens_ipow(lambda, 9) + -108.976 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 7) + -0.0328133 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 5) + -30.2874 *lens_ipow(x, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 3)+0.0f;
const float dx20 =  + -0.00884588  + 0.00297861 *lens_ipow(dy, 2) + 0.0124968 *lens_ipow(dx, 2) + 3.17635e-05 *y*dy + 3.14338e-07 *lens_ipow(y, 2) + 6.05354e-05 *x*dx + 0.00039821 *lens_ipow(lambda, 3) + 2.18335e-06 *lens_ipow(x, 2)*lambda + 2.6712e-06 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.0042351 *x*lens_ipow(dx, 3) + 1.60798e-05 *x*y*dx*dy + -0.0317466 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -0.00014451 *y*dy*lens_ipow(lambda, 4) + 0.0587658 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -1.79565e-07 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + 3.11845e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + 0.0113469 *y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + -6.40777e-11 *lens_ipow(x, 6)*lens_ipow(dy, 2) + 6.91786e-12 *lens_ipow(x, 7)*dx + -0.804972 *lens_ipow(dy, 4)*lens_ipow(lambda, 6) + -0.00155203 *x*dx*lens_ipow(lambda, 8) + -0.00820899 *x*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -1.94469e-05 *lens_ipow(x, 2)*lens_ipow(lambda, 8)+0.0f;
const float dx21 =  + 0.00840566 *dx*dy + 5.31689e-05 *y*dx + 3.17635e-05 *x*dy + 6.28676e-07 *x*y + 0.00184228 *y*dx*lens_ipow(dy, 2) + 5.3424e-06 *x*y*lens_ipow(dy, 2) + 8.03988e-06 *lens_ipow(x, 2)*dx*dy + -0.0123753 *dx*dy*lens_ipow(lambda, 3) + -9.4402e-05 *y*dx*lens_ipow(lambda, 4) + 5.64665e-08 *lens_ipow(y, 4)*dx*dy + -0.00014451 *x*dy*lens_ipow(lambda, 4) + -1.79565e-07 *lens_ipow(x, 2)*y*lens_ipow(dx, 3) + 0.0113469 *x*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + -0.04663 *y*lens_ipow(dx, 5)*lens_ipow(lambda, 4)+0.0f;
const float dx22 =  + -0.349126  + 0.846317 *lens_ipow(dy, 2) + 2.48523 *lens_ipow(dx, 2) + 0.00840566 *y*dy + 2.65844e-05 *lens_ipow(y, 2) + 0.0249935 *x*dx + 3.02677e-05 *lens_ipow(x, 2) + 0.0195371 *lens_ipow(lambda, 4) + 0.000921139 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.00635264 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 8.03988e-06 *lens_ipow(x, 2)*y*dy + -0.0123753 *y*dy*lens_ipow(lambda, 3) + -396.635 *lens_ipow(dx, 6) + -4.7201e-05 *lens_ipow(y, 2)*lens_ipow(lambda, 4) + 1.12933e-08 *lens_ipow(y, 5)*dy + -0.0634932 *x*dx*lens_ipow(lambda, 4) + 0.0881487 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -2.69348e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.24738e-07 *lens_ipow(x, 5)*dx + -15193.8 *lens_ipow(dx, 2)*lens_ipow(dy, 6) + 0.0226938 *x*y*dx*dy*lens_ipow(lambda, 4) + 8.64732e-13 *lens_ipow(x, 8) + -71.0647 *lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -253.328 *lens_ipow(dx, 4)*lens_ipow(lambda, 5) + -14880.6 *lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.116575 *lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(lambda, 4) + -0.000776015 *lens_ipow(x, 2)*lens_ipow(lambda, 8) + -0.0041045 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx23 =  + 1.69263 *dx*dy + 0.00840566 *y*dx + 0.00595722 *x*dy + 3.17635e-05 *x*y + 0.00184228 *lens_ipow(y, 2)*dx*dy + 5.3424e-06 *x*lens_ipow(y, 2)*dy + 8.03988e-06 *lens_ipow(x, 2)*y*dx + -0.0123753 *y*dx*lens_ipow(lambda, 3) + 1.12933e-08 *lens_ipow(y, 5)*dx + -0.00014451 *x*y*lens_ipow(lambda, 4) + 0.0587658 *lens_ipow(x, 2)*lens_ipow(dx, 3)*dy + -30387.7 *lens_ipow(dx, 3)*lens_ipow(dy, 5) + 0.0113469 *x*y*lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -1.83079e-11 *lens_ipow(x, 7)*dy + -284.259 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + -5952.23 *lens_ipow(dx, 5)*dy*lens_ipow(lambda, 4) + -3.21989 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 6) + -0.00820899 *lens_ipow(x, 2)*dx*dy*lens_ipow(lambda, 6)+0.0f;
const float dx24 =  + 0.00119463 *x*lens_ipow(lambda, 2) + 7.27783e-07 *lens_ipow(x, 3) + 0.0781485 *dx*lens_ipow(lambda, 3) + -0.0371259 *y*dx*dy*lens_ipow(lambda, 2) + -0.000188804 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 3) + -0.126986 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.000578041 *x*y*dy*lens_ipow(lambda, 3) + 0.0453877 *x*y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + -355.323 *dx*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -253.328 *lens_ipow(dx, 5)*lens_ipow(lambda, 4) + -11904.5 *lens_ipow(dx, 5)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.0932599 *lens_ipow(y, 2)*lens_ipow(dx, 5)*lens_ipow(lambda, 3) + -4.82983 *x*lens_ipow(dy, 4)*lens_ipow(lambda, 5) + -0.00620812 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 7) + -0.024627 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -5.18584e-05 *lens_ipow(x, 3)*lens_ipow(lambda, 7)+0.0f;
const float dx30 =  + -2.73429e-07  + 1.80382e-08 *y + 0.00785333 *dx*dy + 2.48971e-05 *y*dx + 4.27347e-05 *x*dy + 6.89624e-07 *x*y + 1.3325e-05 *lens_ipow(y, 2)*dx*dy + 5.57691e-11 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.00825709 *dx*dy*lens_ipow(lambda, 4) + -0.00011687 *y*dx*lens_ipow(lambda, 4) + -0.0050658 *x*lens_ipow(dy, 5) + 8.14192e-06 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.0114687 *y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 4.28324e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 3) + -0.00726839 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 6)+0.0f;
const float dx31 =  + -0.00885275  + 2.44939e-06 *dy + 1.80382e-08 *x + 0.013117 *lens_ipow(dy, 2) + 0.00302914 *lens_ipow(dx, 2) + 6.9462e-05 *y*dy + 2.48971e-05 *x*dx + 3.44812e-07 *lens_ipow(x, 2) + 0.000419495 *lens_ipow(lambda, 3) + 2.22149e-06 *lens_ipow(y, 2)*lambda + 0.00421983 *y*lens_ipow(dy, 3) + 2.66499e-05 *x*y*dx*dy + 3.71794e-11 *lens_ipow(x, 3)*y + -0.0326856 *lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 2.67467e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.00011687 *x*dx*lens_ipow(lambda, 4) + 8.14192e-06 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + 0.0114687 *x*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 3.76831e-08 *lens_ipow(y, 5)*lens_ipow(dx, 2)*dy + 2.85549e-07 *lens_ipow(x, 3)*y*dx*dy*lens_ipow(lambda, 3) + -0.616453 *lens_ipow(dx, 4)*lens_ipow(lambda, 6) + 28.2314 *lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.00154858 *y*dy*lens_ipow(lambda, 8) + -2.02734e-05 *lens_ipow(y, 2)*lens_ipow(lambda, 8) + 1.87035e-14 *lens_ipow(y, 9)*dy+0.0f;
const float dx32 =  + 1.81012 *dx*dy + 0.00605829 *y*dx + 0.00785333 *x*dy + 2.48971e-05 *x*y + 1.3325e-05 *x*lens_ipow(y, 2)*dy + -342.688 *lens_ipow(dx, 5)*dy + -0.00825709 *x*dy*lens_ipow(lambda, 4) + -0.00011687 *x*y*lens_ipow(lambda, 4) + 8.14192e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + 0.0114687 *x*y*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 1.2561e-08 *lens_ipow(y, 6)*dx*dy + 1.42775e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 3) + -5222.48 *dx*lens_ipow(dy, 5)*lens_ipow(lambda, 4) + -2.46581 *y*lens_ipow(dx, 3)*lens_ipow(lambda, 6) + 112.925 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4)+0.0f;
const float dx33 =  + -0.349228  + 2.44939e-06 *y + 2.52177 *lens_ipow(dy, 2) + 0.905061 *lens_ipow(dx, 2) + 0.026234 *y*dy + 3.4731e-05 *lens_ipow(y, 2) + 0.00785333 *x*dx + 2.13674e-05 *lens_ipow(x, 2) + 0.0163011 *lens_ipow(lambda, 4) + 0.00632975 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 1.3325e-05 *x*lens_ipow(y, 2)*dx + -57.1146 *lens_ipow(dx, 6) + -0.0653711 *y*dy*lens_ipow(lambda, 4) + 1.06987e-07 *lens_ipow(y, 5)*dy + -0.00825709 *x*dx*lens_ipow(lambda, 4) + -0.0126645 *lens_ipow(x, 2)*lens_ipow(dy, 4) + 4.07096e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.0229373 *x*y*dx*dy*lens_ipow(lambda, 3) + -11910.8 *lens_ipow(dy, 8) + 6.28052e-09 *lens_ipow(y, 6)*lens_ipow(dx, 2) + -253.809 *lens_ipow(dy, 4)*lens_ipow(lambda, 5) + 1.42775e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 3) + -13056.2 *lens_ipow(dx, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + 56.4627 *y*lens_ipow(dx, 4)*dy*lens_ipow(lambda, 4) + -0.000774292 *lens_ipow(y, 2)*lens_ipow(lambda, 8) + 1.87035e-15 *lens_ipow(y, 10) + -0.0109026 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx34 =  + 0.00125849 *y*lens_ipow(lambda, 2) + 7.40496e-07 *lens_ipow(y, 3) + 0.0652046 *dy*lens_ipow(lambda, 3) + -0.130742 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.0330284 *x*dx*dy*lens_ipow(lambda, 3) + -0.000467478 *x*y*dx*lens_ipow(lambda, 3) + 0.034406 *x*y*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -253.809 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + 4.28324e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 2) + -10445 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lens_ipow(lambda, 3) + -3.69872 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 112.925 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.00619433 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 7) + -5.40624e-05 *lens_ipow(y, 3)*lens_ipow(lambda, 7) + -0.0218052 *lens_ipow(x, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 5)+0.0f;
const float dx40 =  + 3.97549e-08  + -1.71305e-05 *dx + 9.71968e-09 *y + -2.1458e-07 *x + -0.0260068 *dx*lens_ipow(dy, 2) + -0.0232514 *lens_ipow(dx, 3) + -0.000324813 *y*dx*dy + -1.11621e-06 *lens_ipow(y, 2)*dx + -0.000160746 *x*lens_ipow(dy, 2) + -0.000456395 *x*lens_ipow(dx, 2) + -2.19158e-06 *x*y*dy + -8.76926e-09 *x*lens_ipow(y, 2) + -3.19901e-06 *lens_ipow(x, 2)*dx + -0.0365375 *dx*lens_ipow(dy, 4) + -3.75033e-11 *lens_ipow(x, 5) + 1.88167 *x*lens_ipow(dx, 8)+0.0f;
const float dx41 =  + 1.70581e-07  + -1.30829e-05 *dy + -4.3032e-07 *y + 9.71968e-09 *x + 6.88755e-05 *dx*dy + -0.0238315 *lens_ipow(dy, 3) + -0.0272569 *lens_ipow(dx, 2)*dy + -0.000449722 *y*lens_ipow(dy, 2) + -0.000157295 *y*lens_ipow(dx, 2) + -3.02149e-06 *lens_ipow(y, 2)*dy + -0.000324813 *x*dx*dy + -2.23242e-06 *x*y*dx + -1.09579e-06 *lens_ipow(x, 2)*dy + -8.76926e-09 *lens_ipow(x, 2)*y + -4.65854e-08 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -2.76707e-11 *lens_ipow(y, 5) + -104.61 *lens_ipow(dy, 9)+0.0f;
const float dx42 =  + -2.0734e-05  + -0.02689 *dx + -1.71305e-05 *x + 0.00266767 *dx*dy + 6.88755e-05 *y*dy + -5.54761 *dx*lens_ipow(dy, 2) + -0.0545138 *y*dx*dy + -0.000157295 *lens_ipow(y, 2)*dx + -0.0260068 *x*lens_ipow(dy, 2) + -0.0697542 *x*lens_ipow(dx, 2) + -0.000324813 *x*y*dy + -1.11621e-06 *x*lens_ipow(y, 2) + -0.000456395 *lens_ipow(x, 2)*dx + -1.06634e-06 *lens_ipow(x, 3) + -191.253 *lens_ipow(dx, 5) + -2.32927e-08 *lens_ipow(y, 4)*dx + -0.0365375 *x*lens_ipow(dy, 4) + 0.0742931 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 7.52668 *lens_ipow(x, 2)*lens_ipow(dx, 7)+0.0f;
const float dx43 =  + -0.0225969 *dy + -1.30829e-05 *y + 0.00133384 *lens_ipow(dx, 2) + 6.88755e-05 *y*dx + -5.54761 *lens_ipow(dx, 2)*dy + -0.0714945 *y*lens_ipow(dy, 2) + -0.0272569 *y*lens_ipow(dx, 2) + -0.000449722 *lens_ipow(y, 2)*dy + -1.00716e-06 *lens_ipow(y, 3) + -0.0520136 *x*dx*dy + -0.000324813 *x*y*dx + -0.000160746 *lens_ipow(x, 2)*dy + -1.09579e-06 *lens_ipow(x, 2)*y + -225.288 *lens_ipow(dy, 5) + -0.14615 *x*dx*lens_ipow(dy, 3) + 0.148586 *dx*dy*lens_ipow(lambda, 5) + -941.494 *y*lens_ipow(dy, 8)+0.0f;
const float dx44 =  + 0.301995  + -0.739448 *lens_ipow(lambda, 2) + 0.371466 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 4.73663 *lens_ipow(lambda, 10)+0.0f;
