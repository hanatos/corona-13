const float out_x =  + -7.59428e-05  + 1.85033e-05 *dy + 84.6305 *dx + 0.747087 *x + 0.00352954 *lens_ipow(dx, 2) + -1.33622e-05 *y*lambda + 0.000150834 *y*dy + 5.0693e-05 *x*dy + 0.0196686 *lens_ipow(dy, 2)*lambda + 46.1915 *dx*lens_ipow(dy, 2) + 46.1921 *lens_ipow(dx, 3) + 1.53717 *y*dx*dy + 0.00976078 *lens_ipow(y, 2)*dx + 1.0533 *x*lens_ipow(dy, 2) + 2.60023 *x*lens_ipow(dx, 2) + 0.0246052 *x*y*dy + 0.000119221 *x*lens_ipow(y, 2) + 0.0347923 *lens_ipow(x, 2)*dx + 0.000121546 *lens_ipow(x, 3) + 3.61538 *dx*lens_ipow(lambda, 3) + 0.0690261 *x*lens_ipow(lambda, 4) + -1.73912e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -0.00224725 *lens_ipow(y, 3)*lens_ipow(dx, 3)*dy + 6.22609 *x*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 1.04057e-07 *x*lens_ipow(y, 4)*lens_ipow(dy, 2) + 3.13269e-07 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + 0.143213 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4) + -0.00388815 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + -0.00211337 *lens_ipow(x, 3)*lens_ipow(dx, 4) + 3.21586e-07 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -8.59498e-09 *lens_ipow(x, 6)*dx + -0.0764266 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + -0.497948 *lens_ipow(y, 2)*lens_ipow(dx, 7) + -1.09575e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy*lens_ipow(lambda, 2) + -2.54639e-13 *lens_ipow(x, 5)*lens_ipow(y, 4) + -19.3704 *dx*lens_ipow(lambda, 10) + -134355 *lens_ipow(dx, 5)*lens_ipow(dy, 6) + -19051.8 *lens_ipow(dx, 11) + -0.33329 *x*lens_ipow(lambda, 10) + -4.57375e-16 *lens_ipow(x, 11);
const float out_y =  + 6.12477e-05  + 84.7872 *dy + 0.746666 *y + -2.20108e-06 *x + 0.00186409 *lens_ipow(dy, 2) + 0.0104643 *dx*dy + 0.000107669 *y*dx + -5.52229e-07 *lens_ipow(y, 2) + 45.764 *lens_ipow(dy, 3) + 45.4497 *lens_ipow(dx, 2)*dy + 2.57977 *y*lens_ipow(dy, 2) + 1.03579 *y*lens_ipow(dx, 2) + 0.0333983 *lens_ipow(y, 2)*dy + 9.77994e-05 *lens_ipow(y, 3) + 1.51862 *x*dx*dy + -0.000320125 *x*lens_ipow(dx, 2) + 1.75895e-05 *x*y*dy + 0.0242141 *x*y*dx + 2.68061e-07 *x*lens_ipow(y, 2) + 0.00964075 *lens_ipow(x, 2)*dy + 0.000118704 *lens_ipow(x, 2)*y + 0.0397129 *y*lens_ipow(lambda, 3) + 4.46737e-05 *lens_ipow(y, 3)*lambda + 5.08034 *dy*lens_ipow(lambda, 4) + 0.00325202 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + -0.000194699 *x*lens_ipow(y, 2)*dx*dy + 0.102767 *lens_ipow(y, 2)*lens_ipow(dy, 5) + 3.35509e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2) + -1.94021e-09 *lens_ipow(y, 6)*dy + 0.000140704 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -5.82207e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + 0.0632117 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + -4.91574e-05 *lens_ipow(y, 3)*lens_ipow(lambda, 5) + 1.30268e-05 *lens_ipow(x, 4)*lens_ipow(dy, 5) + -23.5022 *dy*lens_ipow(lambda, 10) + -38.8282 *lens_ipow(dy, 5)*lens_ipow(lambda, 6) + -21026.4 *lens_ipow(dy, 11) + -0.208208 *y*lens_ipow(lambda, 10) + -0.0128821 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 8) + -4.79269e-13 *lens_ipow(x, 2)*lens_ipow(y, 7)*lens_ipow(lambda, 2);
const float out_dx =  + -1.01853e-05  + -0.000101673 *dy + 1.61554 *dx + -1.28695e-06 *y + 0.00234223 *x + -0.000263927 *lens_ipow(dx, 2) + 9.7763e-06 *x*dy + -7.70532e-08 *x*y + 6.01015 *dx*lens_ipow(dy, 2) + 5.91073 *lens_ipow(dx, 3) + 0.114401 *y*dx*dy + 1.53991e-07 *lens_ipow(y, 2)*lambda + 0.000685094 *lens_ipow(y, 2)*dx + 0.0619327 *x*lens_ipow(dy, 2) + 0.176116 *x*lens_ipow(dx, 2) + 0.00136958 *x*y*dy + 7.91819e-06 *x*lens_ipow(y, 2) + 6.3299e-07 *lens_ipow(x, 2)*dy + 0.00206032 *lens_ipow(x, 2)*dx + 7.90609e-06 *lens_ipow(x, 3) + -0.371705 *dx*lens_ipow(lambda, 3) + -2.24639e-06 *x*y*dx*lambda + 5.25298e-06 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 8.13322e-06 *lens_ipow(x, 2)*dx*dy + 1.12403 *dx*lens_ipow(dy, 4) + 2.03708 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 2.39623 *lens_ipow(dx, 5) + 0.000194376 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -0.00388383 *x*lens_ipow(lambda, 4) + -4.06258e-08 *x*lens_ipow(y, 3)*dx*dy + -0.3833 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.0148125 *y*lens_ipow(dx, 6) + -8.02669e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -10.0134 *lens_ipow(dx, 5)*lens_ipow(lambda, 4) + 0.0332329 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 4) + 3.74882e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 5)*dy + -4.33768e-10 *lens_ipow(x, 6)*dx*lens_ipow(lambda, 2) + 2.05805 *dx*lens_ipow(lambda, 10) + 0.0194614 *x*lens_ipow(lambda, 10) + -8.22816e-05 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 6);
const float out_dy =  + -1.69957e-06  + 1.61351 *dy + -5.74518e-05 *dx + 0.00229889 *y + -8.1798e-07 *x + 9.88781e-06 *x*dy + 7.47659e-08 *x*y + 6.10845 *lens_ipow(dy, 3) + 6.01428 *lens_ipow(dx, 2)*dy + 0.177488 *y*lens_ipow(dy, 2) + 0.0617436 *y*lens_ipow(dx, 2) + 0.00207274 *lens_ipow(y, 2)*dy + 7.94144e-06 *lens_ipow(y, 3) + 0.11402 *x*dx*dy + -6.23818e-07 *x*y*dy + 0.00136732 *x*y*dx + 0.000691459 *lens_ipow(x, 2)*dy + 7.91198e-06 *lens_ipow(x, 2)*y + -0.373649 *dy*lens_ipow(lambda, 3) + -0.0123546 *dx*lens_ipow(dy, 3) + -0.000182479 *x*dx*lens_ipow(dy, 2) + 0.000880163 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 2.19076e-05 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -1.46776e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -0.00666373 *y*lens_ipow(lambda, 5) + -0.423826 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 4) + 10.1856 *lens_ipow(dx, 6)*dy + 2.09388e-08 *lens_ipow(y, 5)*lens_ipow(dx, 2) + 0.00504647 *lens_ipow(x, 2)*lens_ipow(dy, 5) + -3.64218e-12 *lens_ipow(x, 2)*lens_ipow(y, 5) + 4.63327e-09 *lens_ipow(x, 4)*y*lens_ipow(dx, 2) + -2.57684e-10 *lens_ipow(y, 6)*dy*lambda + -11.7426 *lens_ipow(dy, 5)*lens_ipow(lambda, 4) + 246.5 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + -2.31679 *y*lens_ipow(dy, 8) + 2.12372 *x*dx*lens_ipow(dy, 7) + -1.22922e-07 *lens_ipow(x, 5)*dx*lens_ipow(dy, 3) + 2.07253 *dy*lens_ipow(lambda, 10) + 0.0277972 *y*lens_ipow(lambda, 10) + 0.00527134 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 6);
const float out_transmittance =  + 0.704047  + 0.16531 *lambda + 1.92069e-07 *y + -3.09353e-07 *x + -0.115255 *lens_ipow(dy, 2) + -0.11744 *lens_ipow(dx, 2) + -0.00230642 *y*dy + 6.99894e-06 *y*dx + -1.29144e-05 *lens_ipow(y, 2) + -0.00233739 *x*dx + 1.01446e-07 *x*y + -1.28959e-05 *lens_ipow(x, 2) + -0.138704 *lens_ipow(lambda, 3) + -2.35388e-05 *y*dx*dy + -3.34568e-07 *x*y*dx + -0.884429 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 6.2599e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 9.72458e-05 *x*y*dx*dy + -1.66174e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -7.16811 *lens_ipow(dy, 6) + -9.60048 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -9.81302 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -6.92998 *lens_ipow(dx, 6) + 0.000228339 *y*dy*lens_ipow(lambda, 4) + 3.5369e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -2.45638e-11 *lens_ipow(y, 6) + 0.000207728 *x*dx*lens_ipow(lambda, 4) + 0.00010336 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 2.41699e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 3.874e-07 *lens_ipow(x, 3)*y*dx*dy + 3.53157e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -2.53779e-11 *lens_ipow(x, 6) + 0.250315 *x*y*dx*lens_ipow(dy, 7) + 0.151795 *x*y*lens_ipow(dx, 7)*dy + -1.79822e-12 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.252259 *lens_ipow(lambda, 11) + 0.0131198 *lens_ipow(y, 2)*lens_ipow(dy, 6)*lens_ipow(lambda, 3) + 0.012823 *lens_ipow(x, 2)*lens_ipow(dx, 6)*lens_ipow(lambda, 3) + -3.52943e-12 *lens_ipow(x, 2)*lens_ipow(y, 6)*lens_ipow(dy, 2)*lambda + -4.97104e-05 *lens_ipow(x, 4)*lens_ipow(dy, 6)*lambda;
