const float out_x =  + -0.000261094  + 0.000969761 *dy + 85.081 *dx + -4.2695e-06 *y + 0.246487 *x + 0.0133133 *lens_ipow(dy, 2) + -0.00381362 *dx*dy + -0.000180823 *x*dx + -1.57288e-06 *x*y + -10.7366 *dx*lens_ipow(dy, 2) + -24.9385 *lens_ipow(dx, 3) + 0.78701 *y*dx*dy + 0.00752045 *lens_ipow(y, 2)*dx + 0.0164525 *x*lens_ipow(lambda, 2) + 0.305528 *x*lens_ipow(dy, 2) + 0.00110417 *x*dx*dy + 0.558388 *x*lens_ipow(dx, 2) + 0.0163511 *x*y*dy + 0.000112311 *x*lens_ipow(y, 2) + 0.0182767 *lens_ipow(x, 2)*dx + 9.43017e-05 *lens_ipow(x, 3) + 4.6283 *dx*lens_ipow(lambda, 3) + 0.010192 *y*lens_ipow(dx, 2)*dy + 0.00674852 *y*lens_ipow(dx, 3) + -1.41703e-06 *lens_ipow(y, 3)*dx + -0.245597 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 603.492 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + -0.0205304 *x*lens_ipow(lambda, 6) + 0.000977683 *x*lens_ipow(y, 2)*lens_ipow(dy, 4) + 2.47606e-07 *lens_ipow(x, 5)*lens_ipow(dy, 2) + 2099.71 *dx*lens_ipow(dy, 8) + 3166.52 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + 3376.5 *lens_ipow(dx, 9) + 3.01862e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 4) + -1.42349e-13 *lens_ipow(x, 5)*lens_ipow(y, 4) + 6.67079e-08 *lens_ipow(x, 5)*lens_ipow(lambda, 5) + -23.6542 *dx*lens_ipow(lambda, 10) + -381.824 *lens_ipow(dx, 5)*lens_ipow(lambda, 6) + 3.04636e-05 *lens_ipow(x, 5)*lens_ipow(dx, 6) + -1.83284e-16 *lens_ipow(x, 11);
const float out_y =  + 4.70801e-05  + 100.884 *dy + -0.00145308 *dx + 0.352793 *y + -1.47034e-05 *x + 0.000232338 *y*dx + 0.000316969 *x*dy + -14.7992 *lens_ipow(dy, 3) + 0.140878 *dx*lens_ipow(dy, 2) + -17.6533 *lens_ipow(dx, 2)*dy + -0.00214473 *y*lens_ipow(lambda, 2) + 1.2553 *y*lens_ipow(dy, 2) + 0.0257109 *y*lens_ipow(dx, 2) + 0.0283398 *lens_ipow(y, 2)*dy + -1.10181e-05 *lens_ipow(y, 2)*dx + 0.000132704 *lens_ipow(y, 3) + 0.849816 *x*dx*dy + 0.0145973 *x*y*dx + 0.00955708 *lens_ipow(x, 2)*dy + 0.000120706 *lens_ipow(x, 2)*y + 0.955684 *dy*lens_ipow(lambda, 3) + 0.000107538 *lens_ipow(y, 2)*dx*dy + 1.52931e-08 *x*lens_ipow(y, 3) + 0.01849 *x*lens_ipow(dy, 4) + -0.101787 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 656.921 *lens_ipow(dx, 2)*lens_ipow(dy, 5) + 303.351 *lens_ipow(dx, 6)*dy + -0.311245 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.00139385 *lens_ipow(y, 3)*lens_ipow(dx, 4) + 2965.04 *lens_ipow(dy, 9) + -14.5789 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 6) + 3253.7 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + 18.1143 *y*lens_ipow(dx, 8) + 3.91083e-05 *lens_ipow(y, 3)*lens_ipow(lambda, 6) + 4.12057e-10 *lens_ipow(y, 7)*lens_ipow(dy, 2) + 4.07455e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 4) + -1.88498e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -250.361 *lens_ipow(dy, 5)*lens_ipow(lambda, 5) + -7.43897e-09 *lens_ipow(x, 5)*y*dx*lens_ipow(lambda, 3) + -5.41126 *dy*lens_ipow(lambda, 10);
const float out_dx =  + -1.9275e-05  + 0.632881 *dx + -3.02773e-07 *y + -0.00988675 *x + 4.47712e-05 *lens_ipow(lambda, 2) + 0.000213821 *lens_ipow(dy, 2) + -0.000669402 *lens_ipow(dx, 2) + 5.62706e-06 *y*dx + 2.86198e-06 *x*dy + -1.41666e-05 *x*dx + 0.490736 *dx*lens_ipow(dy, 2) + 0.0608098 *lens_ipow(dx, 3) + 0.0174817 *y*dx*dy + 7.91228e-05 *lens_ipow(y, 2)*dx + 0.00822392 *x*lens_ipow(dy, 2) + 1.33317e-05 *x*dx*dy + 0.0159951 *x*lens_ipow(dx, 2) + 0.000263716 *x*y*dy + 1.91408e-06 *x*lens_ipow(y, 2) + 0.000251144 *lens_ipow(x, 2)*dx + 1.62763e-06 *lens_ipow(x, 3) + 0.0868976 *dx*lens_ipow(lambda, 3) + 3.16313e-06 *lens_ipow(y, 2)*dx*dy + 4.15778e-08 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -9.08157e-06 *x*y*dx*dy + 0.00155659 *x*lens_ipow(lambda, 4) + -0.00804126 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 4.56061 *dx*lens_ipow(dy, 6) + 13.7318 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 2.50492e-07 *lens_ipow(y, 4)*lens_ipow(dx, 3) + -1.80694e-07 *x*lens_ipow(y, 3)*lens_ipow(dy, 3) + 9.58079e-06 *lens_ipow(x, 3)*lens_ipow(dy, 4) + 40.4632 *lens_ipow(dx, 9) + -0.0200322 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 6) + 1.86769e-09 *lens_ipow(x, 5)*lens_ipow(lambda, 5) + -0.40591 *dx*lens_ipow(lambda, 10) + -2.51256 *lens_ipow(dx, 3)*lens_ipow(lambda, 8) + -0.00744357 *x*lens_ipow(lambda, 10) + -3.57102e-08 *lens_ipow(x, 5)*y*lens_ipow(dx, 4)*dy + -7.56831e-18 *lens_ipow(x, 9)*lens_ipow(y, 2);
const float out_dy =  + 1.53134e-06  + 0.729408 *dy + -2.72508e-05 *dx + -0.00735353 *y + -3.55084e-07 *x + 6.77923e-06 *y*dx + 8.61642e-06 *x*dy + 6.49955e-08 *x*y + 0.403091 *lens_ipow(dy, 3) + 0.0011267 *dx*lens_ipow(dy, 2) + 0.217937 *lens_ipow(dx, 2)*dy + 0.0245462 *y*lens_ipow(dy, 2) + 0.000241935 *y*lens_ipow(dx, 2) + 0.000337505 *lens_ipow(y, 2)*dy + 1.87897e-06 *lens_ipow(y, 3) + 0.0218538 *x*dx*dy + 0.000217494 *x*y*dx + 3.57617e-09 *x*lens_ipow(y, 2) + 8.90972e-05 *lens_ipow(x, 2)*dy + 1.79796e-06 *lens_ipow(x, 2)*y + 0.00781694 *dy*lens_ipow(lambda, 3) + 3.71931e-06 *lens_ipow(y, 2)*dx*dy + -8.15485e-06 *lens_ipow(x, 2)*dy*lambda + -2.04567e-10 *lens_ipow(x, 2)*lens_ipow(y, 3) + 8.40185e-05 *y*lens_ipow(lambda, 5) + 2.76346e-07 *lens_ipow(y, 3)*lens_ipow(lambda, 3) + 2.48696 *lens_ipow(dx, 6)*dy + -0.00745108 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 1.93403e-05 *lens_ipow(y, 3)*lens_ipow(dx, 4) + -0.00671151 *x*dx*dy*lens_ipow(lambda, 4) + -2.05037e-07 *lens_ipow(x, 3)*y*lens_ipow(dx, 3) + 5.54073e-07 *lens_ipow(x, 2)*y*lens_ipow(lambda, 5) + 134.301 *lens_ipow(dx, 2)*lens_ipow(dy, 7) + 125.85 *lens_ipow(dx, 6)*lens_ipow(dy, 3) + -0.00682796 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 6) + 1.83802e-06 *lens_ipow(x, 4)*lens_ipow(dy, 5) + -1.56971 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 7) + -9.03264 *lens_ipow(dy, 5)*lens_ipow(lambda, 6) + 405.708 *lens_ipow(dy, 11) + -3.15991e-08 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 4);
const float out_transmittance =  + 0.374472  + 0.276112 *lambda + 5.30855e-05 *dy + 4.9898e-07 *y + -1.45201e-07 *x + -0.0899688 *lens_ipow(dy, 2) + 0.000537315 *dx*dy + -0.0898437 *lens_ipow(dx, 2) + -0.00181022 *y*dy + 1.20214e-05 *y*dx + -1.05629e-05 *lens_ipow(y, 2) + -0.00174541 *x*dx + 1.41319e-07 *x*y + -1.14053e-05 *lens_ipow(x, 2) + -0.229326 *lens_ipow(lambda, 3) + -9.13355e-06 *x*lens_ipow(dy, 2) + -3.94553e-07 *lens_ipow(x, 2)*dy + -0.578193 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.02007e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.06175e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -1.05414e-06 *lens_ipow(x, 2)*y*dy + -1.1974e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.71981e-06 *lens_ipow(x, 3)*dx + -4.02729 *lens_ipow(dy, 6) + -6.402 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + -4.27945 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + -4.72936 *lens_ipow(dx, 6) + 2.03356e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -1.43832e-11 *lens_ipow(y, 6) + 2.80885e-07 *x*lens_ipow(y, 3)*dx*dy + -1.26588e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 5.99488e-07 *lens_ipow(x, 3)*lens_ipow(dy, 3) + -1.99595e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + 2.57729e-06 *lens_ipow(x, 3)*y*lens_ipow(dx, 3)*dy + -6.15097e-14 *lens_ipow(x, 8) + -2.87909e-09 *lens_ipow(y, 6)*lens_ipow(dx, 4) + 2.46254e-05 *lens_ipow(x, 4)*lens_ipow(dx, 6) + -1.28103e-16 *lens_ipow(x, 6)*lens_ipow(y, 4) + 0.410964 *lens_ipow(lambda, 11) + 0.198624 *x*y*dx*lens_ipow(dy, 7)*lambda;
